%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 66 591 307 786 
%%LanguageLevel: 2
%%Creator: CorelDRAW X5
%%Title: Logo_BRC_BUL.eps
%%CreationDate: Tue Jan 20 16:00:49 2015
%%DocumentProcessColors: Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X5 Version 15.1.0.588
/EpsFile true def
%%BeginResource: procset wCorel15Dict 15.0 0
/wCorel15Dict 300 dict def wCorel15Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparation/LumSepsDict where
{pop false}{/AldusSepsDict where{pop false}{InRipSeparation{true}{1 0 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not}ifelse
}ifelse}ifelse def/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{
deviceinfo/Colors get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict
/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{
false}ifelse}ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode
/OnHost ne InRipSeparation AdobeDistiller or and}bind}{false}ifelse def
/DocGrayScaleSpace[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace
[/DeviceCMYK]def/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[
0.9637 1.0000 0.8241]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116
div}bind{500 div}bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[
{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul
}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000
mul}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse
0.8241 mul}bind]>>]def/validate_cie_colorspace_whitepoint{load dup aload pop
/WhitePoint get 1 1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE
where{pop/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint
/DocGrayScaleSpace xd DocGrayScaleSpace aload pop begin pop/DecodeA where{pop
DecodeA type/arraytype eq{DecodeA aload pop/DecodeA exch def}if}if end}if
/DocRgbSpaceCIE where{pop/DocRgbSpaceCIE validate_cie_colorspace_whitepoint
/DocRgbSpace xd}if/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE
validate_cie_colorspace_whitepoint/DocCmykSpace xd}if}bd/set_rendering_intent{
Level3{findcolorrendering{/ColorRendering findresource setcolorrendering}{dup
/DefaultColorRendering eq{pop}{/ColorRendering findresource setcolorrendering}
}ifelse}{pop}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5
array astore}def}ifelse/setcustomcolor where SeparationMode/OnHost ne and{pop}
{/tint_cmyk_color{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}
ifelse}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll
pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch
aload pop SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{
CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd
}ifelse/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}
repeat 3 copy min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd
/safe_setcolorspace{dup currentcolorspace eq{pop}{setcolorspace}ifelse}bd
/safe_setoverprint{dup type/booleantype eq{dup currentoverprint ne{
setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse}bd/is_cmyk_channel_name{
/channel_name xd channel_name/Cyan eq channel_name/Magenta eq or channel_name
/Yellow eq or channel_name/Black eq or{true}{false}ifelse}bd
/is_rgb_channel_name{/channel_name xd channel_name/Red eq channel_name/Green eq
or channel_name/Blue eq or{true}{false}ifelse}bd/is_spot_channel_name{
/channel_name xd channel_name is_cmyk_channel_name channel_name
is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse}bd
/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSpace safe_setcolorspace color aload pop setcolor}bd/separate_set_color{
SeparationMode/OnHost eq{separate_color{/set_color dexec true}{pop
currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1 SetGry true}
ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{currentdict false
}bd/convert_to_cmyk{currentdict}bd currentdict end def/GrayscaleColorSpec
ColorSpec 9 dict copy begin/names{/Black}def/num 1 def/ColorModel/Grayscale def
/ColorSpace DocGrayScaleSpace def/separate_color{SeparationMode/OnHost eq{
SeparationPlateName/Black eq{SeparateInColor{convert_to_cmyk true}{currentdict
true}ifelse}{currentdict false}ifelse}{currentdict false}ifelse}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9 dict copy begin
/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk def/ColorSpace
DocCmykSpace def/separate_color{currentdict false SeparationPlateIndex 0 ge
SeparationPlateIndex 3 le and{color SeparationPlateIndex get dup 0 gt{3 1 roll
pop pop SeparateInColor{0 0 0 4 SeparationPlateIndex roll create_cmyk_color
true}{1 exch sub create_grayscale_color true}ifelse}{pop}ifelse}if}bd
/convert_to_cmyk{currentdict}bd currentdict end def/create_cmyk_color{
CmykColorSpec 9 dict copy begin 4 array astore/color exch def/ColorSpace
DocCmykSpace def currentdict end}bd/SpotColorSpec ColorSpec 9 dict copy begin
/num 1 def/ColorModel/Spot def/separate_color{currentdict false
SeparationPlateIndex 4 eq{names aload pop SeparationPlateName eq{pop pop color
aload pop dup 0 gt{SeparateInColor{pop convert_to_cmyk true}{1 exch sub
create_grayscale_color true}ifelse}if}if}if}bd/convert_to_cmyk{
/alternativeSpace ColorSpace 2 get def/tintTransformProc ColorSpace 3 get def
alternativeSpace DocCmykSpace eq{color aload pop tintTransformProc
create_cmyk_color}{alternativeSpace DocRgbSpace eq{color aload pop
tintTransformProc create_rgb_color/convert_to_cmyk dexec}{alternativeSpace
DocGrayScaleSpace eq{0 0 0 color aload pop 1 sub create_cmyk_color}if}ifelse}
ifelse}bd currentdict end def/create_spot_colorspace{load/alternativeSpace xd
/alternativeColor xd/name xd[/Separation name alternativeSpace[
alternativeColor alternativeSpace/spot_tint_transform_proc cvx]cvx]}bd
/create_spot_color{SpotColorSpec 9 dict copy begin dup type/arraytype ne{
create_spot_colorspace}if/ColorSpace xd/color exch 1 array astore def
ColorSpace 1 get 1 array astore/names xd currentdict end}bd/DevicenColorSpec
SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def/set_color{Level3{
ColorSpace safe_setcolorspace color aload pop setcolor}{ColorSpace 2 get
setcolorspace color aload pop ColorSpace 3 get exec setcolor}ifelse}bd
/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup names
exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex 0 ge
{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/separate_color{SeparateInColor{convert_to_cmyk true}{color
aload pop 1 exch sub create_grayscale_color true}ifelse}bd/convert_to_cmyk{
color aload pop dup dup dup create_cmyk_color}bd currentdict end def
/create_registration_color{RegistrationColorSpec 9 dict copy begin 1 array
astore/color xd currentdict end}bd/LabColorSpec ColorSpec 9 dict copy begin
/names{/L/a/b}def/num 3 def/ColorModel/Lab def/ColorSpace DocLabSpace def
/separate_color{convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{0 0 0 0
create_cmyk_color}bd currentdict end def/create_lab_color{LabColorSpec 9 dict
copy begin 3 array astore/color exch def/ColorSpace DocLabSpace def currentdict
end}bd/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd
}bd/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{
@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/setcmykcolor{create_cmyk_color/separate_set_color dexec
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi string def DevicenImage{/readstrip{DataSource stripBuffer
readhexstring pop}bd}{/readstrip{DataSource stripBuffer readstring pop}bd
}ifelse/stripHeight $lly $ury sub stripRows mul $hei div def/stripOutBuffer
$wid stripRows mul numPlanes mul string def/strip_img_dict 8 dict def
strip_img_dict begin/ImageType 1 def/Width $wid def/Height stripRows def
/BitsPerComponent $bts def/Decode[numPlanes{0 1}repeat]def/ImageMatrix[$wid 0 0
stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]def/DataSource stripOutBuffer def
end}bd/separate_output_color_image{/plateContent false def $ncl 1 eq{
SeparationPlateName/Black eq{output_color_image/plateContent true def}if}{@np
/DataSource create_datasource def SeparateInColor{DocCmykSpace setcolorspace
/numPlanes 4 def}{DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse
/stripRows 65535 $wid $bts mul $ncl numPlanes max mul div floor cvi def
numPlanes stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div
ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury
stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add
ceiling cvi def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex
stripRows mul sub set_image_strip_parameters/$t_lly $t_ury stripHeight add
ceiling cvi def}if readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex
xd stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage
{ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if $llx $lly
Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor/separate_set_color
dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}ifelse[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq{imagemask}{image}ifelse $SDF
{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}ifelse}bd
/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/$dat
$wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq $ncl 1 eq
or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl 3 eq{
dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def/@cc1
load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch string
def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load/@cc3 load
/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp @ss}if}bd
/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{currentfile $dat2
readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop}bd/@cc4{
currentfile $dat4 readhexstring pop}bd/$msimage false def/ImageCompression
/None def/MaskedImage false def/DevicenImage false def/output_color_image{@np
$ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse
setcolorspace/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $ngx
$llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def
/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}
repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource create_datasource def currentdict end image $SDF{$dsf $dsa $dsp
@ss}if}bd/simulate_devicen_image{@np $ngx/colorantNames ImageDevicenSpace 1 get
def/altColorSpace ImageDevicenSpace 2 get def/tintProc ImageDevicenSpace 3 get
def/DataSource create_datasource def/stripRows 65535 $wid $bts mul $ncl mul div
floor cvi def 1 stripRows set_image_strip_parameters/maxStripIndex $hei
stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def
/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury
stripHeight add ceiling cvi def stripIndex maxStripIndex eq{1 $hei
maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs $llx $t_lly Tl $urx $llx
sub $t_ury $t_lly sub scale 0 1 $ncl 1 sub{@gs/inkIndex exch def 0 1
stripOutBuffer length 1 sub{dup $ncl mul inkIndex add stripBuffer exch get
stripOutBuffer 3 1 roll put}for[/Separation colorantNames inkIndex get
altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll tintProc}]setcolorspace
inkIndex 0 gt{true setoverprint}if strip_img_dict image @gr}for @gr}for $SDF
{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx/colorantNames
ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2 get def/tintProc
ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{/numAltChannels 4 def
}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{/numAltChannels 1 def}
ifelse}ifelse/DataSource create_datasource def altColorSpace setcolorspace
/stripRows 65535 $wid $bts mul $ncl numAltChannels max mul div floor cvi def
numAltChannels stripRows set_image_strip_parameters/maxStripIndex $hei
stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def
/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury
stripHeight add ceiling cvi def stripIndex maxStripIndex eq{numAltChannels $hei
maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs 0 1 $wid stripRows mul 1
sub{/pixelIndex xd stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}
forall tintProc exec numAltChannels array astore/pixelAltIndex pixelIndex
numAltChannels mul def/posColorant 0 def{stripOutBuffer pixelAltIndex
posColorant add 3 -1 roll 255 mul cvi put/posColorant posColorant 1 add def}
forall}for $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale strip_img_dict
image @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_native{@np
$ngx ImageDevicenSpace setcolorspace/scanline $wid $bts mul $ncl mul 8 div
ceiling cvi string def/readscanline{currentfile scanline readhexstring pop}
bind def $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType
1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl
{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource{readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}
bd/output_devicen_image{Level3{output_devicen_image_native}{
get_simulate_devicen{simulate_devicen_image}{output_devicen_image_alt}ifelse}
ifelse}bd/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi string def 0 1 $hei 1 sub{pop currentfile
scanline readhexstring pop pop}for}ifelse}bd/disable_raster_output{deflevel 0
eq{@rs}if/output_image load/output_image_original exch def/output_image
/skip_image_body load def globaldict begin/bSkipDeviceNImage true def end
deflevel 0 eq{@sv}if}def/enable_raster_output{deflevel 0 eq{@rs}if
/bSkipDeviceNImage where{/bSkipDeviceNImage undef/output_image
/output_image_original load def}if deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel15Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
125.84920 666.91502 244.79150 785.85732 @E
/$fm 0 def
 0 O 0 @g
0.00 1.00 1.00 0.00  create_cmyk_color set_solid_fill
165.49654 785.85732 m
205.14416 785.85732 L
205.14416 746.20998 L
244.79150 746.20998 L
244.79150 706.56236 L
205.14416 706.56236 L
205.14416 666.91502 L
165.49654 666.91502 L
165.49654 706.56236 L
125.84920 706.56236 L
125.84920 746.20998 L
165.49654 746.20998 L
165.49654 785.85732 L
@c
F

@rax %Note: Object
66.26353 591.42954 306.25455 648.57997 @E
/$fm 1 def
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
93.01550 648.20580 m
109.48252 648.20580 L
109.48252 644.50828 L
97.46164 644.50828 L
97.46164 639.40025 L
103.41043 639.40025 l
105.05679 639.40025 106.41572 639.20041 107.49770 638.80044 c
108.57997 638.40019 109.50293 637.65666 110.27225 636.57468 C
111.03647 635.49241 111.42113 634.22589 111.42113 632.77455 c
111.42113 631.28211 111.03647 630.00510 110.26205 628.94353 C
109.49272 627.88195 108.61569 627.15373 107.62611 626.76397 C
106.64135 626.37420 105.23622 626.17946 103.41043 626.17946 c
93.01550 626.17946 L
93.01550 648.20580 L
@c
97.46164 629.87698 m
101.78986 629.87698 l
103.17458 629.87698 104.14403 629.94359 104.70302 630.07710 C
105.26712 630.21543 105.75411 630.52328 106.16967 631.00006 C
106.58494 631.48224 106.79528 632.07184 106.79528 632.77455 c
106.79528 633.79502 106.43102 634.53855 105.70280 635.00542 C
104.97969 635.47200 103.73868 635.70274 101.98488 635.70274 c
97.46164 635.70274 L
97.46164 629.87698 L
@c
112.02094 648.20580 m
123.03666 648.20580 L
123.03666 639.40025 L
128.98545 639.40025 l
130.55471 639.40025 131.89833 639.19531 133.01121 638.77975 C
134.12409 638.35937 135.05754 637.61046 135.82148 636.52337 C
136.58060 635.43600 136.96016 634.17458 136.96016 632.72835 c
136.96016 631.22570 136.57550 629.94359 135.80617 628.88202 C
135.03175 627.82044 134.16520 627.10781 133.19065 626.73335 C
132.22148 626.36400 130.81635 626.17946 128.98545 626.17946 c
118.58513 626.17946 L
118.58513 644.50828 L
112.02094 644.50828 L
112.02094 648.20580 L
@c
123.03666 629.87698 m
127.35978 629.87698 l
128.71361 629.87698 129.67795 629.94359 130.25225 630.08731 C
130.83165 630.22564 131.32403 630.53348 131.73931 631.01027 c
132.15487 631.48734 132.36520 632.07184 132.36520 632.77455 c
132.36520 633.76441 132.01115 634.50283 131.30362 634.98472 C
130.60091 635.46690 129.34970 635.70274 127.55480 635.70274 c
123.03666 635.70274 L
123.03666 629.87698 L
@c
142.20624 648.20580 m
157.63748 648.20580 L
157.63748 626.17946 L
153.19134 626.17946 L
153.19134 644.47739 L
146.56535 644.47739 L
146.56535 635.07203 l
146.56535 632.37969 146.47294 630.49748 146.29351 629.43080 c
146.11408 628.36413 145.67301 627.53329 144.98079 626.93858 C
144.28318 626.34359 143.19609 626.04624 141.70876 626.04624 c
141.19087 626.04624 140.24211 626.09216 138.87298 626.19477 C
138.87298 629.63603 L
139.86255 629.62072 L
140.79600 629.62072 141.42161 629.74375 141.73965 629.99490 C
142.06280 630.24633 142.22154 630.86173 142.22154 631.84620 C
142.20624 635.63102 L
142.20624 648.20580 L
@c
162.44277 648.20580 m
177.36633 648.20580 L
177.36633 644.50828 L
166.89430 644.50828 L
166.89430 626.17946 L
162.44277 626.17946 L
162.44277 648.20580 L
@c
197.58728 626.17946 m
192.74627 626.17946 L
190.82296 631.18460 L
182.01770 631.18460 L
180.20211 626.17946 L
175.48413 626.17946 L
184.06375 648.20580 L
188.76643 648.20580 L
197.58728 626.17946 L
@c
189.39742 634.89260 m
186.36123 643.06715 L
183.38683 634.89260 L
189.39742 634.89260 L
@c
199.94627 626.17946 m
199.94627 648.20580 L
207.07994 648.20580 l
209.78249 648.20580 211.54649 648.09298 212.36712 647.87244 C
213.62882 647.54419 214.69039 646.82617 215.54164 645.71839 c
216.39288 644.61061 216.81865 643.17997 216.81865 641.43128 c
216.81865 640.07717 216.57231 638.93877 216.07994 638.02091 C
215.58784 637.09767 214.96734 636.37455 214.20822 635.84646 C
213.45449 635.32318 212.68517 634.97452 211.90564 634.80529 C
210.84406 634.59496 209.30542 634.48753 207.28998 634.48753 c
204.39269 634.48753 L
204.39269 626.17946 L
199.94627 626.17946 L
@c
204.39269 644.47739 m
204.39269 638.23096 L
206.82340 638.23096 l
208.57720 638.23096 209.75159 638.34378 210.34148 638.57480 c
210.93109 638.80554 211.39285 639.16441 211.73131 639.65679 C
212.06466 640.14917 212.23389 640.71836 212.23389 641.36976 c
212.23389 642.16970 211.99776 642.83131 211.52608 643.35430 C
211.05950 643.87219 210.45940 644.20044 209.74139 644.32857 C
209.20819 644.43118 208.14151 644.47739 206.54135 644.47739 c
204.39269 644.47739 L
@c
233.79846 634.27720 m
238.10627 632.91288 L
237.44466 630.50769 236.34737 628.72299 234.80872 627.55398 C
233.27546 626.38980 231.32154 625.80501 228.95717 625.80501 c
226.03408 625.80501 223.62888 626.80507 221.74696 628.80009 C
219.86476 630.80022 218.92110 633.53339 218.92110 636.99506 c
218.92110 640.66195 219.86986 643.50822 221.76227 645.53896 C
223.65468 647.56460 226.14180 648.57997 229.22901 648.57997 c
231.92135 648.57997 234.11140 647.78513 235.79348 646.19036 C
236.79865 645.25181 237.54728 643.89798 238.04986 642.13370 C
233.64454 641.08233 L
233.38828 642.22611 232.84460 643.12866 232.01376 643.79027 C
231.18803 644.45187 230.18287 644.77984 229.00337 644.77984 c
227.37260 644.77984 226.04428 644.19534 225.02891 643.02094 C
224.01354 641.85165 223.50586 639.95414 223.50586 637.32841 c
223.50586 634.54394 224.00334 632.55912 225.00850 631.37962 C
226.00857 630.19502 227.31109 629.60513 228.91124 629.60513 c
230.09584 629.60513 231.11121 629.97959 231.96246 630.73332 C
232.81370 631.48224 233.42400 632.66683 233.79846 634.27720 C
@c
241.99852 648.20580 m
246.44494 648.20580 L
246.44494 638.83106 L
247.43991 638.92857 248.11172 639.18482 248.46038 639.59528 c
248.80904 640.00545 249.35272 641.14923 250.08094 643.02094 C
251.00391 645.40573 251.93225 646.88769 252.86031 647.46737 C
253.78356 648.05187 255.27090 648.33902 257.32205 648.33902 c
257.42466 648.33902 257.64009 648.34413 257.96835 648.35433 C
257.96835 645.06728 L
257.33764 645.08258 L
256.42970 645.08258 255.76299 644.96976 255.34261 644.74413 c
254.92195 644.51849 254.57839 644.17493 254.32214 643.71317 C
254.06050 643.25169 253.67584 642.30803 253.16306 640.87228 C
252.89121 640.11317 252.59896 639.47735 252.28602 638.96457 C
251.96825 638.45660 251.40926 637.97471 250.60904 637.52343 C
251.59890 637.24139 252.41953 636.67729 253.06554 635.82576 C
253.71184 634.97452 254.41937 633.76951 255.18869 632.22066 C
258.19398 626.17946 L
252.96803 626.17946 L
250.33720 631.87200 L
250.29638 631.95392 250.21417 632.10784 250.08094 632.33858 C
250.03474 632.42079 249.84510 632.76435 249.52706 633.37465 C
248.95786 634.45663 248.48589 635.13354 248.12192 635.40539 c
247.75767 635.67723 247.19868 635.81556 246.44494 635.82576 C
246.44494 626.17946 L
241.99852 626.17946 L
241.99852 648.20580 L
@c
260.76331 648.20580 m
264.92769 648.20580 L
264.92769 633.54387 L
273.85087 648.20580 L
278.28170 648.20580 L
278.28170 626.17946 L
274.12271 626.17946 L
274.12271 640.55934 L
265.20973 626.17946 L
260.76331 626.17946 L
260.76331 648.20580 L
@c
66.26353 613.83033 m
70.70967 613.83033 L
70.70967 608.57376 l
70.70967 606.87099 70.77628 605.73770 70.89931 605.18381 C
71.02261 604.62482 71.39679 604.14293 72.01729 603.73247 c
72.63780 603.32230 73.55083 603.11707 74.75074 603.11707 c
75.70460 603.11707 76.55074 603.21969 77.29455 603.42491 C
78.03298 603.62986 78.67389 603.93260 79.21757 604.33257 C
79.21757 613.83033 L
83.66400 613.83033 L
83.66400 591.80400 L
79.21757 591.80400 L
79.21757 600.67077 L
78.31502 600.26570 77.42778 599.96324 76.55613 599.75802 C
75.68419 599.55307 74.82784 599.45046 73.98680 599.45046 c
71.79165 599.45046 69.95594 599.96835 68.47880 601.00413 C
67.00195 602.04529 66.26353 603.84019 66.26353 606.39420 c
66.26353 613.83033 L
@c
88.24847 591.80400 m
88.24847 613.83033 L
104.57717 613.83033 L
104.57717 610.10192 L
92.69490 610.10192 L
92.69490 605.21981 L
103.75143 605.21981 L
103.75143 601.51209 L
92.69490 601.51209 L
92.69490 595.51682 L
104.99754 595.51682 L
104.99754 591.80400 L
88.24847 591.80400 L
@c
108.77216 591.80400 m
108.77216 613.83033 L
115.90583 613.83033 l
118.60838 613.83033 120.37238 613.71751 121.19301 613.49698 C
122.45471 613.16872 123.51628 612.45071 124.36753 611.34293 c
125.21877 610.23515 125.64454 608.80450 125.64454 607.05581 c
125.64454 605.70170 125.39820 604.56331 124.90583 603.64545 C
124.41373 602.72220 123.79323 601.99909 123.03411 601.47099 C
122.28038 600.94772 121.51106 600.59906 120.73153 600.42983 C
119.66995 600.21950 118.13131 600.11206 116.11587 600.11206 c
113.21858 600.11206 L
113.21858 591.80400 L
108.77216 591.80400 L
@c
113.21858 610.10192 m
113.21858 603.85550 L
115.64929 603.85550 l
117.40309 603.85550 118.57748 603.96831 119.16737 604.19934 c
119.75698 604.43008 120.21874 604.78894 120.55720 605.28132 C
120.89055 605.77370 121.05978 606.34290 121.05978 606.99430 c
121.05978 607.79424 120.82365 608.45584 120.35197 608.97883 C
119.88539 609.49672 119.28529 609.82498 118.56728 609.95310 C
118.03408 610.05572 116.96740 610.10192 115.36724 610.10192 c
113.21858 610.10192 L
@c
129.30605 613.83033 m
138.11159 613.83033 l
139.85518 613.83033 141.15770 613.75833 142.01405 613.60980 C
142.87068 613.46608 143.63461 613.16362 144.31153 612.70214 c
144.98872 612.24038 145.54772 611.63008 145.99899 610.86104 C
146.45027 610.09682 146.67591 609.23537 146.67591 608.28661 c
146.67591 607.25565 146.39896 606.30690 145.84507 605.44545 C
145.28608 604.58372 144.53206 603.93770 143.58331 603.50683 C
144.92183 603.11707 145.95789 602.45036 146.67591 601.51209 C
147.39902 600.56844 147.75789 599.46066 147.75789 598.18876 c
147.75789 597.18869 147.52715 596.21443 147.06057 595.26567 C
146.59370 594.32202 145.95789 593.56290 145.15257 592.99880 c
144.34753 592.43471 143.35257 592.08605 142.16797 591.95282 C
141.42954 591.87572 139.63975 591.82441 136.80369 591.80400 C
129.30605 591.80400 L
129.30605 613.83033 L
@c
133.75757 610.16343 m
133.75757 605.07099 L
136.67046 605.07099 l
138.40384 605.07099 139.48072 605.09679 139.90139 605.14809 C
140.66022 605.23512 141.26031 605.49676 141.69628 605.93272 c
142.13225 606.36841 142.34740 606.94299 142.34740 607.65562 c
142.34740 608.33792 142.16287 608.89153 141.78841 609.31729 C
141.40913 609.74306 140.85014 609.99931 140.11143 610.08661 C
139.67065 610.13792 138.40384 610.16343 136.31131 610.16343 c
133.75757 610.16343 L
@c
133.75757 601.40438 m
133.75757 595.51682 L
137.87036 595.51682 l
139.47562 595.51682 140.49099 595.55792 140.92186 595.65033 C
141.58346 595.76825 142.12176 596.06561 142.53732 596.52709 C
142.95260 596.99395 143.16293 597.61956 143.16293 598.39909 c
143.16293 599.06069 142.99880 599.61969 142.68076 600.08117 C
142.35789 600.54265 141.89613 600.88110 141.29093 601.09143 c
140.68602 601.30176 139.36791 601.40438 137.34737 601.40438 c
133.75757 601.40438 L
@c
151.51691 591.80400 m
151.51691 613.83033 L
167.84561 613.83033 L
167.84561 610.10192 L
155.96334 610.10192 L
155.96334 605.21981 L
167.01987 605.21981 L
167.01987 601.51209 L
155.96334 601.51209 L
155.96334 595.51682 L
168.26598 595.51682 L
168.26598 591.80400 L
151.51691 591.80400 L
@c
172.05080 591.80400 m
172.05080 613.83033 L
176.50233 613.83033 L
176.50233 605.16340 L
185.21546 605.16340 L
185.21546 613.83033 L
189.66161 613.83033 L
189.66161 591.80400 L
185.21546 591.80400 L
185.21546 601.43499 L
176.50233 601.43499 L
176.50233 591.80400 L
172.05080 591.80400 L
@c
202.88239 613.83033 m
207.32882 613.83033 L
207.32882 604.45559 L
208.32378 604.55310 208.99559 604.80935 209.34425 605.21981 c
209.69291 605.62998 210.23660 606.77376 210.96482 608.64548 C
211.88778 611.03027 212.81613 612.51222 213.74419 613.09191 C
214.66743 613.67641 216.15477 613.96356 218.20592 613.96356 c
218.30854 613.96356 218.52397 613.96866 218.85222 613.97887 C
218.85222 610.69181 L
218.22151 610.70712 L
217.31357 610.70712 216.64687 610.59430 216.22649 610.36866 c
215.80583 610.14302 215.46227 609.79946 215.20602 609.33770 C
214.94438 608.87622 214.55972 607.93257 214.04693 606.49682 C
213.77509 605.73770 213.48283 605.10189 213.16989 604.58910 C
212.85213 604.08113 212.29313 603.59924 211.49291 603.14797 C
212.48277 602.86592 213.30340 602.30183 213.94942 601.45030 C
214.59572 600.59906 215.30324 599.39405 216.07257 597.84520 C
219.07786 591.80400 L
213.85191 591.80400 L
211.22107 597.49654 L
211.18025 597.57846 211.09805 597.73238 210.96482 597.96312 C
210.91861 598.04532 210.72898 598.38888 210.41093 598.99918 C
209.84173 600.08117 209.36976 600.75808 209.00580 601.02992 c
208.64154 601.30176 208.08255 601.44009 207.32882 601.45030 C
207.32882 591.80400 L
202.88239 591.80400 L
202.88239 613.83033 L
@c
221.59077 591.80400 m
221.59077 613.83033 L
228.72444 613.83033 l
231.42699 613.83033 233.19099 613.71751 234.01162 613.49698 C
235.27332 613.16872 236.33490 612.45071 237.18614 611.34293 c
238.03739 610.23515 238.46315 608.80450 238.46315 607.05581 c
238.46315 605.70170 238.21682 604.56331 237.72444 603.64545 C
237.23235 602.72220 236.61184 601.99909 235.85272 601.47099 C
235.09899 600.94772 234.32967 600.59906 233.55014 600.42983 C
232.48857 600.21950 230.94992 600.11206 228.93449 600.11206 c
226.03720 600.11206 L
226.03720 591.80400 L
221.59077 591.80400 L
@c
226.03720 610.10192 m
226.03720 603.85550 L
228.46791 603.85550 l
230.22170 603.85550 231.39609 603.96831 231.98598 604.19934 c
232.57559 604.43008 233.03735 604.78894 233.37581 605.28132 C
233.70917 605.77370 233.87839 606.34290 233.87839 606.99430 c
233.87839 607.79424 233.64227 608.45584 233.17058 608.97883 C
232.70400 609.49672 232.10391 609.82498 231.38589 609.95310 C
230.85269 610.05572 229.78602 610.10192 228.18586 610.10192 c
226.03720 610.10192 L
@c
240.26315 613.83033 m
251.27887 613.83033 L
251.27887 605.02479 L
257.22765 605.02479 l
258.79691 605.02479 260.14054 604.81984 261.25342 604.40428 C
262.36630 603.98391 263.29975 603.23499 264.06369 602.14791 C
264.82280 601.06054 265.20236 599.79912 265.20236 598.35288 c
265.20236 596.85024 264.81770 595.56813 264.04838 594.50655 C
263.27395 593.44498 262.40740 592.73235 261.43285 592.35789 C
260.46369 591.98854 259.05855 591.80400 257.22765 591.80400 c
246.82734 591.80400 L
246.82734 610.13282 L
240.26315 610.13282 L
240.26315 613.83033 L
@c
251.27887 595.50151 m
255.60198 595.50151 l
256.95581 595.50151 257.92016 595.56813 258.49446 595.71184 C
259.07386 595.85017 259.56624 596.15802 259.98151 596.63480 c
260.39707 597.11187 260.60740 597.69638 260.60740 598.39909 c
260.60740 599.38894 260.25335 600.12737 259.54583 600.60926 C
258.84312 601.09143 257.59191 601.32728 255.79701 601.32728 c
251.27887 601.32728 L
251.27887 595.50151 L
@c
282.96680 599.90173 m
287.27461 598.53742 L
286.61301 596.13222 285.51572 594.34753 283.97707 593.17852 C
282.44381 592.01433 280.48989 591.42954 278.12551 591.42954 c
275.20243 591.42954 272.79723 592.42961 270.91531 594.42463 C
269.03310 596.42476 268.08945 599.15792 268.08945 602.61959 c
268.08945 606.28649 269.03820 609.13276 270.93061 611.16350 C
272.82302 613.18913 275.31014 614.20450 278.39735 614.20450 c
281.08970 614.20450 283.27975 613.40967 284.96183 611.81490 C
285.96699 610.87635 286.71562 609.52252 287.21820 607.75824 C
282.81288 606.70687 L
282.55663 607.85065 282.01294 608.75320 281.18211 609.41480 C
280.35638 610.07641 279.35121 610.40438 278.17172 610.40438 c
276.54094 610.40438 275.21263 609.81987 274.19726 608.64548 C
273.18189 607.47619 272.67420 605.57868 272.67420 602.95294 c
272.67420 600.16847 273.17169 598.18365 274.17685 597.00416 C
275.17691 595.81956 276.47943 595.22967 278.07959 595.22967 c
279.26419 595.22967 280.27956 595.60413 281.13080 596.35786 C
281.98205 597.10677 282.59235 598.29137 282.96680 599.90173 C
@c
295.28504 591.80400 m
295.28504 610.10192 L
288.75146 610.10192 L
288.75146 613.83033 L
306.25455 613.83033 L
306.25455 610.10192 L
299.73628 610.10192 L
299.73628 591.80400 L
295.28504 591.80400 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel15Dict 15.0 0
%%EOF

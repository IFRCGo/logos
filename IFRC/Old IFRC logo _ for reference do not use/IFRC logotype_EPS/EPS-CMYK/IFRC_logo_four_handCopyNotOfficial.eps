%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: IFRC_logo_four_HACKY.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Daniel Joseph
%%CreationDate: 12/13/14
%%BoundingBox: 0 0 1493 154
%%HiResBoundingBox: 0 0 1492.9126 153.0708
%%CropBox: 0 0 1492.9126 153.0708
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.4%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.4 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 16 8%%BeginData: 4574 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9FD0BFFA8FD%05FFA8FF7EFD11FFA8FD05FF7EFD0DFFA8FD05FFA8FD0BFFA8FD1EFFC9C3%C9C9C3CAC9CAC3C9C3C9C3C9C3CAC9CAC9CAC3C3C9FF527D7D7D527D7DA8%7D7D7D7E52A87DA8FD047D527D5984FD067DFFA859A87D527DA8FD077DA8%7DA8FFA87D847DA87D527DA8FD077DA87DA8FD047DA8527DA8A8A87D7D52%A87D7DA8FD13FFCAC9FFFFFFCAC3C2CFFD07FFC9BCC3CAFFC9CAFF7D537D%52527D7D5252597D527D52527DA87D7D527D52527D52527D527D53FF7D52%A8A8525952527DA8527D7D7D525253FF527D7D527DA8525928527DA8527D%7D52527D7D52527D7DFF52FD057D277D525252A8FD13FFC9C9FFFFFFC98C%B5A0FD05FFA1B58CB59AC3FFC9A7FFA8A9A8FFA8FFA8FFA8A8A8FFFFA884%FFFFFFA8FFA8FFA8FFA8A8A8FFA8FFFFFFA8FFA8FFFD04A8FF7DA8FFA8A8%7EA8FFA8A8FFA8A8A8FFA8A87DFFFF7DA8FFA8A8A8FFFD04A8FFA8A8FFFD%06A87DA8FD14FFCAC9FFFFFFC9B5B0C9FD04FFCAB5B0C2FD04FFC9CFFF7D%A8FFA8A8A8FFFFFFA8FD05FFA8FFA8FD05FFA8A8FD04FFA8FFFFFF7DFD04%FFA87DFFFFFFA8A8A8FFA8FFFFFFA8FFFFAFFFFFA8A8A8FD05FF7DA8FD08%FFA8FFFFA8FFFFA8A8A8FFA8AFFD04FFA8A8A8FF7DFD08FFC9C9FFCACAC3%8CB5C2FFCAFFFFC28CBBFD05FFC9C9FF527D527DFD05527D527D52A87D52%527D527D527D5252527D527D5252527DA852525352FF527D527D527D527D%525252FF525252A87D52A87D7D7D527D527D7D52527D527D527D52A87D52%A8A8277DA87D537D52535259527D527D527D7D52527D7D7D525252FFCAC9%CA93BBB5B58CB5B5B5C3FFB5B5C2FD05FFC9CAA8FFA8FD047DA8597D7D7E%7DA8A8A87DA87D7D7DA87D597DA87DA8FD057DFF7D7D527DFF7D7DA8FD06%7D527DFF7E7D7DA9A852FF7D7DA8A8847D7DAFA8A87DA87D7D527DFF7E53%FFA87D52A8A87D7DA8FD077DFD05A87D7D7D52527DFFA7CAC3B58CB58CB5%8CB58CC3FFB58CC3FD05FFC9C9FFA8FFFFFFA8FD1FFFA8A8FD06FFA8FFFF%FFA8FD07FFA8FFFFFF7DFD05FFA8A8FFFF7DA8FD04FFA8FD05FFA8FFA8FF%FFFFA8FD09FFA8A87DFFFFFFCFCACA8CB5B5B58CB5B5B5C3FFB5B5C2FD05%FFC9CAA87D7DA87D7DA8A87DA8A8A87DA87DFF7DA87DA87DA87DA8A8A87D%A87DFD04A8FF7DA8A8A852A8A8A87DA87D7D7DA87DA87DA8FFAF7DA8A8A8%7DFF7D7E7DA8A884FFA852A87EA8A8FF7EFFA87D7DFF84A8FFA8527DA8A8%52A8A8FF7DFFA8A87DA8FF7D52A8A8A87DC9CAFFCACAC38CB59ACFC9FFFF%C28CBBFD05FFC9C9A9597D27FD0552277D7D52527DA87D527D2752527D52%52527DFD045227A87D52277D7D53537D527D275227FD055227FF7D5227A8%7D287D7D527D7D5227A87D52527D5252A859A87D27527D8427A87D275253%FD0452A87D7D52527D27A87D59527D5252CAC3FFFFFFC9B5B0C9FD04FFCA%B5B0C2FD04FFC3CAFFFFFFA8A8AFA8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FF%A8A8A8FFA8FFA8FFA8A8FFFFA8A8FFFFA8FFA8FFA8AFFFA8A8FFA8FFA8FF%FFFFA8A8FFFF7DFFFFA8A8FFA8A8A8FFA8AFA8A8A8FF7DFFFFA8A8FFA8A8%A8FFA8FFA8FFA8A8A8FFA8A884FFA8A8A8FFFFFF7EA8A8C9C9FFFFFFC98C%B5A0FD05FFA1B58CB59AC3FFC9A7FD05FFA8FFFFFFA8FFFFFFA8FD05FFA8%A8A8FD07FFA8FD0BFFA8FFFFA8A8FFA8FFFFA87DA8FD34FFCAC9FFFFFFCF%C9C2CFFD07FFC9BCC3CAFFC9CAFFFFA8A87D7D59FFA8537DFF7DA8FFFFFF%AF7EA852A8FFFFA87DA8FF52A8FFA87DA87DFFA8A87DFFFFA8A8A85284FF%7D7D7D52527DFD34FFC9C2C3C9C3C9C9CAC9C9C3C9C3C9C3CAC9CAC9CAC9%C2C9FF7D52527D527DA87D5252277D7D7DA8845252527DA8A8527D527D52%527EA8527DFD0552A8A852527D527DA8FF7D7D527D7DFD36FFC9C9C3CAC9%CAC3CAC9CAC3CAC9CAC3CAC9CAC3CAC9FFFF84A8FFA8FFFFFF7DA8A97DA8%A87DFF7DFFFFFFA8FFFFA87DA8FFFFA8FFFFFFA8A8A8FFA8A8FFA852FFA8%FDBDFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2014-12-13T13:43:32+08:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-12-13T13:43:32+08:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-12-13T13:43:32+08:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>28</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAHAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9EWWnvqF3qck17dp6V20&#xA;UaRTvGiosaEAKpp1Y5iQhxmRJl9Xe7LLmGOMAIx3je8QepYn+YHm/S/Jt7a2tydUu2uo2lVo7xlA&#xA;CtxoeWY+omMZq5H/ADncdkdnZNbGUo+HHhNbwZdpmk29/ptpfLe6gi3cMc6obqQlRIoYA79q5k48&#xA;QlEG5bjvdNn1BxzlDhh6SR9I6JZ5sv8Ay55VsBe6tquoIJCVggS5kaWVh1CLUdK7kmgyGYRxizKX&#xA;zcrs/Fn1c+HHCG3M8Ioe9I/Lnma411FurfR/MC6Y/wBm9+tAgitOQRnRmHjw5fTlGOZlvU697n63&#xA;RRwHhlkweJ/N4f00a+NMy02F7XX5rVbm4mt2s45glxI0hDGR1qOe42GZWMcOSrJHD1dLnkJ4RKog&#xA;8ZGwroGDae/5qT6bALPWLG7uoYfThpLDKGmW3kWT1GWplKEROu4+J/iqvTLdcjrJvzge2Sb69p91&#xA;di25y2kYiEZkkhYRsjirBfUUOpNQakdsVdpdv+byXRe6ns2upWs3uIZJKxrEsKpcelGn2Q06sa0r&#xA;QmhrsFVvpfnGZtNs7u4s2gYIb25jKQzO/COaQKoO3pyB414/aT7Q74qjb7RvzJtri5vNHvYHmutT&#xA;UmK6eeRY9PEhJCK0zQAsOI+CJGC13ZqYpQFpZfncs8IlurNYZZJ2vXHF2XnxCeiHqAqUqi0/m570&#xA;xQ63g/OK5f67JLairTG2jhlUweiYpTE+w+NuUqqhYcfhBZa74qnOnt+ZSW2qrfS2M+om2WSwghAV&#xA;IpqstBU8mR+NV5032J64pQF7pf5lXuiS2yalHa69JeG5d42rDDB9QZI0VFeN/Sa7j2qa9SeQqCqh&#xA;p7n84frlr9b+o2mnyapp6kLJH67WvqI1wnMsiksgYMFHIvso4b4qqfVPzPg1u8likEML3k3p3V3d&#xA;RzWUtuzSvZxpa8RLC28UDsr16sFY7hVZ+k/zgZoCI9ONvK1rEJlkiWpMjet1eQc+Io/EEA1CBuuK&#xA;Ew1q7/NJdduRYQ2kOipcwfVJpDGWli9F+cbcpFZTLO0SDavWnXFKW6hpn5rX2kfVv0jHYa1Lqs8y&#xA;yxsvpCyTTnWNURZFcx/XPT2J5ftMtKrirT3v5vyavbWc/wBQt4Hv7KT0I5Y/rRsEkRro/aWo9MMr&#xA;8Vrz2UcN8VV47T8z4tfu/Qbgj3VzJHNdXcctpNahpZLZEtQnqw0BhhkdW78uLHfFVLQ9T/OKWf6r&#xA;qCab9ZhW3N1Ejxc1DSMWYxo7GpTjyqVFK8OTUqocq/nfMJzdGzgX1gscdr6bEw8pXZ0kkYb/ALuN&#xA;FDrur70YGilHalafmdH5l1i90ySJ9PaKNNNhu5V9EGsRYhEFdqSci3EiuxkqvBVD6rP+bwnSXT0s&#xA;OUtyY445JR6ZtvUV1KAkF29NWrsDx5Eb0GKEsa6/OqwSzskexnuZYJfU+sywm5lmWJFrGnNE48wW&#xA;Wm1OXIDYFV6fZyTi2to7xkF+0QaZEOxdQokK9CVDN1pgSiMVUbi+sraMy3NxHBEGCF5HVFDHotWI&#xA;39sVVsVdirznzt5m1Xy35Y1rU9LZEul1YRgyKHXi8aV2Oa3JllCMjH+f+h6bszQ49TqMePJ9Phfp&#xA;Lwbzb5113zVcwXGrvG8tshjiMaBBxJqage+YGTJKZuRfQez+zMOkiY47qXebZx5C/Nvzjca7oWhS&#xA;Sw/o9pYLQqIlDekKJTl40HXL8OpmDGN7bB0Pa3s9pY4cmYA8dSlz681f8zQurfnRpulak5/RyyWV&#xA;uEOy+nKwZx/smciv9MlqfVmo8rAa+w/3PZc8kPrqZ+I5fJ7/ABxxxxrHGoSNAFRFFAANgAB0Azbg&#xA;U+dkkmzzSpP+Usl/5gI/+T0mUf5X/N/S5Z/xYf1z/uQ8s07SPJVzpelXGnebptLsbbTprdYrqSSM&#xA;z0hQy3C+pMsixsvH1EVuijiUK1zJcJZp3lrytFYoU8/sGudPsBaCR/TZFTTnS3leJZUryjBlCtv8&#xA;O5JHIKUxOlaFpTQ3s/nVnlt0s7u5mgPxTxW1sGV5j6shdrhIuYrszU+FsUI0eX/Lr+XLbTX80zXd&#xA;touoW8d9LHNI8/KWWKFoJZElMqCWTlyPLYM3YYqlNlpHlOW5tJB5+a4tI/Ra5RZGjiuZLq6LV9ZJ&#xA;FBe4aCRHAJOy9KfEq3/h7y9qUVvDbfmEkmnWy+hLaSS+qss17bIqcy1wCRJKpuFTxPw0AxVFw6D5&#xA;eR1h/wAcSEWa2ghpcFIllt4ZYEoEmCs3O3dinT4RyDH4iqh9M8uaUjWFwn5gSahLNdWNyv1dgzXE&#xA;S3siKp4yu/Brm841rxXeqnsqib7QdEvvOGpy2/naS2vZdRsVks1c09a3M7La8hKpZv33HgnEABQy&#xA;sxrilZBpPl3UYNM8u3XmNpLrytqCxXF5eQEC5uppmdYoWndkZwYmTi/qbb8T8DYoXxaTocrW0Lef&#xA;pZUhmjEUrzKQ831ozgI5k4O7eiQ/MOOQBUIPgKqSWPl3ylHo0OpW/n4CLT2N5PcIShkFpcTws9BP&#xA;6gTnN6ScXpQkb814qsm/Q+hX+leW/L3+MuWo6TfQzHjIomuZYHW69NoWkZgV+EDkXCg0ILUopQUm&#xA;iaLd6ZF5Wi87ldasZ5rRtQBrM1xeTLM0S/vQQ4EfEqH2r22GKFXV9H0LVL6/1k+Z4oobex56nD9W&#xA;R76L6nHNA08E3L6xACHaoQciacWHI8lVjaNpU6xLL5ovdJuIrm5v1sdQR4J1t1+No+BeMmDjatyK&#xA;ngycuPE7hVQ8zWHk22gl8zN5ouI/XuZrGTUIw8xDfU4hJFKImj6LYlnZArcSVBBoQqpa9pJSe3ht&#xA;/PSNFb3kElxNd3JhaCG0uDLdeo8R4yXDm/VAjCNQlFINMUp3N5RtBolvoF35xn9fSbuTUdUnZ+Ly&#xA;QrxlkSar1RQlwjE8uPxVK0NAqlt3p+g6rHouq6X5vMX+HLCGSKCJGlQrbkxJc/V1lX4JCaPXkWSg&#xA;DAH4lDfmLSdBaPTL9vNcS20lvB5ee++qxXchu7SK4kjnS5Zma2k+OQs3f4eLKSGxSgtT07ytd6e1&#xA;9B54mtLa9igntrZ3keeO2vmt7mBERpll5tHbhV/yeNVJDF1CrH5fsri0F+PPNxcWMcwlvbaD1TIF&#xA;1aRBBG1LhpEB5Dc13qdqUxVMJPKvk6C3Gjan5qJEl4nKCScRM8zxG2VeTOZDMWgejcuxBB3OKoHU&#xA;bTSND0ix1BvO1w9hJNBELiBDNCy2MJWZAInohPDcitFAHFm+Iqqnk7TY9A1a1u9e84xvNbSX8L2A&#xA;unltgwkROLzTFG9ZfXQyqy/aAoFC7qvRdA/vdW/5j5P+TceY2D+L+t+pzdXyx/1B95ed/nP+X3mj&#xA;zRqunXGjWyTxW8DRylpUjoxeo2cjtmNrME5yBiL2ek9mu19Ppcc45TRMu4no9M0C0ns9C060nXjP&#xA;b2sMUqgg0dI1VhUbdRmbhiRAA9AHl9XkE805DkZE/MsM/NL8rv8AFfo6lpsy2uuWi8Ed6hJUBLKr&#xA;MtSrKT8Lf5jG1Wl49xzd32F27+UvHkHFil9n46hX8san+a8cC2OtaFbSzRgKNUN5HGjj+Z441mcm&#xA;ngBX8ccU8wFGPxthrsHZxPHiyyAP8PAT8iaH3sjj5f4qk5U5fo+KtOlfWfLR/e/5v6XWS/xcf1z9&#xA;wYV5i/5Udp1/bW2qGyi1TSIBZWsXqSJNDGwEcYd1IKEGQcJZDVSahganMlwkF5O0j8sdW0y9lt/L&#xA;psZo7S3s7yAzSpzKibTVgjYyK1Q8MkPJgrM253oxVQen69+TUmiyQpYS2s1uiyW+jzTypOXhslmQ&#xA;xH1iqkRcQsivQkLxYnjihmejWn5f3mjzfVIEhthbWl7e2ivKvoxGR9St6qp+GkkzuAvy+yAMCWGe&#xA;YtT/ACNiSN7eG31i4sZFl9GC4mZlW1lk+KNi4R+E0hBAY/aDN8IBwoT+90v8o5rKxfWoorFzGLyC&#xA;3ubmaKROHGAtVZBXiVVevviqTXnmD8ihp0lxM1q9wnKCysDdMZpUhMslukaiQ+nE/LlGG4qp4dOC&#xA;UUo7Upvyq0r9GeYLixaLU722hvbOE3EiSBS31uBSjzKprcKBRVPxU5fDihZLrP8Azj8mry6o+oWB&#xA;1GwvvrJlE8zFLqjvWJQxVlPAsVjBQtQkcqYpTbTrf8rtV/SOsIttNa/X42bUXuWlhllW3W6qhMjK&#xA;sSi4flFsmzErirGdXv8A8n7bS4L+5023vbiGSf8AQsXrTTxSrbXH1eOkr1QRUlVynxKq0oDwXFC+&#xA;/wBP/KnSdN0i8vNHlVdYspGuCbu7keGCRvrcv7ySQOzNcuPiFCa9egKqD0nzD+XH+L7GXy75eE8l&#xA;xdi4ttQiuLiMj10RLqV7R1VvUQug4cSPjJqrEhlXpUf5d+TY9XXV004DUFnN0k3qTfDKdyQnPgFr&#xA;8XEDjWhpUYEui/LvybFdX10unAy6nbS2V9zlmdJYJyDIhRnKfFxG4FcVU/8AlWnkv6jJYmxdoJeA&#xA;kLXN00ren6oWsxlMp+G5kU/FurcT8O2KolPIvlZdLXSmszLYJLNcLBNNPNSW4jkilblI7N8SzvtW&#xA;lTXrviqXX35T+Rb4stzYM9u6yLJb+tKFcyvHIxZgwk+1CDx58d2NKsxKqanyhor6hql7cRm5fV7e&#xA;Kzu45eJX0IVYBFIAf4vUJYsxJ232FFULp/5c+TNPW4Wz04RfW4RbXJ9WZmkjUg/EzOSW+EVf7RAA&#xA;JoBiqz/lWfkg6Q2jtpgfTWuTfG3eadx9YMfo86tIW+xsBWg60riq1vyw8isCP0Wq1EC8llnVgLVP&#xA;TioyuCPg+Fv5x9quKrrX8tPJVpb3tvbWDQxagtsl2EuLkFhZENb0b1OSGMioKkHFV6flz5PW6kuj&#xA;ZO9xMYmllkubmRmaHmUPxytvWVif5iSTU4qug/LzybDpK6Qmmq2moZittJJLIoNxGYpac3Y/EpP0&#xA;7jffFUJeflX5JvJWa4sS0LiTnbLI6IXleORnLKRLWsK7c+PXapJLao3Uf8AfXZf0l+ifr1R6/wBZ&#xA;+rerWgpz5/F08cxp+Dfq4b+DscP5zhHB4vD0rir7EN/yC/8A7Un/AE6ZH/B/6H2Nv+H/AO3f7N3/&#xA;ACC//tSf9OmP+D/0PsX/AA//AG7/AGbv+QX/APak/wCnTH/B/wCh9i/4f/t3+zd/yC//ALUn/Tpj&#xA;/g/9D7F/w/8A27/Zpnov+EuU36E+ocqD6x9S9GvHenP0u3XrluLw/wCDh+FOLqvzFDxuPy4r/Sl+&#xA;g/8AKv8A6nJ+i/qXo+vL6/Pj6vr8z6nq+r+85cv5u1O1MucNXvv8Df4fuvrP1D9B7fWuPp+jX1Tx&#xA;rw25et9mm/Pp8WKoBv8AlV36Q0Ph+jPrX+kfoL0PS4U4fv8A0/T+CnHrX9eKrLn/AJVl+iNZ9X6t&#xA;+i/VH6Z4c+FeO3Ph/urjXp8H2v8AKwqnEn+Dfq49T9HfV6JTl6HClRw67dacfowKs8wf4V+qwfpb&#xA;0/Rq/wBX4c619N+fH0fi+zy+mn7VMVbsf8HfUrf6t9S+reknocuFeHEca8/irT+bfFUbL+hPTt/V&#xA;+relxH1Xl6fHhQU9Ovbp0xVKbH/An6Jb6t9V+o/vuXP7f229X+8/e/a5fw7YVUPMX/KuP8LJ+nfq&#xA;P+HvVh4etT0/W29Pp8XOnXvxry+GuBU4sP8ADP6UuP0f9S/Svow/WvQ9L6x9XofQ9Th8fp0rwrt4&#xA;YqmeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:0180117407206811822A926212135917</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0180117407206811822A926212135917</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:F258794F9C82DE118C88F17499155EAC</stRef:instanceID>
            <stRef:documentID>uuid:F158794F9C82DE118C88F17499155EAC</stRef:documentID>
            <stRef:originalDocumentID>uuid:F158794F9C82DE118C88F17499155EAC</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811822A926212135917</stEvt:instanceID>
                  <stEvt:when>2014-12-13T13:43:32+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:F158794F9C82DE118C88F17499155EAC</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>29.699996</stDim:w>
            <stDim:h>20.999993</stDim:h>
            <stDim:unit>Centimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>[Registration]</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>[Registration]</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=100 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=45 Y=60 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=20 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>19.999998</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=40 Y=15 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>14.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=100 Y=25 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=40 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Aqua</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>55.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Blue</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Blue Gray</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>40.000000</xmpG:magenta>
                           <xmpG:yellow>30.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Blue Sky</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>5.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Brown</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>85.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Dark Blue</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>10.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Forest Green</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>55.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Gold</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>5.000000</xmpG:cyan>
                           <xmpG:magenta>20.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Grass Green</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>5.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Orange</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Red</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>14.999999</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Violet</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>45.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 485 CVC</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>91.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -153.071 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 153.071 li
1492.91 153.071 li
1492.91 0 li
cp
clp
283.34 31.5195 mo
280.211 31.5195 li
280.211 8.35986 li
283.34 8.35986 li
283.34 31.5195 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
302.726 31.5195 mo
299.888 31.5195 li
299.888 21.1333 li
299.888 18.1978 299.049 16.7139 296.275 16.7139 cv
294.662 16.7139 291.823 17.7461 291.823 22.3267 cv
291.823 31.5195 li
288.985 31.5195 li
288.985 14.6494 li
291.663 14.6494 li
291.663 17.0366 li
291.727 17.0366 li
292.339 16.1333 293.92 14.1655 296.823 14.1655 cv
299.436 14.1655 302.726 15.23 302.726 20.0361 cv
302.726 31.5195 li
cp
f
311.049 17.0044 mo
311.049 27.9712 li
311.049 29.2939 312.178 29.2939 312.758 29.2939 cv
313.758 29.2939 li
313.758 31.5195 li
312.726 31.6162 311.919 31.7451 311.629 31.7451 cv
308.823 31.7451 308.21 30.1646 308.21 28.1328 cv
308.21 17.0044 li
305.92 17.0044 li
305.92 14.6494 li
308.21 14.6494 li
308.21 9.93994 li
311.049 9.93994 li
311.049 14.6494 li
313.758 14.6494 li
313.758 17.0044 li
311.049 17.0044 li
cp
f
328.661 26.2295 mo
328.564 27.4873 326.983 29.5518 324.306 29.5518 cv
321.048 29.5518 319.403 27.5195 319.403 24.0039 cv
331.725 24.0039 li
331.725 18.0366 329.338 14.1655 324.467 14.1655 cv
318.887 14.1655 316.371 18.3267 316.371 23.5522 cv
316.371 28.4229 319.177 32.0034 323.919 32.0034 cv
326.628 32.0034 327.725 31.3584 328.5 30.8423 cv
330.628 29.4229 331.402 27.0361 331.499 26.2295 cv
328.661 26.2295 li
cp
319.403 21.7461 mo
319.403 19.1333 321.467 16.7139 324.08 16.7139 cv
327.532 16.7139 328.628 19.1333 328.79 21.7461 cv
319.403 21.7461 li
cp
f
338.983 31.5195 mo
336.145 31.5195 li
336.145 14.6494 li
338.822 14.6494 li
338.822 17.4561 li
338.886 17.4561 li
340.015 15.4883 341.499 14.1655 343.628 14.1655 cv
343.983 14.1655 344.144 14.1978 344.37 14.2627 cv
344.37 17.1978 li
343.305 17.1978 li
340.66 17.1978 338.983 19.2622 338.983 21.7139 cv
338.983 31.5195 li
cp
f
361.691 31.5195 mo
358.853 31.5195 li
358.853 21.1333 li
358.853 18.1978 358.014 16.7139 355.24 16.7139 cv
353.627 16.7139 350.789 17.7461 350.789 22.3267 cv
350.789 31.5195 li
347.95 31.5195 li
347.95 14.6494 li
350.627 14.6494 li
350.627 17.0366 li
350.692 17.0366 li
351.305 16.1333 352.885 14.1655 355.788 14.1655 cv
358.401 14.1655 361.691 15.23 361.691 20.0361 cv
361.691 31.5195 li
cp
f
369.046 19.7783 mo
369.239 18.4883 369.691 16.5205 372.917 16.5205 cv
375.594 16.5205 376.884 17.4883 376.884 19.2622 cv
376.884 20.9395 376.078 21.1978 375.4 21.2622 cv
370.723 21.8428 li
366.014 22.4233 365.595 25.7134 365.595 27.1328 cv
365.595 30.0356 367.788 32.0034 370.884 32.0034 cv
374.175 32.0034 375.884 30.4551 376.981 29.2617 cv
377.078 30.5518 377.465 31.8423 379.981 31.8423 cv
380.626 31.8423 381.045 31.6484 381.529 31.5195 cv
381.529 29.4551 li
381.207 29.5195 380.852 29.584 380.594 29.584 cv
380.013 29.584 379.658 29.2939 379.658 28.584 cv
379.658 18.875 li
379.658 14.5527 374.755 14.1655 373.4 14.1655 cv
369.239 14.1655 366.562 15.7461 366.433 19.7783 cv
369.046 19.7783 li
cp
376.82 25.6812 mo
376.82 27.939 374.239 29.6484 371.594 29.6484 cv
369.465 29.6484 368.53 28.5518 368.53 26.7134 cv
368.53 24.5845 370.755 24.165 372.143 23.9717 cv
375.658 23.52 376.368 23.2622 376.82 22.9072 cv
376.82 25.6812 li
cp
f
388.593 17.0044 mo
388.593 27.9712 li
388.593 29.2939 389.723 29.2939 390.303 29.2939 cv
391.303 29.2939 li
391.303 31.5195 li
390.271 31.6162 389.464 31.7451 389.174 31.7451 cv
386.368 31.7451 385.755 30.1646 385.755 28.1328 cv
385.755 17.0044 li
383.465 17.0044 li
383.465 14.6494 li
385.755 14.6494 li
385.755 9.93994 li
388.593 9.93994 li
388.593 14.6494 li
391.303 14.6494 li
391.303 17.0044 li
388.593 17.0044 li
cp
f
394.787 11.5854 mo
394.787 8.35986 li
397.625 8.35986 li
397.625 11.5854 li
394.787 11.5854 li
cp
397.625 31.5195 mo
394.787 31.5195 li
394.787 14.6494 li
397.625 14.6494 li
397.625 31.5195 li
cp
f
401.561 23.0684 mo
401.561 27.4229 404.012 31.9712 409.398 31.9712 cv
414.785 31.9712 417.237 27.4229 417.237 23.0684 cv
417.237 18.7139 414.785 14.1655 409.398 14.1655 cv
404.012 14.1655 401.561 18.7139 401.561 23.0684 cv
cp
404.496 23.0684 mo
404.496 20.8105 405.334 16.6172 409.398 16.6172 cv
413.463 16.6172 414.301 20.8105 414.301 23.0684 cv
414.301 25.3262 413.463 29.5195 409.398 29.5195 cv
405.334 29.5195 404.496 25.3262 404.496 23.0684 cv
cp
f
434.849 31.5195 mo
432.01 31.5195 li
432.01 21.1333 li
432.01 18.1978 431.172 16.7139 428.398 16.7139 cv
426.785 16.7139 423.946 17.7461 423.946 22.3267 cv
423.946 31.5195 li
421.108 31.5195 li
421.108 14.6494 li
423.785 14.6494 li
423.785 17.0366 li
423.85 17.0366 li
424.462 16.1333 426.043 14.1655 428.946 14.1655 cv
431.559 14.1655 434.849 15.23 434.849 20.0361 cv
434.849 31.5195 li
cp
f
442.204 19.7783 mo
442.397 18.4883 442.849 16.5205 446.075 16.5205 cv
448.752 16.5205 450.042 17.4883 450.042 19.2622 cv
450.042 20.9395 449.236 21.1978 448.558 21.2622 cv
443.881 21.8428 li
439.172 22.4233 438.752 25.7134 438.752 27.1328 cv
438.752 30.0356 440.946 32.0034 444.042 32.0034 cv
447.333 32.0034 449.042 30.4551 450.139 29.2617 cv
450.236 30.5518 450.623 31.8423 453.139 31.8423 cv
453.784 31.8423 454.203 31.6484 454.687 31.5195 cv
454.687 29.4551 li
454.364 29.5195 454.01 29.584 453.751 29.584 cv
453.171 29.584 452.816 29.2939 452.816 28.584 cv
452.816 18.875 li
452.816 14.5527 447.913 14.1655 446.559 14.1655 cv
442.397 14.1655 439.72 15.7461 439.591 19.7783 cv
442.204 19.7783 li
cp
449.978 25.6812 mo
449.978 27.939 447.397 29.6484 444.752 29.6484 cv
442.623 29.6484 441.688 28.5518 441.688 26.7134 cv
441.688 24.5845 443.914 24.165 445.3 23.9717 cv
448.816 23.52 449.526 23.2622 449.978 22.9072 cv
449.978 25.6812 li
cp
f
461.171 31.5195 mo
458.332 31.5195 li
458.332 8.35986 li
461.171 8.35986 li
461.171 31.5195 li
cp
f
479.492 31.5195 mo
476.363 31.5195 li
476.363 8.35986 li
492.395 8.35986 li
492.395 11.1338 li
479.492 11.1338 li
479.492 18.23 li
490.846 18.23 li
490.846 21.0039 li
479.492 21.0039 li
479.492 31.5195 li
cp
f
506.555 26.2295 mo
506.458 27.4873 504.878 29.5518 502.201 29.5518 cv
498.943 29.5518 497.298 27.5195 497.298 24.0039 cv
509.62 24.0039 li
509.62 18.0366 507.232 14.1655 502.362 14.1655 cv
496.782 14.1655 494.266 18.3267 494.266 23.5522 cv
494.266 28.4229 497.072 32.0034 501.813 32.0034 cv
504.523 32.0034 505.62 31.3584 506.394 30.8423 cv
508.523 29.4229 509.297 27.0361 509.394 26.2295 cv
506.555 26.2295 li
cp
497.298 21.7461 mo
497.298 19.1333 499.362 16.7139 501.975 16.7139 cv
505.426 16.7139 506.523 19.1333 506.684 21.7461 cv
497.298 21.7461 li
cp
f
527.651 8.35986 mo
524.812 8.35986 li
524.812 17.0366 li
524.749 17.0366 li
524.071 16.0688 522.78 14.1655 519.716 14.1655 cv
515.232 14.1655 512.684 17.8428 512.684 22.5845 cv
512.684 26.6167 514.362 32.0034 520.103 32.0034 cv
521.749 32.0034 523.684 31.4873 524.909 29.1973 cv
524.974 29.1973 li
524.974 31.5195 li
527.651 31.5195 li
527.651 8.35986 li
cp
515.62 23.0361 mo
515.62 20.875 515.845 16.7139 520.232 16.7139 cv
524.329 16.7139 524.78 21.1333 524.78 23.875 cv
524.78 28.3584 521.974 29.5518 520.168 29.5518 cv
517.071 29.5518 515.62 26.7456 515.62 23.0361 cv
cp
f
543.715 26.2295 mo
543.618 27.4873 542.038 29.5518 539.361 29.5518 cv
536.103 29.5518 534.458 27.5195 534.458 24.0039 cv
546.779 24.0039 li
546.779 18.0366 544.393 14.1655 539.522 14.1655 cv
533.941 14.1655 531.425 18.3267 531.425 23.5522 cv
531.425 28.4229 534.232 32.0034 538.974 32.0034 cv
541.683 32.0034 542.78 31.3584 543.553 30.8423 cv
545.682 29.4229 546.458 27.0361 546.553 26.2295 cv
543.715 26.2295 li
cp
534.458 21.7461 mo
534.458 19.1333 536.522 16.7139 539.135 16.7139 cv
542.586 16.7139 543.682 19.1333 543.844 21.7461 cv
534.458 21.7461 li
cp
f
554.038 31.5195 mo
551.199 31.5195 li
551.199 14.6494 li
553.875 14.6494 li
553.875 17.4561 li
553.941 17.4561 li
555.07 15.4883 556.553 14.1655 558.682 14.1655 cv
559.037 14.1655 559.199 14.1978 559.424 14.2627 cv
559.424 17.1978 li
558.36 17.1978 li
555.715 17.1978 554.038 19.2622 554.038 21.7139 cv
554.038 31.5195 li
cp
f
564.392 19.7783 mo
564.585 18.4883 565.037 16.5205 568.262 16.5205 cv
570.94 16.5205 572.23 17.4883 572.23 19.2622 cv
572.23 20.9395 571.423 21.1978 570.747 21.2622 cv
566.07 21.8428 li
561.36 22.4233 560.941 25.7134 560.941 27.1328 cv
560.941 30.0356 563.133 32.0034 566.231 32.0034 cv
569.52 32.0034 571.23 30.4551 572.327 29.2617 cv
572.423 30.5518 572.811 31.8423 575.327 31.8423 cv
575.971 31.8423 576.391 31.6484 576.875 31.5195 cv
576.875 29.4551 li
576.552 29.5195 576.198 29.584 575.94 29.584 cv
575.359 29.584 575.003 29.2939 575.003 28.584 cv
575.003 18.875 li
575.003 14.5527 570.101 14.1655 568.747 14.1655 cv
564.585 14.1655 561.908 15.7461 561.779 19.7783 cv
564.392 19.7783 li
cp
572.166 25.6812 mo
572.166 27.939 569.585 29.6484 566.94 29.6484 cv
564.811 29.6484 563.875 28.5518 563.875 26.7134 cv
563.875 24.5845 566.102 24.165 567.489 23.9717 cv
571.004 23.52 571.713 23.2622 572.166 22.9072 cv
572.166 25.6812 li
cp
f
583.94 17.0044 mo
583.94 27.9712 li
583.94 29.2939 585.069 29.2939 585.649 29.2939 cv
586.649 29.2939 li
586.649 31.5195 li
585.617 31.6162 584.811 31.7451 584.52 31.7451 cv
581.713 31.7451 581.101 30.1646 581.101 28.1328 cv
581.101 17.0044 li
578.811 17.0044 li
578.811 14.6494 li
581.101 14.6494 li
581.101 9.93994 li
583.94 9.93994 li
583.94 14.6494 li
586.649 14.6494 li
586.649 17.0044 li
583.94 17.0044 li
cp
f
590.132 11.5854 mo
590.132 8.35986 li
592.971 8.35986 li
592.971 11.5854 li
590.132 11.5854 li
cp
592.971 31.5195 mo
590.132 31.5195 li
590.132 14.6494 li
592.971 14.6494 li
592.971 31.5195 li
cp
f
596.907 23.0684 mo
596.907 27.4229 599.358 31.9712 604.745 31.9712 cv
610.131 31.9712 612.583 27.4229 612.583 23.0684 cv
612.583 18.7139 610.131 14.1655 604.745 14.1655 cv
599.358 14.1655 596.907 18.7139 596.907 23.0684 cv
cp
599.841 23.0684 mo
599.841 20.8105 600.68 16.6172 604.745 16.6172 cv
608.809 16.6172 609.648 20.8105 609.648 23.0684 cv
609.648 25.3262 608.809 29.5195 604.745 29.5195 cv
600.68 29.5195 599.841 25.3262 599.841 23.0684 cv
cp
f
630.195 31.5195 mo
627.357 31.5195 li
627.357 21.1333 li
627.357 18.1978 626.518 16.7139 623.744 16.7139 cv
622.131 16.7139 619.292 17.7461 619.292 22.3267 cv
619.292 31.5195 li
616.454 31.5195 li
616.454 14.6494 li
619.131 14.6494 li
619.131 17.0366 li
619.196 17.0366 li
619.809 16.1333 621.389 14.1655 624.292 14.1655 cv
626.905 14.1655 630.195 15.23 630.195 20.0361 cv
630.195 31.5195 li
cp
f
644.324 23.9717 mo
644.324 28.3257 646.775 32.8745 652.163 32.8745 cv
657.549 32.8745 660 28.3257 660 23.9717 cv
660 19.6172 657.549 15.0688 652.163 15.0688 cv
646.775 15.0688 644.324 19.6172 644.324 23.9717 cv
cp
647.258 23.9717 mo
647.258 21.7139 648.098 17.5205 652.163 17.5205 cv
656.227 17.5205 657.065 21.7139 657.065 23.9717 cv
657.065 26.23 656.227 30.4233 652.163 30.4233 cv
648.098 30.4233 647.258 26.23 647.258 23.9717 cv
cp
f
667.387 17.9077 mo
667.387 32.4233 li
664.549 32.4233 li
664.549 17.9077 li
662.226 17.9077 li
662.226 15.5527 li
664.549 15.5527 li
664.549 12.6499 li
664.549 10.1016 666.162 8.94043 668.936 8.94043 cv
669.355 8.94043 669.774 8.97266 670.226 9.00488 cv
670.226 11.5532 li
669.872 11.521 669.419 11.4888 669.065 11.4888 cv
667.838 11.4888 667.387 12.1016 667.387 13.4561 cv
667.387 15.5527 li
670.226 15.5527 li
670.226 17.9077 li
667.387 17.9077 li
cp
f
686.967 22.4878 mo
694.547 22.4878 li
698.29 22.4878 698.676 24.7134 698.676 26.6167 cv
698.676 27.4878 698.773 31.0034 699.225 32.4233 cv
703.063 32.4233 li
703.063 31.9067 li
702.095 31.3579 701.934 30.8745 701.902 29.5845 cv
701.708 25.3911 li
701.579 22.1655 700.256 21.585 698.934 21.0366 cv
700.418 20.1655 702.16 18.9077 702.16 15.4883 cv
702.16 10.5854 698.354 9.26318 694.547 9.26318 cv
683.838 9.26318 li
683.838 32.4233 li
686.967 32.4233 li
686.967 22.4878 li
cp
686.967 11.9404 mo
694.773 11.9404 li
696.321 11.9404 698.934 12.2305 698.934 15.811 cv
698.934 19.23 696.515 19.8105 694.225 19.8105 cv
686.967 19.8105 li
686.967 11.9404 li
cp
f
718.514 27.1323 mo
718.417 28.3901 716.836 30.4546 714.159 30.4546 cv
710.901 30.4546 709.256 28.4233 709.256 24.9067 cv
721.579 24.9067 li
721.579 18.9399 719.191 15.0688 714.321 15.0688 cv
708.741 15.0688 706.224 19.23 706.224 24.4556 cv
706.224 29.3257 709.03 32.9067 713.772 32.9067 cv
716.481 32.9067 717.579 32.2612 718.352 31.7456 cv
720.481 30.3257 721.255 27.9399 721.352 27.1323 cv
718.514 27.1323 li
cp
709.256 22.6494 mo
709.256 20.0366 711.321 17.6172 713.933 17.6172 cv
717.385 17.6172 718.481 20.0366 718.643 22.6494 cv
709.256 22.6494 li
cp
f
739.61 9.26318 mo
736.771 9.26318 li
736.771 17.9399 li
736.707 17.9399 li
736.03 16.9722 734.739 15.0688 731.674 15.0688 cv
727.191 15.0688 724.643 18.7461 724.643 23.4878 cv
724.643 27.52 726.32 32.9067 732.061 32.9067 cv
733.707 32.9067 735.642 32.3901 736.868 30.1011 cv
736.932 30.1011 li
736.932 32.4233 li
739.61 32.4233 li
739.61 9.26318 li
cp
727.579 23.9395 mo
727.579 21.7783 727.803 17.6172 732.19 17.6172 cv
736.288 17.6172 736.739 22.0366 736.739 24.7778 cv
736.739 29.2612 733.932 30.4546 732.125 30.4546 cv
729.03 30.4546 727.579 27.6489 727.579 23.9395 cv
cp
f
770.415 16.2305 mo
769.543 12.166 766.157 11.4243 763.931 11.4243 cv
759.738 11.4243 756.351 14.5205 756.351 20.6172 cv
756.351 26.0688 758.287 30.2612 764.028 30.2612 cv
766.06 30.2612 769.577 29.2944 770.641 23.9072 cv
773.672 23.9072 li
772.382 32.6489 765.286 33.0356 763.543 33.0356 cv
758.287 33.0356 753.125 29.6167 753.125 20.7139 cv
753.125 13.5854 757.19 8.6499 763.931 8.6499 cv
769.899 8.6499 772.995 12.3594 773.447 16.2305 cv
770.415 16.2305 li
cp
f
780.962 32.4233 mo
778.124 32.4233 li
778.124 15.5527 li
780.801 15.5527 li
780.801 18.3594 li
780.866 18.3594 li
781.995 16.3916 783.479 15.0688 785.608 15.0688 cv
785.962 15.0688 786.124 15.1011 786.349 15.166 cv
786.349 18.1011 li
785.285 18.1011 li
782.639 18.1011 780.962 20.1655 780.962 22.6172 cv
780.962 32.4233 li
cp
f
788.156 23.9717 mo
788.156 28.3257 790.607 32.8745 795.994 32.8745 cv
801.381 32.8745 803.833 28.3257 803.833 23.9717 cv
803.833 19.6172 801.381 15.0688 795.994 15.0688 cv
790.607 15.0688 788.156 19.6172 788.156 23.9717 cv
cp
791.09 23.9717 mo
791.09 21.7139 791.93 17.5205 795.994 17.5205 cv
800.058 17.5205 800.897 21.7139 800.897 23.9717 cv
800.897 26.23 800.058 30.4233 795.994 30.4233 cv
791.93 30.4233 791.09 26.23 791.09 23.9717 cv
cp
f
817.284 20.3589 mo
817.25 19.2944 816.864 17.5205 813.284 17.5205 cv
812.413 17.5205 809.928 17.811 809.928 19.9077 cv
809.928 21.2944 810.799 21.6172 812.993 22.1655 cv
815.832 22.875 li
819.348 23.7461 820.573 25.0366 820.573 27.3257 cv
820.573 30.8101 817.703 32.9067 813.897 32.9067 cv
807.219 32.9067 806.735 29.0366 806.639 27.0034 cv
809.38 27.0034 li
809.477 28.3257 809.864 30.4546 813.864 30.4546 cv
815.897 30.4546 817.735 29.6489 817.735 27.7778 cv
817.735 26.4233 816.799 25.9722 814.38 25.3589 cv
811.09 24.5522 li
808.735 23.9717 807.187 22.7783 807.187 20.4561 cv
807.187 16.7466 810.251 15.0688 813.574 15.0688 cv
819.606 15.0688 820.025 19.5205 820.025 20.3589 cv
817.284 20.3589 li
cp
f
834.057 20.3589 mo
834.024 19.2944 833.637 17.5205 830.057 17.5205 cv
829.186 17.5205 826.703 17.811 826.703 19.9077 cv
826.703 21.2944 827.573 21.6172 829.766 22.1655 cv
832.606 22.875 li
836.122 23.7461 837.347 25.0366 837.347 27.3257 cv
837.347 30.8101 834.476 32.9067 830.67 32.9067 cv
823.993 32.9067 823.509 29.0366 823.413 27.0034 cv
826.155 27.0034 li
826.25 28.3257 826.637 30.4546 830.637 30.4546 cv
832.67 30.4546 834.508 29.6489 834.508 27.7778 cv
834.508 26.4233 833.573 25.9722 831.154 25.3589 cv
827.864 24.5522 li
825.508 23.9717 823.96 22.7783 823.96 20.4561 cv
823.96 16.7466 827.025 15.0688 830.347 15.0688 cv
836.379 15.0688 836.799 19.5205 836.799 20.3589 cv
834.057 20.3589 li
cp
f
853.379 20.6816 mo
853.573 19.3916 854.024 17.4238 857.25 17.4238 cv
859.926 17.4238 861.217 18.3916 861.217 20.1655 cv
861.217 21.8428 860.411 22.1011 859.733 22.1655 cv
855.056 22.7461 li
850.346 23.3267 849.927 26.6167 849.927 28.0366 cv
849.927 30.939 852.121 32.9067 855.217 32.9067 cv
858.507 32.9067 860.217 31.3579 861.314 30.1655 cv
861.411 31.4546 861.797 32.7456 864.313 32.7456 cv
864.959 32.7456 865.377 32.5522 865.862 32.4233 cv
865.862 30.3579 li
865.54 30.4233 865.184 30.4868 864.926 30.4868 cv
864.346 30.4868 863.991 30.1968 863.991 29.4868 cv
863.991 19.7783 li
863.991 15.4561 859.088 15.0688 857.733 15.0688 cv
853.573 15.0688 850.895 16.6494 850.766 20.6816 cv
853.379 20.6816 li
cp
861.153 26.5845 mo
861.153 28.8423 858.573 30.5522 855.927 30.5522 cv
853.798 30.5522 852.863 29.4546 852.863 27.6167 cv
852.863 25.4878 855.088 25.0688 856.475 24.8745 cv
859.991 24.4233 860.702 24.1655 861.153 23.8105 cv
861.153 26.5845 li
cp
f
883.184 32.4233 mo
880.345 32.4233 li
880.345 22.0366 li
880.345 19.1011 879.506 17.6172 876.733 17.6172 cv
875.12 17.6172 872.282 18.6494 872.282 23.23 cv
872.282 32.4233 li
869.443 32.4233 li
869.443 15.5527 li
872.12 15.5527 li
872.12 17.9399 li
872.184 17.9399 li
872.797 17.0366 874.377 15.0688 877.281 15.0688 cv
879.893 15.0688 883.184 16.1333 883.184 20.9395 cv
883.184 32.4233 li
cp
f
902.022 9.26318 mo
899.183 9.26318 li
899.183 17.9399 li
899.119 17.9399 li
898.442 16.9722 897.151 15.0688 894.087 15.0688 cv
889.603 15.0688 887.055 18.7461 887.055 23.4878 cv
887.055 27.52 888.732 32.9067 894.474 32.9067 cv
896.119 32.9067 898.054 32.3901 899.28 30.1011 cv
899.345 30.1011 li
899.345 32.4233 li
902.022 32.4233 li
902.022 9.26318 li
cp
889.99 23.9395 mo
889.99 21.7783 890.216 17.6172 894.603 17.6172 cv
898.699 17.6172 899.151 22.0366 899.151 24.7778 cv
899.151 29.2612 896.345 30.4546 894.539 30.4546 cv
891.442 30.4546 889.99 27.6489 889.99 23.9395 cv
cp
f
920.085 22.4878 mo
927.666 22.4878 li
931.408 22.4878 931.794 24.7134 931.794 26.6167 cv
931.794 27.4878 931.892 31.0034 932.343 32.4233 cv
936.181 32.4233 li
936.181 31.9067 li
935.213 31.3579 935.052 30.8745 935.021 29.5845 cv
934.827 25.3911 li
934.698 22.1655 933.375 21.585 932.052 21.0366 cv
933.537 20.1655 935.279 18.9077 935.279 15.4883 cv
935.279 10.5854 931.472 9.26318 927.666 9.26318 cv
916.957 9.26318 li
916.957 32.4233 li
920.085 32.4233 li
920.085 22.4878 li
cp
920.085 11.9404 mo
927.892 11.9404 li
929.44 11.9404 932.052 12.2305 932.052 15.811 cv
932.052 19.23 929.634 19.8105 927.343 19.8105 cv
920.085 19.8105 li
920.085 11.9404 li
cp
f
951.632 27.1323 mo
951.536 28.3901 949.956 30.4546 947.278 30.4546 cv
944.02 30.4546 942.375 28.4233 942.375 24.9067 cv
954.697 24.9067 li
954.697 18.9399 952.309 15.0688 947.439 15.0688 cv
941.859 15.0688 939.342 19.23 939.342 24.4556 cv
939.342 29.3257 942.149 32.9067 946.89 32.9067 cv
949.6 32.9067 950.697 32.2612 951.471 31.7456 cv
953.6 30.3257 954.375 27.9399 954.471 27.1323 cv
951.632 27.1323 li
cp
942.375 22.6494 mo
942.375 20.0366 944.439 17.6172 947.051 17.6172 cv
950.503 17.6172 951.6 20.0366 951.761 22.6494 cv
942.375 22.6494 li
cp
f
972.728 9.26318 mo
969.889 9.26318 li
969.889 17.9399 li
969.826 17.9399 li
969.148 16.9722 967.857 15.0688 964.793 15.0688 cv
960.309 15.0688 957.761 18.7461 957.761 23.4878 cv
957.761 27.52 959.439 32.9067 965.18 32.9067 cv
966.826 32.9067 968.76 32.3901 969.986 30.1011 cv
970.051 30.1011 li
970.051 32.4233 li
972.728 32.4233 li
972.728 9.26318 li
cp
960.697 23.9395 mo
960.697 21.7783 960.922 17.6172 965.309 17.6172 cv
969.406 17.6172 969.857 22.0366 969.857 24.7778 cv
969.857 29.2612 967.051 30.4546 965.245 30.4546 cv
962.148 30.4546 960.697 27.6489 960.697 23.9395 cv
cp
f
1003.53 16.2305 mo
1002.66 12.166 999.276 11.4243 997.05 11.4243 cv
992.856 11.4243 989.47 14.5205 989.47 20.6172 cv
989.47 26.0688 991.405 30.2612 997.147 30.2612 cv
999.179 30.2612 1002.69 29.2944 1003.76 23.9072 cv
1006.79 23.9072 li
1005.5 32.6489 998.405 33.0356 996.663 33.0356 cv
991.405 33.0356 986.244 29.6167 986.244 20.7139 cv
986.244 13.5854 990.309 8.6499 997.05 8.6499 cv
1003.02 8.6499 1006.11 12.3594 1006.57 16.2305 cv
1003.53 16.2305 li
cp
f
1014.08 32.4233 mo
1011.24 32.4233 li
1011.24 15.5527 li
1013.92 15.5527 li
1013.92 18.3594 li
1013.98 18.3594 li
1015.11 16.3916 1016.6 15.0688 1018.73 15.0688 cv
1019.08 15.0688 1019.24 15.1011 1019.47 15.166 cv
1019.47 18.1011 li
1018.4 18.1011 li
1015.76 18.1011 1014.08 20.1655 1014.08 22.6172 cv
1014.08 32.4233 li
cp
f
1033.73 27.1323 mo
1033.63 28.3901 1032.05 30.4546 1029.37 30.4546 cv
1026.11 30.4546 1024.47 28.4233 1024.47 24.9067 cv
1036.79 24.9067 li
1036.79 18.9399 1034.4 15.0688 1029.53 15.0688 cv
1023.95 15.0688 1021.44 19.23 1021.44 24.4556 cv
1021.44 29.3257 1024.24 32.9067 1028.98 32.9067 cv
1031.69 32.9067 1032.79 32.2612 1033.56 31.7456 cv
1035.69 30.3257 1036.47 27.9399 1036.56 27.1323 cv
1033.73 27.1323 li
cp
1024.47 22.6494 mo
1024.47 20.0366 1026.53 17.6172 1029.15 17.6172 cv
1032.6 17.6172 1033.69 20.0366 1033.85 22.6494 cv
1024.47 22.6494 li
cp
f
1050.4 20.3589 mo
1050.37 19.2944 1049.98 17.5205 1046.4 17.5205 cv
1045.53 17.5205 1043.05 17.811 1043.05 19.9077 cv
1043.05 21.2944 1043.92 21.6172 1046.11 22.1655 cv
1048.95 22.875 li
1052.47 23.7461 1053.69 25.0366 1053.69 27.3257 cv
1053.69 30.8101 1050.82 32.9067 1047.02 32.9067 cv
1040.34 32.9067 1039.85 29.0366 1039.76 27.0034 cv
1042.5 27.0034 li
1042.6 28.3257 1042.98 30.4546 1046.98 30.4546 cv
1049.02 30.4546 1050.85 29.6489 1050.85 27.7778 cv
1050.85 26.4233 1049.92 25.9722 1047.5 25.3589 cv
1044.21 24.5522 li
1041.85 23.9717 1040.31 22.7783 1040.31 20.4561 cv
1040.31 16.7466 1043.37 15.0688 1046.69 15.0688 cv
1052.72 15.0688 1053.14 19.5205 1053.14 20.3589 cv
1050.4 20.3589 li
cp
f
1068.14 21.23 mo
1067.79 18.9722 1066.53 17.6172 1064.14 17.6172 cv
1060.63 17.6172 1059.5 20.9722 1059.5 23.9717 cv
1059.5 26.8745 1060.21 30.4546 1064.11 30.4546 cv
1066.01 30.4546 1067.66 29.0366 1068.14 26.4556 cv
1070.88 26.4556 li
1070.6 29.1323 1068.95 32.9067 1064.01 32.9067 cv
1059.27 32.9067 1056.47 29.3257 1056.47 24.4556 cv
1056.47 19.23 1058.98 15.0688 1064.56 15.0688 cv
1068.98 15.0688 1070.66 18.2944 1070.88 21.23 cv
1068.14 21.23 li
cp
f
1085.85 27.1323 mo
1085.76 28.3901 1084.18 30.4546 1081.5 30.4546 cv
1078.24 30.4546 1076.6 28.4233 1076.6 24.9067 cv
1088.92 24.9067 li
1088.92 18.9399 1086.53 15.0688 1081.66 15.0688 cv
1076.08 15.0688 1073.56 19.23 1073.56 24.4556 cv
1073.56 29.3257 1076.37 32.9067 1081.11 32.9067 cv
1083.82 32.9067 1084.92 32.2612 1085.69 31.7456 cv
1087.82 30.3257 1088.59 27.9399 1088.69 27.1323 cv
1085.85 27.1323 li
cp
1076.6 22.6494 mo
1076.6 20.0366 1078.66 17.6172 1081.27 17.6172 cv
1084.72 17.6172 1085.82 20.0366 1085.98 22.6494 cv
1076.6 22.6494 li
cp
f
1106.69 32.4233 mo
1103.85 32.4233 li
1103.85 22.0366 li
1103.85 19.1011 1103.01 17.6172 1100.24 17.6172 cv
1098.63 17.6172 1095.79 18.6494 1095.79 23.23 cv
1095.79 32.4233 li
1092.95 32.4233 li
1092.95 15.5527 li
1095.63 15.5527 li
1095.63 17.9399 li
1095.69 17.9399 li
1096.3 17.0366 1097.88 15.0688 1100.79 15.0688 cv
1103.4 15.0688 1106.69 16.1333 1106.69 20.9395 cv
1106.69 32.4233 li
cp
f
1115.01 17.9077 mo
1115.01 28.8745 li
1115.01 30.1968 1116.14 30.1968 1116.72 30.1968 cv
1117.72 30.1968 li
1117.72 32.4233 li
1116.69 32.52 1115.88 32.6489 1115.59 32.6489 cv
1112.79 32.6489 1112.17 31.0679 1112.17 29.0366 cv
1112.17 17.9077 li
1109.88 17.9077 li
1109.88 15.5527 li
1112.17 15.5527 li
1112.17 10.8433 li
1115.01 10.8433 li
1115.01 15.5527 li
1117.72 15.5527 li
1117.72 17.9077 li
1115.01 17.9077 li
cp
f
1145.08 16.0366 mo
1144.91 12.4565 1141.95 11.3271 1139.33 11.3271 cv
1137.37 11.3271 1134.04 11.8755 1134.04 15.3916 cv
1134.04 17.3594 1135.43 18.0044 1136.79 18.3271 cv
1143.4 19.8428 li
1146.4 20.5527 1148.66 22.3589 1148.66 26.0366 cv
1148.66 31.52 1143.56 33.0356 1139.59 33.0356 cv
1135.3 33.0356 1133.62 31.7456 1132.59 30.8101 cv
1130.62 29.0366 1130.24 27.1011 1130.24 24.9399 cv
1133.17 24.9399 li
1133.17 29.1323 1136.59 30.3579 1139.56 30.3579 cv
1141.82 30.3579 1145.62 29.7778 1145.62 26.4556 cv
1145.62 24.0366 1144.5 23.2622 1140.69 22.3589 cv
1135.95 21.2622 li
1134.43 20.9072 1131.01 19.8428 1131.01 15.811 cv
1131.01 12.1982 1133.37 8.6499 1138.98 8.6499 cv
1147.08 8.6499 1147.88 13.4883 1148.01 16.0366 cv
1145.08 16.0366 li
cp
f
1151.95 23.9717 mo
1151.95 28.3257 1154.4 32.8745 1159.78 32.8745 cv
1165.17 32.8745 1167.62 28.3257 1167.62 23.9717 cv
1167.62 19.6172 1165.17 15.0688 1159.78 15.0688 cv
1154.4 15.0688 1151.95 19.6172 1151.95 23.9717 cv
cp
1154.88 23.9717 mo
1154.88 21.7139 1155.72 17.5205 1159.78 17.5205 cv
1163.85 17.5205 1164.69 21.7139 1164.69 23.9717 cv
1164.69 26.23 1163.85 30.4233 1159.78 30.4233 cv
1155.72 30.4233 1154.88 26.23 1154.88 23.9717 cv
cp
f
1182.04 21.23 mo
1181.69 18.9722 1180.43 17.6172 1178.04 17.6172 cv
1174.53 17.6172 1173.4 20.9722 1173.4 23.9717 cv
1173.4 26.8745 1174.11 30.4546 1178.01 30.4546 cv
1179.91 30.4546 1181.56 29.0366 1182.04 26.4556 cv
1184.78 26.4556 li
1184.49 29.1323 1182.85 32.9067 1177.91 32.9067 cv
1173.17 32.9067 1170.36 29.3257 1170.36 24.4556 cv
1170.36 19.23 1172.88 15.0688 1178.46 15.0688 cv
1182.88 15.0688 1184.56 18.2944 1184.78 21.23 cv
1182.04 21.23 li
cp
f
1188.33 12.4888 mo
1188.33 9.26318 li
1191.17 9.26318 li
1191.17 12.4888 li
1188.33 12.4888 li
cp
1191.17 32.4233 mo
1188.33 32.4233 li
1188.33 15.5527 li
1191.17 15.5527 li
1191.17 32.4233 li
cp
f
1207.56 27.1323 mo
1207.46 28.3901 1205.88 30.4546 1203.2 30.4546 cv
1199.94 30.4546 1198.3 28.4233 1198.3 24.9067 cv
1210.62 24.9067 li
1210.62 18.9399 1208.23 15.0688 1203.36 15.0688 cv
1197.78 15.0688 1195.27 19.23 1195.27 24.4556 cv
1195.27 29.3257 1198.07 32.9067 1202.81 32.9067 cv
1205.52 32.9067 1206.62 32.2612 1207.4 31.7456 cv
1209.52 30.3257 1210.3 27.9399 1210.4 27.1323 cv
1207.56 27.1323 li
cp
1198.3 22.6494 mo
1198.3 20.0366 1200.36 17.6172 1202.98 17.6172 cv
1206.43 17.6172 1207.52 20.0366 1207.69 22.6494 cv
1198.3 22.6494 li
cp
f
1218.14 17.9077 mo
1218.14 28.8745 li
1218.14 30.1968 1219.27 30.1968 1219.85 30.1968 cv
1220.85 30.1968 li
1220.85 32.4233 li
1219.81 32.52 1219.01 32.6489 1218.72 32.6489 cv
1215.91 32.6489 1215.3 31.0679 1215.3 29.0366 cv
1215.3 17.9077 li
1213.01 17.9077 li
1213.01 15.5527 li
1215.3 15.5527 li
1215.3 10.8433 li
1218.14 10.8433 li
1218.14 15.5527 li
1220.85 15.5527 li
1220.85 17.9077 li
1218.14 17.9077 li
cp
f
1224.33 12.4888 mo
1224.33 9.26318 li
1227.17 9.26318 li
1227.17 12.4888 li
1224.33 12.4888 li
cp
1227.17 32.4233 mo
1224.33 32.4233 li
1224.33 15.5527 li
1227.17 15.5527 li
1227.17 32.4233 li
cp
f
1243.55 27.1323 mo
1243.46 28.3901 1241.88 30.4546 1239.2 30.4546 cv
1235.94 30.4546 1234.3 28.4233 1234.3 24.9067 cv
1246.62 24.9067 li
1246.62 18.9399 1244.23 15.0688 1239.36 15.0688 cv
1233.78 15.0688 1231.27 19.23 1231.27 24.4556 cv
1231.27 29.3257 1234.07 32.9067 1238.81 32.9067 cv
1241.52 32.9067 1242.62 32.2612 1243.39 31.7456 cv
1245.52 30.3257 1246.3 27.9399 1246.39 27.1323 cv
1243.55 27.1323 li
cp
1234.3 22.6494 mo
1234.3 20.0366 1236.36 17.6172 1238.97 17.6172 cv
1242.43 17.6172 1243.52 20.0366 1243.68 22.6494 cv
1234.3 22.6494 li
cp
f
1260.23 20.3589 mo
1260.2 19.2944 1259.81 17.5205 1256.23 17.5205 cv
1255.36 17.5205 1252.88 17.811 1252.88 19.9077 cv
1252.88 21.2944 1253.75 21.6172 1255.94 22.1655 cv
1258.78 22.875 li
1262.3 23.7461 1263.52 25.0366 1263.52 27.3257 cv
1263.52 30.8101 1260.65 32.9067 1256.84 32.9067 cv
1250.17 32.9067 1249.68 29.0366 1249.59 27.0034 cv
1252.33 27.0034 li
1252.43 28.3257 1252.81 30.4546 1256.81 30.4546 cv
1258.84 30.4546 1260.68 29.6489 1260.68 27.7778 cv
1260.68 26.4233 1259.75 25.9722 1257.33 25.3589 cv
1254.04 24.5522 li
1251.68 23.9717 1250.14 22.7783 1250.14 20.4561 cv
1250.14 16.7466 1253.2 15.0688 1256.52 15.0688 cv
1262.55 15.0688 1262.97 19.5205 1262.97 20.3589 cv
1260.23 20.3589 li
cp
f
878.662 116.216 mo
878.662 116.216 880.282 124.929 880.543 127.607 cv
880.804 130.287 880.911 130.853 880.899 132.016 cv
880.772 132.993 880.552 134.838 880.139 136.304 cv
879.637 138.091 879.315 138.295 879.315 138.295 cv
878.456 137.696 li
878.456 137.696 879.197 135.808 878.755 130.457 cv
878.534 128.848 878.093 125.631 878.093 125.631 cv
878.093 125.631 877.237 121.859 877.264 120.201 cv
877.282 119.017 878.662 116.216 878.662 116.216 cv
cp
f
790.67 116.346 mo
791.41 116.641 li
791.41 116.641 791.569 117.699 791.838 117.985 cv
792.417 118.404 793.328 118.956 793.908 119.372 cv
793.659 118.948 793.043 122.626 793.043 122.626 cv
793.043 122.626 792.362 122.917 792.397 123.141 cv
792.547 124.108 792.667 125.118 792.765 125.631 cv
793.113 127.521 793.461 129.44 793.801 131.252 cv
794.153 133.155 794.133 135.409 794.133 137.512 cv
790.519 137.512 786.907 137.512 783.29 137.512 cv
781.7 137.512 779.417 137.736 777.945 137.435 cv
777.589 137.361 777.268 137.136 777.029 136.847 cv
776.208 135.847 776.757 133.662 776.757 132.416 cv
776.928 132.416 776.887 132.458 776.887 132.286 cv
776.973 132.286 777.064 132.286 777.148 132.286 cv
777.43 132.876 778.054 133.261 778.63 133.465 cv
779.251 133.683 783.701 133.683 784.281 133.461 cv
784.495 133.376 784.58 133.242 784.673 133.049 cv
785.105 132.127 783.734 129.35 783.114 128.668 cv
782.688 128.204 781.757 127.535 781.459 126.962 cv
781.39 126.831 782.25 121.964 782.309 121.964 cv
782.806 122.589 783.765 123.607 784.264 124.226 cv
785.567 126.378 786.115 129.105 786.159 131.894 cv
786.164 132.161 786.077 133.202 786.293 133.202 cv
786.293 133.247 786.293 133.29 786.293 133.332 cv
786.815 133.401 787.338 133.469 787.858 133.539 cv
788.208 133.482 788.559 133.425 788.907 133.368 cv
789.687 133.29 791.728 133.518 792.168 133.066 cv
792.336 132.886 792.374 132.564 792.365 132.286 cv
792.184 131.322 792.009 130.364 791.83 129.399 cv
791.396 127.015 791.189 124.553 790.54 122.243 cv
790.372 121.641 789.241 120.813 789.176 120.704 cv
789.238 120.806 790.67 116.346 790.67 116.346 cv
cp
f
826.402 116.479 mo
826.949 116.771 827.137 117.49 827.333 118.038 cv
827.724 119.14 828.125 120.749 828.203 121.964 cv
828.378 124.778 827.887 130.413 828.82 132.11 cv
829.069 132.568 829.451 132.94 829.961 133.09 cv
830.988 133.384 832.453 133.18 833.588 133.202 cv
836.506 133.202 839.426 133.202 842.341 133.202 cv
842.579 132.993 842.995 132.809 842.995 132.416 cv
842.9 132.338 842.807 132.261 842.708 132.18 cv
840.851 130.547 837.667 128.106 835.792 128.946 cv
835.609 129.019 835.179 129.375 834.637 129.305 cv
834.462 129.204 834.282 128.317 837.287 126.002 cv
840.27 123.696 843.93 128.208 845.922 130.266 cv
846.713 131.083 847.841 132.306 848.519 132.46 cv
851.005 133.025 858.129 132.866 857.348 132.863 cv
859 132.863 856.239 130.024 856.166 129.342 cv
856.068 128.428 857.182 125.068 857.182 125.623 cv
857.243 125.521 857.493 125.991 857.578 125.991 cv
859.748 129.237 859.195 129.192 859.195 137.12 cv
851.042 137.12 843.055 137.25 835.025 137.25 cv
833.2 137.25 829.607 137.642 828.292 136.765 cv
826.399 135.5 826.402 129.334 826.402 126.798 cv
826.402 124.908 826.585 122.757 825.777 121.291 cv
825.667 121.095 824.916 120.005 825.096 120.005 cv
825.509 118.84 826.154 117.759 826.402 116.479 cv
cp
f
755.592 116.609 mo
756.164 116.877 li
756.164 116.877 756.27 117.585 756.457 117.849 cv
756.819 118.372 758.127 119.351 758.726 119.351 cv
758.663 120.34 758.233 123.141 757.029 123.141 cv
757.604 126.595 758.391 130.118 758.809 133.727 cv
758.825 135.034 758.841 136.34 758.858 137.642 cv
757.208 137.642 748.507 137.352 747.772 137.932 cv
747.503 138.141 747.524 138.542 747.81 138.72 cv
748.108 138.909 748.585 139.083 748.757 139.422 cv
749.124 140.158 748.1 142.697 747.796 143.347 cv
746.602 145.866 738.995 146.592 736.129 146.216 cv
734.417 145.993 732.005 145.057 731.409 143.214 cv
731.165 142.463 731.192 140.807 731.381 140.018 cv
731.601 139.374 731.822 138.728 732.038 138.08 cv
732.397 137.266 734.973 132.416 735.798 132.416 cv
735.872 132.62 736.423 132.698 736.349 132.927 cv
736.191 133.38 735.529 134.152 735.276 134.547 cv
734.417 135.861 733.574 137.206 733.329 138.831 cv
732.791 142.35 737.423 143.037 740.044 142.996 cv
741.036 142.979 741.821 142.738 742.787 142.738 cv
743.184 142.5 743.846 142.476 744.355 142.476 cv
744.826 142.15 747.286 141.753 746.879 140.745 cv
746.553 139.949 743.049 140.459 742.229 139.863 cv
741.468 139.309 743.379 135.736 744.017 135.23 cv
746.882 132.93 751.661 133.591 755.721 133.591 cv
756.685 133.591 756.375 133.461 757.29 133.461 cv
757.208 130.848 756.305 128.342 755.901 125.873 cv
755.718 124.758 755.101 121.859 755.101 121.859 cv
754.106 121.177 li
755.592 116.609 li
cp
f
796.875 116.739 mo
796.875 116.739 797.304 118.636 797.46 119.467 cv
798.24 123.667 799.345 128.53 799.208 133.066 cv
799.158 134.63 798.783 135.998 798.231 137.27 cv
798.092 137.582 797.734 138.764 797.734 138.764 cv
796.954 138.299 li
796.954 138.299 797.297 136.189 797.361 135.417 cv
797.423 134.618 797.312 133.711 797.255 132.94 cv
797.101 130.984 796.819 128.898 796.562 126.933 cv
796.635 127.204 796.117 124.671 795.913 123.146 cv
795.782 122.361 795.533 120.397 795.533 120.397 cv
796.875 116.739 li
cp
f
820.393 122.096 mo
821.12 122.388 821.69 123.307 822.144 123.885 cv
824.095 126.358 824.05 129.35 824.034 130.718 cv
824.092 134.495 824.099 137.411 824.099 137.411 cv
824.099 137.411 816.024 137.831 815.249 136.875 cv
814.424 135.855 814.395 133.837 814.611 132.666 cv
814.921 130.897 815.236 133.236 816.979 133.217 cv
817.906 133.202 821.63 133.36 822.306 133.13 cv
822.519 133.057 822.666 132.863 822.725 132.637 cv
823.03 131.346 821.516 128.938 820.731 128.02 cv
820.397 127.627 819.449 126.864 819.449 126.864 cv
819.449 126.864 819.658 125.639 820.393 122.096 cv
cp
f
772.575 133.461 mo
772.575 133.691 771.992 133.584 771.792 133.584 cv
769.418 133.543 768.64 131.677 770.485 130.326 cv
772.098 130.583 772.653 131.882 772.707 133.461 cv
772.666 133.461 772.621 133.461 772.575 133.461 cv
cp
774.274 134.247 mo
774.274 131.461 774.334 126.595 771.007 126.277 cv
770.419 126.684 769.706 127.02 769.264 127.644 cv
767.848 129.621 766.367 135.247 769.113 136.882 cv
769.942 137.376 771.145 137.25 772.184 137.25 cv
772.184 138.161 771.025 139.137 770.395 139.66 cv
767.692 141.897 765.325 142.758 761.9 141.219 cv
761.466 141.022 760.185 139.929 760.185 139.929 cv
759.446 140.779 li
759.446 140.779 763.422 143.57 764.081 143.921 cv
765.136 144.482 766.492 145.069 767.86 144.894 cv
770.902 144.494 773.273 141.203 774.049 138.525 cv
774.401 137.305 774.274 135.659 774.274 134.247 cv
cp
f
868.667 135.025 mo
868.153 135.106 867.478 135.335 867.157 134.907 cv
867.083 134.911 867.597 134.511 868.311 133.886 cv
869.087 133.102 869.439 132.818 869.255 132.678 cv
869.711 132.993 870.108 133.625 870.3 134.116 cv
870.3 134.116 869.993 134.662 868.667 135.025 cv
cp
871.92 118.625 mo
871.312 118.197 871.243 117.241 871.243 117.241 cv
870.692 117.13 li
869.875 121.177 li
869.875 121.177 870.737 122.039 870.871 122.634 cv
871.202 124.125 870.565 128.39 869.544 129.251 cv
869.544 129.245 869.098 128.159 865.42 123.696 cv
862.804 120.549 859.586 118.502 859.586 118.502 cv
858.802 119.417 li
856.345 117.964 li
854.741 120.749 li
852.531 119.351 li
850.964 122.226 li
853.447 123.923 li
855.042 121.311 li
857.354 122.691 li
857.354 122.691 858.874 120.168 858.874 120.27 cv
858.808 122.704 859.407 123.526 859.624 124.043 cv
860.151 125.325 861.803 126.204 862.983 126.668 cv
862.983 126.411 863.673 125.986 863.898 125.883 cv
863.898 125.883 868.397 130.947 868.601 131.11 cv
868.569 131.22 868.532 131.327 868.495 131.437 cv
867.989 132.286 867.018 133.242 866.206 133.792 cv
865.754 134.095 864.479 134.637 864.26 135.121 cv
863.943 135.818 864.053 139.366 864.053 139.366 cv
864.053 139.366 870.071 139.863 871.549 138.026 cv
872.121 137.305 872.04 134.152 871.643 133.31 cv
871.342 132.673 870.561 131.752 870.561 130.981 cv
870.561 130.6 870.845 130.134 870.99 129.819 cv
871.326 129.068 871.624 128.272 871.822 127.44 cv
871.958 126.746 872.223 125.357 872.223 125.357 cv
872.223 125.357 872.235 123.875 872.493 123.321 cv
872.505 123.304 872.521 123.272 872.521 123.272 cv
873.717 123.492 li
874.21 119.609 li
874.21 119.609 872.562 118.952 871.92 118.625 cv
cp
f
330.127 116.369 mo
330.053 116.3 330.87 117.806 329.817 117.611 cv
329.265 117.394 327.44 117.162 327.788 118.321 cv
327.967 118.93 329.065 119.534 329.972 119.456 cv
330.404 119.395 330.69 119.37 331.123 119.309 cv
331.123 119.471 331.245 119.554 331.02 119.635 cv
329.347 120.338 328.208 120.762 326.958 121.204 cv
326.648 121.313 326.337 121.424 326.027 121.53 cv
326.027 121.444 325.975 121.481 325.975 121.391 cv
326.02 121.391 326.118 121.269 326.158 121.269 cv
326.424 120.983 326.95 120.709 327.048 120.314 cv
327.187 119.729 326.648 119.353 326.661 118.786 cv
326.672 117.91 328.036 116.255 329.163 116.174 cv
329.681 116.154 329.919 116.194 330.127 116.369 cv
cp
f
628.476 130.152 mo
628.526 130.187 629.29 130.589 629.301 130.589 cv
628.779 131.86 627.82 133.333 628.166 134.966 cv
628.641 137.244 630.101 136.978 632.123 136.978 cv
632.13 136.978 645.934 136.948 645.93 136.978 cv
645.975 136.84 645.922 136.824 645.962 136.681 cv
645.979 135.578 644.301 133.717 644.301 133.717 cv
645.677 130.24 li
645.677 130.24 646.856 132.418 647.089 133.561 cv
647.58 135.979 647.421 138.727 647.421 141.389 cv
641.059 141.389 632.314 141.396 631.302 141.389 cv
630.101 141.389 629.326 141.216 628.481 140.597 cv
626.374 139.044 626.383 135.432 627.133 133.059 cv
627.452 132.047 628.007 131.087 628.476 130.152 cv
cp
f
587.681 137.208 mo
586.975 136.978 591.172 134.73 592.68 134.235 cv
594.769 133.55 596.843 134.73 596.832 135.772 cv
596.798 137.885 589.432 137.763 587.681 137.208 cv
cp
606.78 135.264 mo
606.198 131.748 605.417 126.998 605.417 126.998 cv
606.042 127.094 li
606.96 123.338 li
606.96 123.338 605.796 122.75 604.659 122.119 cv
604.25 121.735 604.205 120.661 604.205 120.661 cv
603.621 120.387 li
601.854 124.915 li
601.854 124.915 603.237 125.826 603.413 126.396 cv
604.124 130.313 605.099 136.49 604.961 137.208 cv
603.825 137.208 601.256 137.208 599.277 137.208 cv
598.705 137.205 599.04 134.925 598.987 134.235 cv
598.832 132.272 597.831 130.14 595.671 129.821 cv
594.709 129.679 593.708 129.909 592.982 130.352 cv
591.112 131.701 589.237 133.047 587.368 134.395 cv
585.792 135.571 583.943 137.027 582.023 137.445 cv
578.504 138.212 579.615 133.157 579.615 133.157 cv
578.699 133.027 li
578.699 133.027 578.597 133.742 578.54 133.939 cv
577.487 136.978 575.86 137.812 573.355 137.345 cv
573.049 137.289 572.808 137.183 572.743 136.874 cv
572.135 133.945 571.085 127.103 571.085 127.103 cv
571.751 127.119 li
571.751 127.119 572.535 124.478 572.713 123.591 cv
571.385 123.237 570.627 122.625 570.107 121.881 cv
570.126 121.921 569.946 120.747 569.946 120.747 cv
569.476 120.59 li
569.476 120.59 568.077 123.125 567.798 125.287 cv
567.721 125.895 568.623 125.724 568.885 126.183 cv
569.624 129.429 569.698 131.067 570.839 136.645 cv
571.004 137.338 570.558 137.326 570.558 137.326 cv
565.207 137.332 li
565.207 137.332 564.913 137.236 564.895 137.078 cv
564.842 136.514 564.696 135.102 564.517 133.864 cv
564.24 131.998 562.655 130.165 562.655 130.165 cv
561.565 134.142 li
561.565 134.142 562.492 135.391 562.85 135.879 cv
563.157 136.375 563.723 137.309 562.826 137.338 cv
562.638 137.338 556.274 137.338 556.013 137.338 cv
556.013 137.367 555.702 137.338 555.706 136.978 cv
555.714 136.383 555.625 135.208 555.535 134.412 cv
555.195 131.655 553.746 130.584 553.746 130.584 cv
552.428 134.207 li
552.428 134.207 553.741 135.648 554.138 136.46 cv
554.269 136.729 554.424 137.333 554.093 137.338 cv
553.077 137.338 541.494 137.338 540.398 137.338 cv
538.102 137.338 534.725 136.978 537.753 131.263 cv
537.35 130.818 536.969 130.39 536.869 130.276 cv
536.386 130.879 536.129 131.177 535.345 133.002 cv
534.958 133.872 534.594 135.962 534.625 136.978 cv
534.663 138.16 535.275 139.185 535.968 140.016 cv
536.586 140.764 537.512 141.443 539.028 141.389 cv
539.122 141.384 546.022 141.389 556.789 141.389 cv
560.172 141.389 575.25 141.389 575.74 141.389 cv
577.307 141.389 578.406 139.577 578.406 139.577 cv
578.406 139.577 578.847 141.34 580.888 141.34 cv
582.928 141.34 607.247 141.389 607.247 141.389 cv
607.247 141.389 607.516 137.702 606.78 135.264 cv
cp
f
688.018 136.948 mo
687.431 136.948 685.104 136.331 684.949 135.726 cv
684.782 135.088 685.525 134.538 685.929 134.137 cv
687.299 134.624 688.457 135.574 688.018 136.948 cv
cp
716.811 136.404 mo
716.325 133.448 715.418 130.039 715.129 127.013 cv
715.129 126.674 li
715.161 126.23 715.52 126.546 715.855 126.388 cv
715.941 126.085 716.497 123.673 716.664 122.837 cv
716.129 122.837 714.149 121.191 714.149 121.191 cv
714.239 120.092 li
713.5 119.702 li
711.764 124.342 li
712.985 125.237 li
712.985 125.237 715.091 135.962 715.095 136.04 cv
715.104 136.363 715.158 136.914 714.479 136.914 cv
713.801 136.914 708.004 137.191 707.485 136.729 cv
705.011 134.521 700.141 127.062 696.013 130.013 cv
693.062 132.113 693.332 133.181 693.332 133.181 cv
693.332 133.181 694.813 132.656 695.749 132.832 cv
699.757 133.598 701.901 136.996 701.901 136.996 cv
690.87 136.992 li
690.87 136.992 690.706 134.828 690.461 134.068 cv
690.154 133.136 688.754 130.313 687.472 130.471 cv
686.001 130.65 684.517 132.757 683.887 133.95 cv
683.537 134.607 683.263 135.252 682.776 135.856 cv
681.786 137.074 681.416 136.996 681.416 136.996 cv
673.657 136.996 li
673.657 136.996 673.175 136.966 673.21 136.162 cv
673.223 135.549 673.782 134.966 674.069 134.46 cv
674.701 133.316 674.893 131.476 673.917 130.5 cv
672.435 129.017 668.299 128.782 666.817 130.467 cv
665.164 132.336 665.842 134.921 665.842 134.921 cv
665.842 134.921 666.267 133.868 667.22 134.243 cv
667.912 134.505 669.03 135.738 668.565 136.452 cv
668.316 136.828 667.507 136.978 667.507 136.978 cv
664.773 136.954 li
664.773 136.954 664.352 133.758 664.184 132.991 cv
663.67 130.659 662.383 129.858 662.383 129.858 cv
661.372 133.293 li
661.372 133.293 662.581 135.422 663.074 136.272 cv
663.409 136.941 662.853 137.027 662.853 137.027 cv
652.719 136.978 li
652.719 136.978 651.053 136.978 651.283 125.197 cv
651.36 121.167 649.608 120.354 649.608 120.354 cv
647.931 124.469 li
647.931 124.469 649.143 124.971 649.461 127.152 cv
649.474 127.732 648.457 138.576 650.94 140.666 cv
651.79 141.389 652.516 141.364 652.516 141.364 cv
666.862 141.389 li
666.862 141.389 668.021 141.482 668.929 140.768 cv
669.525 140.292 670.643 139.383 670.643 139.383 cv
670.643 139.383 671.758 140.486 672.227 140.759 cv
673.003 141.208 673.853 141.368 674.856 141.384 cv
676.844 141.414 679.274 141.577 680.98 141.07 cv
681.478 140.918 682.018 140.651 682.434 140.344 cv
682.809 140.062 683.74 139.305 683.74 139.305 cv
683.74 139.305 685.042 140.155 685.583 140.355 cv
688.457 141.428 690.794 141.36 690.794 141.36 cv
716.892 141.389 li
716.892 141.389 716.839 137.972 716.811 136.404 cv
cp
f
477.939 136.686 mo
477.58 137.272 476.473 136.681 474.863 135.879 cv
474.406 135.644 475.787 134.19 475.848 134.137 cv
476.987 134.395 478.297 136.097 477.939 136.686 cv
cp
497.009 136.257 mo
494.445 134.088 492.841 131.491 489.807 129.978 cv
489.034 129.59 487.696 128.875 486.104 129.792 cv
485.12 130.366 484.143 131.231 483.359 133.386 cv
483.969 133.328 484.271 133.128 485.503 133.146 cv
486.854 133.149 491.554 135.305 491.536 136.978 cv
491.533 137.338 491.232 137.338 491.232 137.338 cv
481.299 137.338 li
481.299 137.338 480.881 137.333 480.861 136.978 cv
480.726 134.88 479.269 130.793 477.799 130.458 cv
476.489 130.158 474.648 132.586 474.075 133.561 cv
473.533 134.476 473.072 135.563 472.161 136.249 cv
471.308 136.884 470.388 137.338 469.185 137.338 cv
468.548 137.338 467.597 137.307 467.086 137.037 cv
466.438 136.69 466.697 135.522 466.47 134.084 cv
466.241 132.646 464.677 130.838 464.677 130.838 cv
464.677 130.838 464.281 132.039 463.78 135.215 cv
464.78 136.302 466.367 138.229 465.657 139.678 cv
464.354 142.262 459.942 146.203 457.198 146.221 cv
455.36 146.235 453.43 144.429 453.43 144.429 cv
452.756 145.57 li
452.756 145.57 457.537 149.346 460.578 148.893 cv
463.787 148.415 465.154 145.912 466.289 143.959 cv
466.661 143.315 467.52 141.389 467.52 141.389 cv
467.52 141.389 468.201 141.584 469.018 141.584 cv
473.001 141.584 473.3 139.319 473.3 139.319 cv
473.3 139.319 474.717 140.256 475.362 140.491 cv
476.823 141.012 479.016 141.364 480.584 141.364 cv
480.673 141.364 499.038 141.389 499.038 141.389 cv
499.038 137.011 li
499.038 137.011 497.866 136.978 497.009 136.257 cv
cp
f
508.343 138.959 mo
507.432 139.193 507.171 139.326 506.614 139.167 cv
507.268 138.334 508.142 137.755 508.739 136.978 cv
510.241 138.547 509.15 138.551 508.343 138.959 cv
cp
510.963 122.514 mo
510.914 121.489 li
509.979 120.942 li
509.979 120.942 509.22 124.506 509.195 125.968 cv
509.19 126.033 510.306 126.507 510.301 126.567 cv
510.179 128.087 509.498 133.407 509 133.439 cv
508.762 133.459 508.024 132.195 507.892 132.01 cv
506.069 129.454 503.756 125.515 500.046 123.228 cv
500.4 123.451 498.988 122.396 498.601 122.844 cv
498.152 123.355 498.8 128.786 498.694 127.797 cv
499.25 129.821 502.479 130.904 502.479 130.904 cv
502.479 130.904 503.181 129.968 503.21 130.01 cv
504.795 131.778 507.035 134.272 507.754 135.362 cv
507.951 135.656 505.419 138.015 503.512 139.101 cv
503.528 140.442 503.512 140.981 503.544 143.511 cv
505.86 143.511 509.539 143.31 511.432 142.189 cv
511.311 142.267 511.665 138.558 511.649 138.429 cv
511.481 137.49 510.02 135.208 510 134.995 cv
510.013 135.138 510.689 133.742 511.408 131.426 cv
511.801 129.993 511.968 128.327 512.037 127.115 cv
512.037 127.111 512.984 127.409 512.984 127.409 cv
513.466 123.605 li
510.963 122.514 li
cp
f
404.419 145.492 mo
404.102 145.94 402.922 145.882 401.6 144.822 cv
400.443 143.903 399.664 142.208 399.843 141.989 cv
400.015 141.768 401.763 142.189 402.971 143.022 cv
404.085 143.792 404.788 144.96 404.419 145.492 cv
cp
402.563 132.55 mo
403.085 132.288 404.208 133.746 403.648 134.701 cv
403.272 135.334 401.35 136.543 400.762 136.204 cv
400.257 135.893 402.023 132.815 402.563 132.55 cv
cp
416.438 126.8 mo
416.622 126.802 417.244 127.143 417.244 127.143 cv
418.342 123.397 li
418.342 123.397 416.256 122.216 415.856 121.853 cv
415.35 121.399 415.717 120.583 415.717 120.583 cv
414.945 120.11 li
414.945 120.11 413.663 123.577 413.039 125.287 cv
413.141 125.287 414.509 126.012 414.509 126.012 cv
414.509 126.012 415.778 133.259 416.088 135.138 cv
416.399 137.016 416.33 137.338 416.33 137.338 cv
403.677 137.338 li
403.677 137.338 404.441 136.783 404.833 136.465 cv
405.963 135.486 406.282 134.323 406.29 132.534 cv
406.29 130.806 406.212 128.128 404.505 127.609 cv
402.897 127.119 400.77 131.386 400.137 133.39 cv
399.607 135.028 399.276 136.391 398.856 136.978 cv
398.569 137.363 396.708 137.338 395.242 137.338 cv
392.633 137.338 392.139 137.292 392.024 136.948 cv
391.383 135.123 391.593 132.627 391.343 128.144 cv
391.221 125.956 390.449 121.257 390.044 120.856 cv
390.13 120.856 388.207 124.662 388.207 124.662 cv
388.207 124.662 389.122 129.846 388.959 132.154 cv
388.432 136.856 383.904 140.135 381.5 141.266 cv
378.679 142.606 376.588 142.183 376.588 142.183 cv
376.588 142.183 376.874 141.205 376.678 138.167 cv
376.481 135.129 374.498 127.324 374.498 127.324 cv
374.498 127.324 374.89 127.789 374.946 127.659 cv
375.253 126.874 375.825 124.58 376.065 124.188 cv
376.241 124.233 376.413 124.273 376.588 124.319 cv
376.588 125.25 376.797 126.527 377.143 127.306 cv
377.539 128.209 379.715 130.422 380.866 130.814 cv
380.895 130.822 381.553 129.851 381.683 129.576 cv
383.879 129.708 386.162 133.263 386.713 135.096 cv
386.803 135.096 386.954 135.063 387.04 135.063 cv
387.04 133.807 387.334 132.418 386.824 131.145 cv
385.717 128.414 379.948 123.29 377.078 123.109 cv
376.556 123.122 376.392 123.698 376.392 123.698 cv
373.861 122.133 li
373.672 120.971 li
373.061 120.53 li
371.411 125.479 li
372.6 126.294 li
372.6 126.294 373.13 129.663 373.494 131.497 cv
373.951 133.954 375.396 139.12 373.901 141.115 cv
373.15 142.11 372.06 142.694 370.933 143.034 cv
371.559 142.853 367.793 144.462 365.152 143.18 cv
362.911 142.09 363.132 139.024 363.985 137.021 cv
364.491 136.04 365.696 134.243 365.696 134.243 cv
364.993 133.593 li
364.993 133.593 364.038 134.775 363.319 136.113 cv
362.601 137.453 361.617 140.759 361.78 142.764 cv
362.09 146.639 365.471 148.296 369.157 147.508 cv
373.154 146.644 374.718 145.381 376.351 143.226 cv
377.723 143.29 378.902 143.374 379.915 143.344 cv
382.132 143.276 384.297 142.539 385.987 141.417 cv
387.289 140.543 388.123 139.174 388.828 137.874 cv
389.061 137.404 389.29 136.929 389.522 136.46 cv
390.212 135.753 390.13 136.391 390.159 136.888 cv
390.437 141.384 391.649 141.389 392.462 141.389 cv
394.928 141.389 397.361 141.389 397.361 141.389 cv
397.361 141.389 397.912 141.417 398.055 142.13 cv
398.227 142.985 398.374 144.744 398.594 145.527 cv
399.035 147.108 400.517 148.987 402.211 149.472 cv
402.905 149.667 404.073 149.737 404.661 149.289 cv
405.396 148.716 407.009 146.717 406.927 143.422 cv
406.903 142.267 405.024 141.389 405.024 141.389 cv
418.265 141.389 li
418.265 141.389 418.383 138.003 418.102 136.24 cv
417.608 132.899 416.536 127.29 416.438 126.8 cv
cp
f
736.909 149.226 mo
738.387 147.527 li
740.214 148.487 li
741.568 147.22 li
743.397 148.355 li
742.003 149.922 li
740.176 149.139 li
738.868 150.487 li
736.909 149.226 li
cp
f
633.221 128.756 mo
634.919 125.797 li
637.218 127.09 li
638.708 124.306 li
641.497 125.882 li
639.778 129.148 li
637.492 127.842 li
636.008 130.37 li
633.221 128.756 li
cp
f
656.259 147.529 mo
657.828 144.61 li
660.003 145.655 li
661.662 142.998 li
664.49 144.565 li
662.663 147.791 li
660.395 146.655 li
659.002 149.182 li
656.259 147.529 li
cp
f
699.157 143.433 mo
702.64 145.218 li
700.765 148.705 li
697.415 146.831 li
699.157 143.433 li
cp
f
545.712 143.937 mo
549.173 145.895 li
547.344 149.293 li
543.817 147.333 li
545.712 143.937 li
cp
f
561.768 143.634 mo
564.589 145.243 li
563.087 148.313 li
560.67 147.005 li
559.234 149.75 li
556.358 147.921 li
558.004 144.875 li
560.421 146.235 li
561.768 143.634 li
cp
f
609.86 120.583 mo
608.128 124.862 li
608.128 124.862 610.087 135.608 610.186 137.794 cv
610.31 140.466 609.63 142.533 609.63 142.533 cv
610.512 143.184 li
610.512 143.184 611.95 140.932 612.113 139.199 cv
612.277 137.469 612.211 133.19 611.623 129.467 cv
611.036 125.745 609.86 120.583 609.86 120.583 cv
cp
f
518.193 119.897 mo
516.461 124.175 li
516.461 124.175 518.422 134.921 518.52 137.11 cv
518.643 139.781 517.965 141.845 517.965 141.845 cv
518.847 142.5 li
518.847 142.5 520.285 140.245 520.447 138.515 cv
520.611 136.783 520.544 132.505 519.957 128.782 cv
519.37 125.057 518.193 119.897 518.193 119.897 cv
cp
f
304.932 136.771 mo
304.573 137.36 303.466 136.767 301.858 135.967 cv
301.4 135.729 302.781 134.276 302.841 134.223 cv
303.98 134.48 305.291 136.183 304.932 136.771 cv
cp
324.002 136.278 mo
321.438 134.109 319.833 131.512 316.801 129.998 cv
316.028 129.609 314.689 128.894 313.097 129.813 cv
312.114 130.385 311.138 131.251 310.354 133.407 cv
310.962 133.35 311.264 133.149 312.498 133.167 cv
313.849 133.17 318.548 135.326 318.531 137 cv
318.528 137.36 318.225 137.36 318.225 137.36 cv
308.292 137.36 li
308.292 137.36 307.875 137.356 307.855 137 cv
307.721 134.901 306.262 130.814 304.793 130.479 cv
303.482 130.177 301.642 132.607 301.07 133.583 cv
300.527 134.497 300.066 135.583 299.155 136.268 cv
298.302 136.905 297.383 137.36 296.178 137.36 cv
295.541 137.36 294.591 137.326 294.081 137.056 cv
293.431 136.709 293.692 135.542 293.464 134.105 cv
293.235 132.667 291.671 130.859 291.671 130.859 cv
291.671 130.859 291.276 132.059 290.773 135.236 cv
291.774 136.322 293.361 138.249 292.651 139.699 cv
291.349 142.283 286.936 146.221 284.191 146.242 cv
282.355 146.255 280.423 144.452 280.423 144.452 cv
279.75 145.59 li
279.75 145.59 284.53 149.367 287.573 148.914 cv
290.781 148.434 292.149 145.933 293.284 143.98 cv
293.655 143.334 294.513 141.408 294.513 141.408 cv
294.513 141.408 295.195 141.605 296.011 141.605 cv
299.996 141.605 300.294 139.339 300.294 139.339 cv
300.294 139.339 301.711 140.277 302.356 140.51 cv
303.817 141.035 306.01 141.384 307.578 141.384 cv
307.994 141.384 326.032 141.408 326.032 141.408 cv
326.044 136.978 li
326.044 136.978 324.75 136.905 324.002 136.278 cv
cp
f
335.336 139.044 mo
334.425 139.278 334.165 139.413 333.609 139.252 cv
334.262 138.419 335.136 137.84 335.732 137.065 cv
337.235 138.632 336.145 138.636 335.336 139.044 cv
cp
337.958 122.6 mo
337.908 121.575 li
336.974 121.028 li
336.974 121.028 336.213 124.592 336.189 126.054 cv
336.186 126.118 337.299 126.591 337.296 126.654 cv
337.173 128.172 336.491 133.492 335.993 133.526 cv
335.756 133.545 335.018 132.28 334.887 132.096 cv
333.062 129.542 330.751 125.6 327.04 123.314 cv
327.395 123.535 325.982 122.482 325.595 122.93 cv
325.145 123.44 325.794 128.872 325.688 127.883 cv
326.245 129.909 329.473 130.989 329.473 130.989 cv
329.473 130.989 330.176 130.055 330.204 130.095 cv
331.788 131.864 334.03 134.358 334.748 135.447 cv
334.944 135.742 332.413 138.101 330.506 139.188 cv
330.522 140.527 330.506 141.066 330.539 143.597 cv
332.854 143.597 336.532 143.398 338.427 142.275 cv
338.304 142.352 338.66 138.645 338.643 138.515 cv
338.476 137.575 337.014 135.292 336.994 135.082 cv
337.005 135.224 337.684 133.827 338.402 131.512 cv
338.794 130.08 338.961 128.414 339.031 127.203 cv
339.031 127.196 339.978 127.495 339.978 127.495 cv
340.46 123.69 li
337.958 122.6 li
cp
f
345.188 119.983 mo
343.458 124.261 li
343.458 124.261 345.417 135.006 345.514 137.195 cv
345.637 139.865 344.959 141.931 344.959 141.931 cv
345.841 142.585 li
345.841 142.585 347.278 140.331 347.442 138.6 cv
347.605 136.87 347.54 132.589 346.952 128.867 cv
346.363 125.143 345.188 119.983 345.188 119.983 cv
cp
f
503.006 115.664 mo
502.933 115.593 503.75 117.1 502.696 116.904 cv
502.145 116.688 500.32 116.456 500.666 117.614 cv
500.846 118.222 501.943 118.828 502.851 118.75 cv
503.283 118.687 503.57 118.665 504.002 118.603 cv
504.002 118.766 504.125 118.848 503.899 118.93 cv
502.227 119.631 501.086 120.056 499.837 120.497 cv
499.527 120.608 499.218 120.717 498.907 120.824 cv
498.907 120.738 498.854 120.775 498.854 120.685 cv
498.899 120.685 498.997 120.563 499.038 120.563 cv
499.303 120.277 499.83 120.003 499.927 119.607 cv
500.065 119.022 499.527 118.648 499.54 118.081 cv
499.553 117.202 500.915 115.548 502.043 115.466 cv
502.561 115.447 502.798 115.488 503.006 115.664 cv
cp
f
439.307 136.978 mo
439.202 137.338 437.976 137.722 437.115 136.978 cv
436.254 136.237 436.18 135.374 436.682 134.905 cv
437.184 134.435 437.939 134.542 438.229 134.756 cv
438.932 135.281 439.414 136.619 439.307 136.978 cv
cp
438.087 130.152 mo
435.853 130.152 434.772 132.603 434.232 135.444 cv
433.694 138.286 434.502 140.389 435.632 141.099 cv
436.751 141.809 438.879 141.168 438.879 141.168 cv
438.879 141.168 436.992 144.646 433.905 145.516 cv
429.402 146.786 426.929 143.79 426.929 143.79 cv
426.21 144.544 li
426.21 144.544 430.787 149.434 434.126 149.293 cv
438.302 149.113 441.125 144.328 441.434 139.878 cv
441.732 135.472 441.467 130.152 438.087 130.152 cv
cp
f
421.123 120.484 mo
419.392 124.764 li
419.392 124.764 421.352 135.509 421.449 137.697 cv
421.571 140.369 420.894 142.434 420.894 142.434 cv
421.776 143.086 li
421.776 143.086 423.212 140.833 423.376 139.101 cv
423.54 137.372 423.475 133.092 422.887 129.37 cv
422.298 125.646 421.123 120.484 421.123 120.484 cv
cp
f
283.34 68.2759 mo
280.211 68.2759 li
280.211 45.1157 li
296.243 45.1157 li
296.243 47.8892 li
283.34 47.8892 li
283.34 54.9858 li
294.695 54.9858 li
294.695 57.7603 li
283.34 57.7603 li
283.34 68.2759 li
cp
f
310.726 44.6001 mo
307.242 44.6001 li
304.372 49.147 li
306.533 49.147 li
310.726 44.6001 li
cp
310.403 62.9849 mo
310.307 64.2427 308.726 66.3071 306.049 66.3071 cv
302.791 66.3071 301.146 64.2759 301.146 60.7603 cv
313.468 60.7603 li
313.468 54.7925 311.081 50.9214 306.21 50.9214 cv
300.63 50.9214 298.114 55.0825 298.114 60.3081 cv
298.114 65.1782 300.92 68.7593 305.662 68.7593 cv
308.371 68.7593 309.468 68.1138 310.242 67.5981 cv
312.371 66.1782 313.145 63.7915 313.242 62.9849 cv
310.403 62.9849 li
cp
301.146 58.5024 mo
301.146 55.8892 303.21 53.4692 305.823 53.4692 cv
309.274 53.4692 310.371 55.8892 310.532 58.5024 cv
301.146 58.5024 li
cp
f
331.5 45.1157 mo
328.661 45.1157 li
328.661 53.7925 li
328.596 53.7925 li
327.919 52.8247 326.629 50.9214 323.564 50.9214 cv
319.081 50.9214 316.533 54.5981 316.533 59.3403 cv
316.533 63.3726 318.21 68.7593 323.951 68.7593 cv
325.597 68.7593 327.532 68.2427 328.758 65.9536 cv
328.822 65.9536 li
328.822 68.2759 li
331.5 68.2759 li
331.5 45.1157 li
cp
319.468 59.7915 mo
319.468 57.6313 319.693 53.4692 324.081 53.4692 cv
328.177 53.4692 328.628 57.8892 328.628 60.6313 cv
328.628 65.1138 325.822 66.3071 324.016 66.3071 cv
320.919 66.3071 319.468 63.5015 319.468 59.7915 cv
cp
f
347.886 44.6001 mo
344.402 44.6001 li
341.531 49.147 li
343.692 49.147 li
347.886 44.6001 li
cp
347.563 62.9849 mo
347.467 64.2427 345.886 66.3071 343.209 66.3071 cv
339.951 66.3071 338.306 64.2759 338.306 60.7603 cv
350.627 60.7603 li
350.627 54.7925 348.24 50.9214 343.37 50.9214 cv
337.79 50.9214 335.273 55.0825 335.273 60.3081 cv
335.273 65.1782 338.08 68.7593 342.822 68.7593 cv
345.531 68.7593 346.628 68.1138 347.402 67.5981 cv
349.531 66.1782 350.305 63.7915 350.402 62.9849 cv
347.563 62.9849 li
cp
338.306 58.5024 mo
338.306 55.8892 340.37 53.4692 342.982 53.4692 cv
346.434 53.4692 347.531 55.8892 347.692 58.5024 cv
338.306 58.5024 li
cp
f
357.886 68.2759 mo
355.047 68.2759 li
355.047 51.4048 li
357.725 51.4048 li
357.725 54.2114 li
357.789 54.2114 li
358.918 52.2446 360.401 50.9214 362.53 50.9214 cv
362.885 50.9214 363.047 50.9536 363.272 51.0181 cv
363.272 53.9536 li
362.208 53.9536 li
359.563 53.9536 357.886 56.0181 357.886 58.4692 cv
357.886 68.2759 li
cp
f
368.24 56.5337 mo
368.434 55.2446 368.885 53.2759 372.111 53.2759 cv
374.788 53.2759 376.078 54.2446 376.078 56.0181 cv
376.078 57.6958 375.271 57.9536 374.594 58.0181 cv
369.918 58.5981 li
365.208 59.1792 364.789 62.4692 364.789 63.8892 cv
364.789 66.7915 366.982 68.7593 370.078 68.7593 cv
373.369 68.7593 375.078 67.2114 376.175 66.0181 cv
376.271 67.3071 376.658 68.5981 379.175 68.5981 cv
379.82 68.5981 380.239 68.4048 380.723 68.2759 cv
380.723 66.2114 li
380.4 66.2759 380.046 66.3403 379.787 66.3403 cv
379.207 66.3403 378.852 66.0493 378.852 65.3403 cv
378.852 55.6313 li
378.852 51.3091 373.949 50.9214 372.595 50.9214 cv
368.434 50.9214 365.756 52.5024 365.627 56.5337 cv
368.24 56.5337 li
cp
376.014 62.437 mo
376.014 64.6948 373.434 66.4048 370.788 66.4048 cv
368.659 66.4048 367.725 65.3071 367.725 63.4692 cv
367.725 61.3403 369.949 60.9204 371.336 60.7271 cv
374.853 60.2759 375.563 60.0181 376.014 59.6626 cv
376.014 62.437 li
cp
f
387.787 53.7603 mo
387.787 64.7271 li
387.787 66.0493 388.916 66.0493 389.497 66.0493 cv
390.497 66.0493 li
390.497 68.2759 li
389.465 68.3716 388.658 68.5005 388.368 68.5005 cv
385.563 68.5005 384.949 66.9204 384.949 64.8892 cv
384.949 53.7603 li
382.658 53.7603 li
382.658 51.4048 li
384.949 51.4048 li
384.949 46.6958 li
387.787 46.6958 li
387.787 51.4048 li
390.497 51.4048 li
390.497 53.7603 li
387.787 53.7603 li
cp
f
393.98 48.3413 mo
393.98 45.1157 li
396.819 45.1157 li
396.819 48.3413 li
393.98 48.3413 li
cp
396.819 68.2759 mo
393.98 68.2759 li
393.98 51.4048 li
396.819 51.4048 li
396.819 68.2759 li
cp
f
400.754 59.8247 mo
400.754 64.1782 403.206 68.7271 408.593 68.7271 cv
413.979 68.7271 416.431 64.1782 416.431 59.8247 cv
416.431 55.4692 413.979 50.9214 408.593 50.9214 cv
403.206 50.9214 400.754 55.4692 400.754 59.8247 cv
cp
403.689 59.8247 mo
403.689 57.5669 404.528 53.3735 408.593 53.3735 cv
412.656 53.3735 413.496 57.5669 413.496 59.8247 cv
413.496 62.0825 412.656 66.2759 408.593 66.2759 cv
404.528 66.2759 403.689 62.0825 403.689 59.8247 cv
cp
f
434.043 68.2759 mo
431.205 68.2759 li
431.205 57.8892 li
431.205 54.9536 430.365 53.4692 427.592 53.4692 cv
425.979 53.4692 423.141 54.5024 423.141 59.0825 cv
423.141 68.2759 li
420.303 68.2759 li
420.303 51.4048 li
422.979 51.4048 li
422.979 53.7925 li
423.044 53.7925 li
423.656 52.8892 425.237 50.9214 428.141 50.9214 cv
430.753 50.9214 434.043 51.9858 434.043 56.7915 cv
434.043 68.2759 li
cp
f
448.559 48.3413 mo
448.559 45.1157 li
451.397 45.1157 li
451.397 48.3413 li
448.559 48.3413 li
cp
451.397 68.2759 mo
448.559 68.2759 li
448.559 51.4048 li
451.397 51.4048 li
451.397 68.2759 li
cp
f
470.041 68.2759 mo
467.203 68.2759 li
467.203 57.8892 li
467.203 54.9536 466.364 53.4692 463.59 53.4692 cv
461.977 53.4692 459.139 54.5024 459.139 59.0825 cv
459.139 68.2759 li
456.301 68.2759 li
456.301 51.4048 li
458.978 51.4048 li
458.978 53.7925 li
459.042 53.7925 li
459.654 52.8892 461.235 50.9214 464.139 50.9214 cv
466.751 50.9214 470.041 51.9858 470.041 56.7915 cv
470.041 68.2759 li
cp
f
478.363 53.7603 mo
478.363 64.7271 li
478.363 66.0493 479.492 66.0493 480.073 66.0493 cv
481.073 66.0493 li
481.073 68.2759 li
480.041 68.3716 479.234 68.5005 478.944 68.5005 cv
476.139 68.5005 475.525 66.9204 475.525 64.8892 cv
475.525 53.7603 li
473.234 53.7603 li
473.234 51.4048 li
475.525 51.4048 li
475.525 46.6958 li
478.363 46.6958 li
478.363 51.4048 li
481.073 51.4048 li
481.073 53.7603 li
478.363 53.7603 li
cp
f
495.976 62.9849 mo
495.879 64.2427 494.299 66.3071 491.621 66.3071 cv
488.363 66.3071 486.719 64.2759 486.719 60.7603 cv
499.04 60.7603 li
499.04 54.7925 496.653 50.9214 491.782 50.9214 cv
486.202 50.9214 483.686 55.0825 483.686 60.3081 cv
483.686 65.1782 486.492 68.7593 491.234 68.7593 cv
493.943 68.7593 495.041 68.1138 495.814 67.5981 cv
497.943 66.1782 498.718 63.7915 498.814 62.9849 cv
495.976 62.9849 li
cp
486.719 58.5024 mo
486.719 55.8892 488.783 53.4692 491.396 53.4692 cv
494.847 53.4692 495.943 55.8892 496.105 58.5024 cv
486.719 58.5024 li
cp
f
506.298 68.2759 mo
503.459 68.2759 li
503.459 51.4048 li
506.137 51.4048 li
506.137 54.2114 li
506.201 54.2114 li
507.33 52.2446 508.814 50.9214 510.943 50.9214 cv
511.298 50.9214 511.459 50.9536 511.686 51.0181 cv
511.686 53.9536 li
510.621 53.9536 li
507.976 53.9536 506.298 56.0181 506.298 58.4692 cv
506.298 68.2759 li
cp
f
529.006 68.2759 mo
526.168 68.2759 li
526.168 57.8892 li
526.168 54.9536 525.329 53.4692 522.555 53.4692 cv
520.942 53.4692 518.104 54.5024 518.104 59.0825 cv
518.104 68.2759 li
515.266 68.2759 li
515.266 51.4048 li
517.942 51.4048 li
517.942 53.7925 li
518.007 53.7925 li
518.619 52.8892 520.2 50.9214 523.104 50.9214 cv
525.717 50.9214 529.006 51.9858 529.006 56.7915 cv
529.006 68.2759 li
cp
f
536.36 56.5337 mo
536.555 55.2446 537.006 53.2759 540.231 53.2759 cv
542.909 53.2759 544.2 54.2446 544.2 56.0181 cv
544.2 57.6958 543.393 57.9536 542.715 58.0181 cv
538.038 58.5981 li
533.329 59.1792 532.911 62.4692 532.911 63.8892 cv
532.911 66.7915 535.102 68.7593 538.2 68.7593 cv
541.489 68.7593 543.2 67.2114 544.295 66.0181 cv
544.393 67.3071 544.78 68.5981 547.295 68.5981 cv
547.94 68.5981 548.36 68.4048 548.844 68.2759 cv
548.844 66.2114 li
548.522 66.2759 548.167 66.3403 547.909 66.3403 cv
547.329 66.3403 546.973 66.0493 546.973 65.3403 cv
546.973 55.6313 li
546.973 51.3091 542.071 50.9214 540.715 50.9214 cv
536.555 50.9214 533.877 52.5024 533.749 56.5337 cv
536.36 56.5337 li
cp
544.135 62.437 mo
544.135 64.6948 541.555 66.4048 538.909 66.4048 cv
536.78 66.4048 535.844 65.3071 535.844 63.4692 cv
535.844 61.3403 538.071 60.9204 539.458 60.7271 cv
542.973 60.2759 543.684 60.0181 544.135 59.6626 cv
544.135 62.437 li
cp
f
555.909 53.7603 mo
555.909 64.7271 li
555.909 66.0493 557.038 66.0493 557.618 66.0493 cv
558.618 66.0493 li
558.618 68.2759 li
557.586 68.3716 556.78 68.5005 556.489 68.5005 cv
553.684 68.5005 553.071 66.9204 553.071 64.8892 cv
553.071 53.7603 li
550.78 53.7603 li
550.78 51.4048 li
553.071 51.4048 li
553.071 46.6958 li
555.909 46.6958 li
555.909 51.4048 li
558.618 51.4048 li
558.618 53.7603 li
555.909 53.7603 li
cp
f
562.102 48.3413 mo
562.102 45.1157 li
564.94 45.1157 li
564.94 48.3413 li
562.102 48.3413 li
cp
564.94 68.2759 mo
562.102 68.2759 li
562.102 51.4048 li
564.94 51.4048 li
564.94 68.2759 li
cp
f
568.875 59.8247 mo
568.875 64.1782 571.327 68.7271 576.713 68.7271 cv
582.1 68.7271 584.551 64.1782 584.551 59.8247 cv
584.551 55.4692 582.1 50.9214 576.713 50.9214 cv
571.327 50.9214 568.875 55.4692 568.875 59.8247 cv
cp
571.811 59.8247 mo
571.811 57.5669 572.649 53.3735 576.713 53.3735 cv
580.778 53.3735 581.618 57.5669 581.618 59.8247 cv
581.618 62.0825 580.778 66.2759 576.713 66.2759 cv
572.649 66.2759 571.811 62.0825 571.811 59.8247 cv
cp
f
602.165 68.2759 mo
599.327 68.2759 li
599.327 57.8892 li
599.327 54.9536 598.487 53.4692 595.713 53.4692 cv
594.1 53.4692 591.262 54.5024 591.262 59.0825 cv
591.262 68.2759 li
588.422 68.2759 li
588.422 51.4048 li
591.1 51.4048 li
591.1 53.7925 li
591.165 53.7925 li
591.778 52.8892 593.358 50.9214 596.26 50.9214 cv
598.874 50.9214 602.165 51.9858 602.165 56.7915 cv
602.165 68.2759 li
cp
f
609.518 56.5337 mo
609.713 55.2446 610.165 53.2759 613.389 53.2759 cv
616.067 53.2759 617.358 54.2446 617.358 56.0181 cv
617.358 57.6958 616.551 57.9536 615.874 58.0181 cv
611.196 58.5981 li
606.487 59.1792 606.067 62.4692 606.067 63.8892 cv
606.067 66.7915 608.26 68.7593 611.358 68.7593 cv
614.647 68.7593 616.358 67.2114 617.454 66.0181 cv
617.551 67.3071 617.938 68.5981 620.454 68.5981 cv
621.098 68.5981 621.518 68.4048 622.002 68.2759 cv
622.002 66.2114 li
621.68 66.2759 621.325 66.3403 621.067 66.3403 cv
620.485 66.3403 620.131 66.0493 620.131 65.3403 cv
620.131 55.6313 li
620.131 51.3091 615.229 50.9214 613.874 50.9214 cv
609.713 50.9214 607.036 52.5024 606.907 56.5337 cv
609.518 56.5337 li
cp
617.293 62.437 mo
617.293 64.6948 614.713 66.4048 612.067 66.4048 cv
609.938 66.4048 609.002 65.3071 609.002 63.4692 cv
609.002 61.3403 611.229 60.9204 612.616 60.7271 cv
616.131 60.2759 616.842 60.0181 617.293 59.6626 cv
617.293 62.437 li
cp
f
628.485 68.2759 mo
625.647 68.2759 li
625.647 45.1157 li
628.485 45.1157 li
628.485 68.2759 li
cp
f
644.872 62.9849 mo
644.776 64.2427 643.194 66.3071 640.518 66.3071 cv
637.26 66.3071 635.614 64.2759 635.614 60.7603 cv
647.936 60.7603 li
647.936 54.7925 645.549 50.9214 640.678 50.9214 cv
635.098 50.9214 632.583 55.0825 632.583 60.3081 cv
632.583 65.1782 635.389 68.7593 640.129 68.7593 cv
642.84 68.7593 643.936 68.1138 644.709 67.5981 cv
646.84 66.1782 647.614 63.7915 647.709 62.9849 cv
644.872 62.9849 li
cp
635.614 58.5024 mo
635.614 55.8892 637.678 53.4692 640.292 53.4692 cv
643.743 53.4692 644.84 55.8892 645 58.5024 cv
635.614 58.5024 li
cp
f
675.581 45.1157 mo
672.743 45.1157 li
672.743 53.7925 li
672.676 53.7925 li
672 52.8247 670.709 50.9214 667.645 50.9214 cv
663.161 50.9214 660.614 54.5981 660.614 59.3403 cv
660.614 63.3726 662.29 68.7593 668.032 68.7593 cv
669.676 68.7593 671.614 68.2427 672.838 65.9536 cv
672.903 65.9536 li
672.903 68.2759 li
675.581 68.2759 li
675.581 45.1157 li
cp
663.549 59.7915 mo
663.549 57.6313 663.774 53.4692 668.161 53.4692 cv
672.258 53.4692 672.709 57.8892 672.709 60.6313 cv
672.709 65.1138 669.903 66.3071 668.096 66.3071 cv
665 66.3071 663.549 63.5015 663.549 59.7915 cv
cp
f
691.643 62.9849 mo
691.547 64.2427 689.967 66.3071 687.29 66.3071 cv
684.032 66.3071 682.387 64.2759 682.387 60.7603 cv
694.709 60.7603 li
694.709 54.7925 692.321 50.9214 687.452 50.9214 cv
681.872 50.9214 679.354 55.0825 679.354 60.3081 cv
679.354 65.1782 682.161 68.7593 686.903 68.7593 cv
689.612 68.7593 690.709 68.1138 691.483 67.5981 cv
693.612 66.1782 694.385 63.7915 694.483 62.9849 cv
691.643 62.9849 li
cp
682.387 58.5024 mo
682.387 55.8892 684.452 53.4692 687.065 53.4692 cv
690.514 53.4692 691.612 55.8892 691.772 58.5024 cv
682.387 58.5024 li
cp
f
708.321 56.2114 mo
708.29 55.147 707.901 53.3735 704.321 53.3735 cv
703.45 53.3735 700.967 53.6636 700.967 55.7603 cv
700.967 57.147 701.838 57.4692 704.032 58.0181 cv
706.87 58.7271 li
710.385 59.5981 711.612 60.8892 711.612 63.1782 cv
711.612 66.6626 708.741 68.7593 704.934 68.7593 cv
698.256 68.7593 697.774 64.8892 697.676 62.856 cv
700.418 62.856 li
700.514 64.1782 700.903 66.3071 704.903 66.3071 cv
706.934 66.3071 708.772 65.5015 708.772 63.6304 cv
708.772 62.2759 707.836 61.8247 705.418 61.2114 cv
702.127 60.4048 li
699.772 59.8247 698.225 58.6313 698.225 56.3091 cv
698.225 52.5991 701.29 50.9214 704.612 50.9214 cv
710.643 50.9214 711.063 55.3735 711.063 56.2114 cv
708.321 56.2114 li
cp
f
739.45 51.8892 mo
739.288 48.3091 736.321 47.1802 733.708 47.1802 cv
731.739 47.1802 728.417 47.728 728.417 51.2446 cv
728.417 53.2114 729.805 53.8569 731.159 54.1802 cv
737.772 55.6958 li
740.772 56.4048 743.03 58.2114 743.03 61.8892 cv
743.03 67.3716 737.932 68.8882 733.965 68.8882 cv
729.674 68.8882 727.999 67.5981 726.965 66.6626 cv
724.999 64.8892 724.61 62.9536 724.61 60.7915 cv
727.545 60.7915 li
727.545 64.9849 730.965 66.2114 733.932 66.2114 cv
736.192 66.2114 739.997 65.6304 739.997 62.3081 cv
739.997 59.8892 738.868 59.1147 735.063 58.2114 cv
730.321 57.1147 li
728.805 56.7603 725.385 55.6958 725.385 51.6636 cv
725.385 48.0513 727.739 44.5024 733.352 44.5024 cv
741.45 44.5024 742.254 49.3403 742.383 51.8892 cv
739.45 51.8892 li
cp
f
746.319 59.8247 mo
746.319 64.1782 748.772 68.7271 754.159 68.7271 cv
759.543 68.7271 761.997 64.1782 761.997 59.8247 cv
761.997 55.4692 759.543 50.9214 754.159 50.9214 cv
748.772 50.9214 746.319 55.4692 746.319 59.8247 cv
cp
749.254 59.8247 mo
749.254 57.5669 750.094 53.3735 754.159 53.3735 cv
758.221 53.3735 759.061 57.5669 759.061 59.8247 cv
759.061 62.0825 758.221 66.2759 754.159 66.2759 cv
750.094 66.2759 749.254 62.0825 749.254 59.8247 cv
cp
f
776.415 57.0825 mo
776.061 54.8247 774.801 53.4692 772.415 53.4692 cv
768.899 53.4692 767.77 56.8247 767.77 59.8247 cv
767.77 62.7271 768.481 66.3071 772.383 66.3071 cv
774.286 66.3071 775.932 64.8892 776.415 62.3081 cv
779.157 62.3081 li
778.866 64.9849 777.221 68.7593 772.286 68.7593 cv
767.543 68.7593 764.739 65.1782 764.739 60.3081 cv
764.739 55.0825 767.254 50.9214 772.834 50.9214 cv
777.254 50.9214 778.93 54.147 779.157 57.0825 cv
776.415 57.0825 li
cp
f
782.706 48.3413 mo
782.706 45.1157 li
785.543 45.1157 li
785.543 48.3413 li
782.706 48.3413 li
cp
785.543 68.2759 mo
782.706 68.2759 li
782.706 51.4048 li
785.543 51.4048 li
785.543 68.2759 li
cp
f
802.252 44.6001 mo
798.768 44.6001 li
795.897 49.147 li
798.059 49.147 li
802.252 44.6001 li
cp
801.93 62.9849 mo
801.833 64.2427 800.252 66.3071 797.575 66.3071 cv
794.317 66.3071 792.672 64.2759 792.672 60.7603 cv
804.995 60.7603 li
804.995 54.7925 802.606 50.9214 797.737 50.9214 cv
792.157 50.9214 789.639 55.0825 789.639 60.3081 cv
789.639 65.1782 792.446 68.7593 797.188 68.7593 cv
799.897 68.7593 800.995 68.1138 801.768 67.5981 cv
803.897 66.1782 804.67 63.7915 804.768 62.9849 cv
801.93 62.9849 li
cp
792.672 58.5024 mo
792.672 55.8892 794.737 53.4692 797.35 53.4692 cv
800.801 53.4692 801.897 55.8892 802.059 58.5024 cv
792.672 58.5024 li
cp
f
812.51 53.7603 mo
812.51 64.7271 li
812.51 66.0493 813.639 66.0493 814.219 66.0493 cv
815.219 66.0493 li
815.219 68.2759 li
814.188 68.3716 813.381 68.5005 813.09 68.5005 cv
810.284 68.5005 809.672 66.9204 809.672 64.8892 cv
809.672 53.7603 li
807.381 53.7603 li
807.381 51.4048 li
809.672 51.4048 li
809.672 46.6958 li
812.51 46.6958 li
812.51 51.4048 li
815.219 51.4048 li
815.219 53.7603 li
812.51 53.7603 li
cp
f
830.444 44.6001 mo
826.961 44.6001 li
824.09 49.147 li
826.25 49.147 li
830.444 44.6001 li
cp
830.122 62.9849 mo
830.026 64.2427 828.444 66.3071 825.768 66.3071 cv
822.51 66.3071 820.864 64.2759 820.864 60.7603 cv
833.186 60.7603 li
833.186 54.7925 830.799 50.9214 825.928 50.9214 cv
820.348 50.9214 817.833 55.0825 817.833 60.3081 cv
817.833 65.1782 820.639 68.7593 825.381 68.7593 cv
828.09 68.7593 829.186 68.1138 829.959 67.5981 cv
832.09 66.1782 832.864 63.7915 832.959 62.9849 cv
830.122 62.9849 li
cp
820.864 58.5024 mo
820.864 55.8892 822.928 53.4692 825.542 53.4692 cv
828.993 53.4692 830.09 55.8892 830.25 58.5024 cv
820.864 58.5024 li
cp
f
846.799 56.2114 mo
846.766 55.147 846.379 53.3735 842.799 53.3735 cv
841.928 53.3735 839.444 53.6636 839.444 55.7603 cv
839.444 57.147 840.315 57.4692 842.508 58.0181 cv
845.348 58.7271 li
848.864 59.5981 850.088 60.8892 850.088 63.1782 cv
850.088 66.6626 847.217 68.7593 843.413 68.7593 cv
836.735 68.7593 836.25 64.8892 836.155 62.856 cv
838.897 62.856 li
838.993 64.1782 839.379 66.3071 843.379 66.3071 cv
845.413 66.3071 847.25 65.5015 847.25 63.6304 cv
847.25 62.2759 846.315 61.8247 843.895 61.2114 cv
840.606 60.4048 li
838.25 59.8247 836.702 58.6313 836.702 56.3091 cv
836.702 52.5991 839.766 50.9214 843.09 50.9214 cv
849.122 50.9214 849.542 55.3735 849.542 56.2114 cv
846.799 56.2114 li
cp
f
880.354 45.019 mo
877.516 45.019 li
877.516 53.6958 li
877.452 53.6958 li
876.774 52.728 875.483 50.8247 872.418 50.8247 cv
867.936 50.8247 865.387 54.5015 865.387 59.2437 cv
865.387 63.2759 867.065 68.6626 872.805 68.6626 cv
874.452 68.6626 876.387 68.146 877.612 65.8569 cv
877.676 65.8569 li
877.676 68.1792 li
880.354 68.1792 li
880.354 45.019 li
cp
868.323 59.6948 mo
868.323 57.5347 868.547 53.3726 872.934 53.3726 cv
877.032 53.3726 877.483 57.7925 877.483 60.5337 cv
877.483 65.0171 874.676 66.2104 872.87 66.2104 cv
869.774 66.2104 868.323 63.4048 868.323 59.6948 cv
cp
f
896.418 62.8882 mo
896.321 64.146 894.741 66.2104 892.063 66.2104 cv
888.805 66.2104 887.161 64.1792 887.161 60.6626 cv
899.483 60.6626 li
899.483 54.6958 897.094 50.8247 892.225 50.8247 cv
886.645 50.8247 884.127 54.9858 884.127 60.2114 cv
884.127 65.0815 886.934 68.6626 891.676 68.6626 cv
894.385 68.6626 895.483 68.0171 896.256 67.5015 cv
898.385 66.0815 899.159 63.6958 899.256 62.8882 cv
896.418 62.8882 li
cp
887.161 58.4058 mo
887.161 55.7925 889.225 53.3726 891.838 53.3726 cv
895.29 53.3726 896.385 55.7925 896.547 58.4058 cv
887.161 58.4058 li
cp
f
916.03 68.1792 mo
913.192 68.1792 li
913.192 45.019 li
916.03 45.019 li
916.03 68.1792 li
cp
f
923.448 56.437 mo
923.641 55.1479 924.094 53.1792 927.319 53.1792 cv
929.997 53.1792 931.288 54.1479 931.288 55.9214 cv
931.288 57.5991 930.481 57.8569 929.803 57.9214 cv
925.125 58.5015 li
920.417 59.0825 919.997 62.3726 919.997 63.7925 cv
919.997 66.6948 922.19 68.6626 925.288 68.6626 cv
928.577 68.6626 930.288 67.1138 931.383 65.9214 cv
931.481 67.2104 931.868 68.5015 934.383 68.5015 cv
935.028 68.5015 935.448 68.3081 935.932 68.1792 cv
935.932 66.1138 li
935.61 66.1792 935.254 66.2427 934.997 66.2427 cv
934.417 66.2427 934.061 65.9526 934.061 65.2427 cv
934.061 55.5347 li
934.061 51.2124 929.159 50.8247 927.803 50.8247 cv
923.641 50.8247 920.965 52.4058 920.836 56.437 cv
923.448 56.437 li
cp
931.223 62.3403 mo
931.223 64.5981 928.641 66.3081 925.997 66.3081 cv
923.868 66.3081 922.932 65.2104 922.932 63.3726 cv
922.932 61.2437 925.159 60.8247 926.545 60.6304 cv
930.061 60.1792 930.77 59.9214 931.223 59.5659 cv
931.223 62.3403 li
cp
f
965.737 51.9858 mo
964.866 47.9214 961.479 47.1802 959.254 47.1802 cv
955.061 47.1802 951.674 50.2769 951.674 56.3726 cv
951.674 61.8247 953.608 66.0171 959.35 66.0171 cv
961.383 66.0171 964.899 65.0503 965.963 59.6636 cv
968.995 59.6636 li
967.706 68.4048 960.608 68.7915 958.866 68.7915 cv
953.608 68.7915 948.448 65.3726 948.448 56.4702 cv
948.448 49.3413 952.512 44.4058 959.254 44.4058 cv
965.221 44.4058 968.317 48.1147 968.77 51.9858 cv
965.737 51.9858 li
cp
f
976.286 68.1792 mo
973.446 68.1792 li
973.446 51.3081 li
976.124 51.3081 li
976.124 54.1147 li
976.188 54.1147 li
977.317 52.1479 978.801 50.8247 980.93 50.8247 cv
981.284 50.8247 981.446 50.8569 981.672 50.9214 cv
981.672 53.8569 li
980.608 53.8569 li
977.961 53.8569 976.286 55.9214 976.286 58.3726 cv
976.286 68.1792 li
cp
f
983.477 59.728 mo
983.477 64.0815 985.93 68.6304 991.317 68.6304 cv
996.704 68.6304 999.155 64.0815 999.155 59.728 cv
999.155 55.3726 996.704 50.8247 991.317 50.8247 cv
985.93 50.8247 983.477 55.3726 983.477 59.728 cv
cp
986.413 59.728 mo
986.413 57.4702 987.252 53.2769 991.317 53.2769 cv
995.381 53.2769 996.219 57.4702 996.219 59.728 cv
996.219 61.9858 995.381 66.1792 991.317 66.1792 cv
987.252 66.1792 986.413 61.9858 986.413 59.728 cv
cp
f
1003.09 48.2446 mo
1003.09 45.019 li
1005.93 45.019 li
1005.93 48.2446 li
1003.09 48.2446 li
cp
1005.93 68.1792 mo
1003.09 68.1792 li
1003.09 51.3081 li
1005.93 51.3081 li
1005.93 68.1792 li
cp
f
1024.54 68.1792 mo
1020.93 68.1792 li
1016.73 61.8247 li
1012.67 68.1792 li
1009.09 68.1792 li
1015.02 59.5015 li
1009.38 51.3081 li
1013.02 51.3081 li
1016.93 57.2437 li
1020.83 51.3081 li
1024.31 51.3081 li
1018.6 59.5015 li
1024.54 68.1792 li
cp
f
1034.83 60.6958 mo
1026.93 60.6958 li
1026.93 57.7925 li
1034.83 57.7925 li
1034.83 60.6958 li
cp
f
1042.86 58.2437 mo
1050.44 58.2437 li
1054.18 58.2437 1054.57 60.4692 1054.57 62.3726 cv
1054.57 63.2437 1054.67 66.7593 1055.12 68.1792 cv
1058.96 68.1792 li
1058.96 67.6626 li
1057.99 67.1138 1057.83 66.6304 1057.8 65.3403 cv
1057.6 61.147 li
1057.47 57.9214 1056.15 57.3413 1054.83 56.7925 cv
1056.31 55.9214 1058.06 54.6636 1058.06 51.2437 cv
1058.06 46.3413 1054.25 45.019 1050.44 45.019 cv
1039.73 45.019 li
1039.73 68.1792 li
1042.86 68.1792 li
1042.86 58.2437 li
cp
1042.86 47.6968 mo
1050.67 47.6968 li
1052.22 47.6968 1054.83 47.9858 1054.83 51.5669 cv
1054.83 54.9858 1052.41 55.5659 1050.12 55.5659 cv
1042.86 55.5659 li
1042.86 47.6968 li
cp
f
1061.96 59.728 mo
1061.96 64.0815 1064.41 68.6304 1069.8 68.6304 cv
1075.18 68.6304 1077.63 64.0815 1077.63 59.728 cv
1077.63 55.3726 1075.18 50.8247 1069.8 50.8247 cv
1064.41 50.8247 1061.96 55.3726 1061.96 59.728 cv
cp
1064.89 59.728 mo
1064.89 57.4702 1065.73 53.2769 1069.8 53.2769 cv
1073.86 53.2769 1074.7 57.4702 1074.7 59.728 cv
1074.7 61.9858 1073.86 66.1792 1069.8 66.1792 cv
1065.73 66.1792 1064.89 61.9858 1064.89 59.728 cv
cp
f
1092.5 68.1792 mo
1092.5 65.7271 li
1092.44 65.6626 li
1091.25 67.6304 1089.8 68.6626 1087.08 68.6626 cv
1084.6 68.6626 1081.6 67.4692 1081.6 63.437 cv
1081.6 51.3081 li
1084.44 51.3081 li
1084.44 62.5015 li
1084.44 65.2759 1085.86 66.2104 1087.7 66.2104 cv
1091.28 66.2104 1092.34 63.0503 1092.34 60.5991 cv
1092.34 51.3081 li
1095.18 51.3081 li
1095.18 68.1792 li
1092.5 68.1792 li
cp
f
1114.08 51.3081 mo
1111.41 51.3081 li
1111.41 53.7925 li
1110.7 52.7603 1109.38 50.8247 1106.31 50.8247 cv
1101.83 50.8247 1099.28 54.5015 1099.28 59.2437 cv
1099.28 63.2759 1100.96 68.6626 1106.7 68.6626 cv
1108.96 68.6626 1110.44 67.6304 1111.25 66.2759 cv
1111.25 66.9858 li
1111.25 68.9849 1111.34 72.9204 1106.44 72.9204 cv
1105.76 72.9204 1103.15 72.9204 1102.63 70.2427 cv
1099.8 70.2427 li
1100.34 74.7261 1104.25 75.2749 1106.25 75.2749 cv
1114.05 75.2749 1114.08 69.2104 1114.08 66.7915 cv
1114.08 51.3081 li
cp
1102.21 59.6948 mo
1102.21 57.5347 1102.44 53.3726 1106.83 53.3726 cv
1110.92 53.3726 1111.38 57.7925 1111.38 60.5337 cv
1111.38 65.0171 1108.57 66.2104 1106.76 66.2104 cv
1103.66 66.2104 1102.21 63.4048 1102.21 59.6948 cv
cp
f
1130.15 62.8882 mo
1130.05 64.146 1128.47 66.2104 1125.79 66.2104 cv
1122.54 66.2104 1120.89 64.1792 1120.89 60.6626 cv
1133.21 60.6626 li
1133.21 54.6958 1130.82 50.8247 1125.96 50.8247 cv
1120.37 50.8247 1117.86 54.9858 1117.86 60.2114 cv
1117.86 65.0815 1120.66 68.6626 1125.41 68.6626 cv
1128.12 68.6626 1129.21 68.0171 1129.99 67.5015 cv
1132.12 66.0815 1132.89 63.6958 1132.99 62.8882 cv
1130.15 62.8882 li
cp
1120.89 58.4058 mo
1120.89 55.7925 1122.96 53.3726 1125.57 53.3726 cv
1129.02 53.3726 1130.12 55.7925 1130.28 58.4058 cv
1120.89 58.4058 li
cp
f
1158.34 62.8882 mo
1158.24 64.146 1156.66 66.2104 1153.98 66.2104 cv
1150.73 66.2104 1149.08 64.1792 1149.08 60.6626 cv
1161.4 60.6626 li
1161.4 54.6958 1159.02 50.8247 1154.15 50.8247 cv
1148.57 50.8247 1146.05 54.9858 1146.05 60.2114 cv
1146.05 65.0815 1148.86 68.6626 1153.6 68.6626 cv
1156.31 68.6626 1157.4 68.0171 1158.18 67.5015 cv
1160.31 66.0815 1161.08 63.6958 1161.18 62.8882 cv
1158.34 62.8882 li
cp
1149.08 58.4058 mo
1149.08 55.7925 1151.15 53.3726 1153.76 53.3726 cv
1157.21 53.3726 1158.31 55.7925 1158.47 58.4058 cv
1149.08 58.4058 li
cp
f
1168.92 53.6636 mo
1168.92 64.6304 li
1168.92 65.9526 1170.05 65.9526 1170.63 65.9526 cv
1171.63 65.9526 li
1171.63 68.1792 li
1170.6 68.2759 1169.79 68.4048 1169.5 68.4048 cv
1166.7 68.4048 1166.08 66.8237 1166.08 64.7925 cv
1166.08 53.6636 li
1163.79 53.6636 li
1163.79 51.3081 li
1166.08 51.3081 li
1166.08 46.5991 li
1168.92 46.5991 li
1168.92 51.3081 li
1171.63 51.3081 li
1171.63 53.6636 li
1168.92 53.6636 li
cp
f
1198.66 45.019 mo
1195.82 45.019 li
1195.82 53.6958 li
1195.76 53.6958 li
1195.08 52.728 1193.79 50.8247 1190.73 50.8247 cv
1186.24 50.8247 1183.69 54.5015 1183.69 59.2437 cv
1183.69 63.2759 1185.37 68.6626 1191.11 68.6626 cv
1192.76 68.6626 1194.69 68.146 1195.92 65.8569 cv
1195.98 65.8569 li
1195.98 68.1792 li
1198.66 68.1792 li
1198.66 45.019 li
cp
1186.63 59.6948 mo
1186.63 57.5347 1186.86 53.3726 1191.24 53.3726 cv
1195.34 53.3726 1195.79 57.7925 1195.79 60.5337 cv
1195.79 65.0171 1192.98 66.2104 1191.18 66.2104 cv
1188.08 66.2104 1186.63 63.4048 1186.63 59.6948 cv
cp
f
1214.24 68.1792 mo
1214.24 65.7271 li
1214.18 65.6626 li
1212.98 67.6304 1211.53 68.6626 1208.82 68.6626 cv
1206.34 68.6626 1203.34 67.4692 1203.34 63.437 cv
1203.34 51.3081 li
1206.18 51.3081 li
1206.18 62.5015 li
1206.18 65.2759 1207.6 66.2104 1209.43 66.2104 cv
1213.02 66.2104 1214.08 63.0503 1214.08 60.5991 cv
1214.08 51.3081 li
1216.92 51.3081 li
1216.92 68.1792 li
1214.24 68.1792 li
cp
f
1248.05 51.9858 mo
1247.18 47.9214 1243.79 47.1802 1241.56 47.1802 cv
1237.37 47.1802 1233.98 50.2769 1233.98 56.3726 cv
1233.98 61.8247 1235.92 66.0171 1241.66 66.0171 cv
1243.69 66.0171 1247.21 65.0503 1248.27 59.6636 cv
1251.31 59.6636 li
1250.01 68.4048 1242.92 68.7915 1241.18 68.7915 cv
1235.92 68.7915 1230.76 65.3726 1230.76 56.4702 cv
1230.76 49.3413 1234.82 44.4058 1241.56 44.4058 cv
1247.53 44.4058 1250.63 48.1147 1251.08 51.9858 cv
1248.05 51.9858 li
cp
f
1258.59 68.1792 mo
1255.76 68.1792 li
1255.76 51.3081 li
1258.43 51.3081 li
1258.43 54.1147 li
1258.5 54.1147 li
1259.63 52.1479 1261.11 50.8247 1263.24 50.8247 cv
1263.59 50.8247 1263.75 50.8569 1263.98 50.9214 cv
1263.98 53.8569 li
1262.92 53.8569 li
1260.27 53.8569 1258.59 55.9214 1258.59 58.3726 cv
1258.59 68.1792 li
cp
f
1265.79 59.728 mo
1265.79 64.0815 1268.24 68.6304 1273.63 68.6304 cv
1279.01 68.6304 1281.46 64.0815 1281.46 59.728 cv
1281.46 55.3726 1279.01 50.8247 1273.63 50.8247 cv
1268.24 50.8247 1265.79 55.3726 1265.79 59.728 cv
cp
1268.72 59.728 mo
1268.72 57.4702 1269.56 53.2769 1273.63 53.2769 cv
1277.69 53.2769 1278.53 57.4702 1278.53 59.728 cv
1278.53 61.9858 1277.69 66.1792 1273.63 66.1792 cv
1269.56 66.1792 1268.72 61.9858 1268.72 59.728 cv
cp
f
1285.4 48.2446 mo
1285.4 45.019 li
1288.24 45.019 li
1288.24 48.2446 li
1285.4 48.2446 li
cp
1288.24 68.1792 mo
1285.4 68.1792 li
1285.4 51.3081 li
1288.24 51.3081 li
1288.24 68.1792 li
cp
f
1302.72 56.1147 mo
1302.69 55.0503 1302.3 53.2769 1298.72 53.2769 cv
1297.85 53.2769 1295.37 53.5669 1295.37 55.6636 cv
1295.37 57.0503 1296.24 57.3726 1298.43 57.9214 cv
1301.27 58.6304 li
1304.79 59.5015 1306.01 60.7925 1306.01 63.0815 cv
1306.01 66.5659 1303.14 68.6626 1299.33 68.6626 cv
1292.66 68.6626 1292.17 64.7925 1292.08 62.7593 cv
1294.82 62.7593 li
1294.91 64.0815 1295.3 66.2104 1299.3 66.2104 cv
1301.33 66.2104 1303.17 65.4048 1303.17 63.5337 cv
1303.17 62.1792 1302.24 61.728 1299.82 61.1147 cv
1296.53 60.3081 li
1294.17 59.728 1292.63 58.5347 1292.63 56.2124 cv
1292.63 52.5024 1295.69 50.8247 1299.01 50.8247 cv
1305.04 50.8247 1305.46 55.2769 1305.46 56.1147 cv
1302.72 56.1147 li
cp
f
1319.49 56.1147 mo
1319.46 55.0503 1319.07 53.2769 1315.49 53.2769 cv
1314.62 53.2769 1312.14 53.5669 1312.14 55.6636 cv
1312.14 57.0503 1313.01 57.3726 1315.2 57.9214 cv
1318.04 58.6304 li
1321.56 59.5015 1322.78 60.7925 1322.78 63.0815 cv
1322.78 66.5659 1319.91 68.6626 1316.11 68.6626 cv
1309.43 68.6626 1308.95 64.7925 1308.85 62.7593 cv
1311.59 62.7593 li
1311.69 64.0815 1312.07 66.2104 1316.07 66.2104 cv
1318.11 66.2104 1319.95 65.4048 1319.95 63.5337 cv
1319.95 62.1792 1319.01 61.728 1316.59 61.1147 cv
1313.3 60.3081 li
1310.95 59.728 1309.4 58.5347 1309.4 56.2124 cv
1309.4 52.5024 1312.46 50.8247 1315.79 50.8247 cv
1321.82 50.8247 1322.24 55.2769 1322.24 56.1147 cv
1319.49 56.1147 li
cp
f
1329.2 56.437 mo
1329.4 55.1479 1329.85 53.1792 1333.07 53.1792 cv
1335.75 53.1792 1337.04 54.1479 1337.04 55.9214 cv
1337.04 57.5991 1336.23 57.8569 1335.56 57.9214 cv
1330.88 58.5015 li
1326.17 59.0825 1325.75 62.3726 1325.75 63.7925 cv
1325.75 66.6948 1327.95 68.6626 1331.04 68.6626 cv
1334.33 68.6626 1336.04 67.1138 1337.14 65.9214 cv
1337.23 67.2104 1337.62 68.5015 1340.14 68.5015 cv
1340.78 68.5015 1341.2 68.3081 1341.69 68.1792 cv
1341.69 66.1138 li
1341.36 66.1792 1341.01 66.2427 1340.75 66.2427 cv
1340.17 66.2427 1339.82 65.9526 1339.82 65.2427 cv
1339.82 55.5347 li
1339.82 51.2124 1334.91 50.8247 1333.56 50.8247 cv
1329.4 50.8247 1326.72 52.4058 1326.59 56.437 cv
1329.2 56.437 li
cp
1336.98 62.3403 mo
1336.98 64.5981 1334.4 66.3081 1331.75 66.3081 cv
1329.62 66.3081 1328.69 65.2104 1328.69 63.3726 cv
1328.69 61.2437 1330.91 60.8247 1332.3 60.6304 cv
1335.82 60.1792 1336.53 59.9214 1336.98 59.5659 cv
1336.98 62.3403 li
cp
f
1359.01 68.1792 mo
1356.17 68.1792 li
1356.17 57.7925 li
1356.17 54.8569 1355.33 53.3726 1352.56 53.3726 cv
1350.94 53.3726 1348.11 54.4058 1348.11 58.9858 cv
1348.11 68.1792 li
1345.27 68.1792 li
1345.27 51.3081 li
1347.95 51.3081 li
1347.95 53.6958 li
1348.01 53.6958 li
1348.62 52.7925 1350.2 50.8247 1353.11 50.8247 cv
1355.72 50.8247 1359.01 51.8892 1359.01 56.6948 cv
1359.01 68.1792 li
cp
f
1367.33 53.6636 mo
1367.33 64.6304 li
1367.33 65.9526 1368.46 65.9526 1369.04 65.9526 cv
1370.04 65.9526 li
1370.04 68.1792 li
1369.01 68.2759 1368.2 68.4048 1367.91 68.4048 cv
1365.11 68.4048 1364.49 66.8237 1364.49 64.7925 cv
1364.49 53.6636 li
1362.2 53.6636 li
1362.2 51.3081 li
1364.49 51.3081 li
1364.49 46.5991 li
1367.33 46.5991 li
1367.33 51.3081 li
1370.04 51.3081 li
1370.04 53.6636 li
1367.33 53.6636 li
cp
f
1380.69 60.6958 mo
1372.78 60.6958 li
1372.78 57.7925 li
1380.69 57.7925 li
1380.69 60.6958 li
cp
f
1388.72 58.2437 mo
1396.3 58.2437 li
1400.04 58.2437 1400.43 60.4692 1400.43 62.3726 cv
1400.43 63.2437 1400.52 66.7593 1400.98 68.1792 cv
1404.81 68.1792 li
1404.81 67.6626 li
1403.85 67.1138 1403.68 66.6304 1403.65 65.3403 cv
1403.46 61.147 li
1403.33 57.9214 1402.01 57.3413 1400.68 56.7925 cv
1402.17 55.9214 1403.91 54.6636 1403.91 51.2437 cv
1403.91 46.3413 1400.1 45.019 1396.3 45.019 cv
1385.59 45.019 li
1385.59 68.1792 li
1388.72 68.1792 li
1388.72 58.2437 li
cp
1388.72 47.6968 mo
1396.52 47.6968 li
1398.07 47.6968 1400.68 47.9858 1400.68 51.5669 cv
1400.68 54.9858 1398.27 55.5659 1395.98 55.5659 cv
1388.72 55.5659 li
1388.72 47.6968 li
cp
f
1407.81 59.728 mo
1407.81 64.0815 1410.26 68.6304 1415.65 68.6304 cv
1421.04 68.6304 1423.49 64.0815 1423.49 59.728 cv
1423.49 55.3726 1421.04 50.8247 1415.65 50.8247 cv
1410.26 50.8247 1407.81 55.3726 1407.81 59.728 cv
cp
1410.75 59.728 mo
1410.75 57.4702 1411.59 53.2769 1415.65 53.2769 cv
1419.72 53.2769 1420.55 57.4702 1420.55 59.728 cv
1420.55 61.9858 1419.72 66.1792 1415.65 66.1792 cv
1411.59 66.1792 1410.75 61.9858 1410.75 59.728 cv
cp
f
1438.36 68.1792 mo
1438.36 65.7271 li
1438.3 65.6626 li
1437.1 67.6304 1435.65 68.6626 1432.94 68.6626 cv
1430.46 68.6626 1427.46 67.4692 1427.46 63.437 cv
1427.46 51.3081 li
1430.3 51.3081 li
1430.3 62.5015 li
1430.3 65.2759 1431.72 66.2104 1433.55 66.2104 cv
1437.13 66.2104 1438.2 63.0503 1438.2 60.5991 cv
1438.2 51.3081 li
1441.04 51.3081 li
1441.04 68.1792 li
1438.36 68.1792 li
cp
f
1459.94 51.3081 mo
1457.26 51.3081 li
1457.26 53.7925 li
1456.55 52.7603 1455.23 50.8247 1452.17 50.8247 cv
1447.68 50.8247 1445.13 54.5015 1445.13 59.2437 cv
1445.13 63.2759 1446.81 68.6626 1452.55 68.6626 cv
1454.81 68.6626 1456.3 67.6304 1457.1 66.2759 cv
1457.1 66.9858 li
1457.1 68.9849 1457.2 72.9204 1452.3 72.9204 cv
1451.62 72.9204 1449 72.9204 1448.49 70.2427 cv
1445.65 70.2427 li
1446.2 74.7261 1450.1 75.2749 1452.1 75.2749 cv
1459.91 75.2749 1459.94 69.2104 1459.94 66.7915 cv
1459.94 51.3081 li
cp
1448.07 59.6948 mo
1448.07 57.5347 1448.3 53.3726 1452.68 53.3726 cv
1456.78 53.3726 1457.23 57.7925 1457.23 60.5337 cv
1457.23 65.0171 1454.42 66.2104 1452.62 66.2104 cv
1449.52 66.2104 1448.07 63.4048 1448.07 59.6948 cv
cp
f
1476 62.8882 mo
1475.91 64.146 1474.33 66.2104 1471.65 66.2104 cv
1468.39 66.2104 1466.75 64.1792 1466.75 60.6626 cv
1479.07 60.6626 li
1479.07 54.6958 1476.68 50.8247 1471.81 50.8247 cv
1466.23 50.8247 1463.71 54.9858 1463.71 60.2114 cv
1463.71 65.0815 1466.52 68.6626 1471.26 68.6626 cv
1473.97 68.6626 1475.07 68.0171 1475.84 67.5015 cv
1477.97 66.0815 1478.74 63.6958 1478.84 62.8882 cv
1476 62.8882 li
cp
1466.75 58.4058 mo
1466.75 55.7925 1468.81 53.3726 1471.42 53.3726 cv
1474.88 53.3726 1475.97 55.7925 1476.13 58.4058 cv
1466.75 58.4058 li
cp
f
283.43 103.876 mo
280.301 103.876 li
280.301 80.7163 li
296.332 80.7163 li
296.332 83.4897 li
283.43 83.4897 li
283.43 90.5864 li
294.785 90.5864 li
294.785 93.3608 li
283.43 93.3608 li
283.43 103.876 li
cp
f
310.493 98.5854 mo
310.396 99.8433 308.816 101.908 306.139 101.908 cv
302.881 101.908 301.236 99.8765 301.236 96.3608 cv
313.558 96.3608 li
313.558 90.3931 311.171 86.522 306.3 86.522 cv
300.72 86.522 298.203 90.6831 298.203 95.9087 cv
298.203 100.779 301.01 104.36 305.752 104.36 cv
308.461 104.36 309.558 103.714 310.332 103.199 cv
312.461 101.779 313.234 99.3921 313.332 98.5854 cv
310.493 98.5854 li
cp
301.236 94.103 mo
301.236 91.4897 303.301 89.0698 305.913 89.0698 cv
309.364 89.0698 310.461 91.4897 310.622 94.103 cv
301.236 94.103 li
cp
f
331.59 80.7163 mo
328.75 80.7163 li
328.75 89.3931 li
328.686 89.3931 li
328.009 88.4253 326.719 86.522 323.654 86.522 cv
319.17 86.522 316.623 90.1987 316.623 94.9409 cv
316.623 98.9731 318.3 104.36 324.041 104.36 cv
325.687 104.36 327.621 103.843 328.848 101.554 cv
328.912 101.554 li
328.912 103.876 li
331.59 103.876 li
331.59 80.7163 li
cp
319.558 95.3921 mo
319.558 93.2319 319.783 89.0698 324.17 89.0698 cv
328.267 89.0698 328.719 93.4897 328.719 96.2319 cv
328.719 100.714 325.912 101.908 324.105 101.908 cv
321.01 101.908 319.558 99.1021 319.558 95.3921 cv
cp
f
347.653 98.5854 mo
347.557 99.8433 345.976 101.908 343.299 101.908 cv
340.041 101.908 338.396 99.8765 338.396 96.3608 cv
350.717 96.3608 li
350.717 90.3931 348.33 86.522 343.46 86.522 cv
337.879 86.522 335.363 90.6831 335.363 95.9087 cv
335.363 100.779 338.17 104.36 342.912 104.36 cv
345.621 104.36 346.718 103.714 347.492 103.199 cv
349.621 101.779 350.395 99.3921 350.492 98.5854 cv
347.653 98.5854 li
cp
338.396 94.103 mo
338.396 91.4897 340.46 89.0698 343.072 89.0698 cv
346.523 89.0698 347.621 91.4897 347.782 94.103 cv
338.396 94.103 li
cp
f
357.976 103.876 mo
355.137 103.876 li
355.137 87.0054 li
357.814 87.0054 li
357.814 89.812 li
357.879 89.812 li
359.008 87.8452 360.491 86.522 362.62 86.522 cv
362.975 86.522 363.137 86.5542 363.362 86.6187 cv
363.362 89.5542 li
362.298 89.5542 li
359.652 89.5542 357.976 91.6187 357.976 94.0698 cv
357.976 103.876 li
cp
f
368.33 92.1343 mo
368.523 90.8452 368.975 88.8765 372.201 88.8765 cv
374.878 88.8765 376.168 89.8452 376.168 91.6187 cv
376.168 93.2964 375.361 93.5542 374.684 93.6187 cv
370.008 94.1987 li
365.298 94.7798 364.879 98.0698 364.879 99.4897 cv
364.879 102.392 367.072 104.36 370.168 104.36 cv
373.459 104.36 375.168 102.812 376.265 101.619 cv
376.361 102.908 376.748 104.199 379.265 104.199 cv
379.91 104.199 380.329 104.005 380.813 103.876 cv
380.813 101.812 li
380.49 101.876 380.136 101.941 379.877 101.941 cv
379.297 101.941 378.941 101.65 378.941 100.941 cv
378.941 91.2319 li
378.941 86.9097 374.039 86.522 372.685 86.522 cv
368.523 86.522 365.846 88.103 365.717 92.1343 cv
368.33 92.1343 li
cp
376.104 98.0376 mo
376.104 100.295 373.523 102.005 370.878 102.005 cv
368.749 102.005 367.814 100.908 367.814 99.0698 cv
367.814 96.9409 370.039 96.521 371.426 96.3276 cv
374.942 95.8765 375.652 95.6187 376.104 95.2632 cv
376.104 98.0376 li
cp
f
394.941 92.6831 mo
394.587 90.4253 393.328 89.0698 390.941 89.0698 cv
387.426 89.0698 386.297 92.4253 386.297 95.4253 cv
386.297 98.3276 387.006 101.908 390.91 101.908 cv
392.813 101.908 394.457 100.49 394.941 97.9087 cv
397.684 97.9087 li
397.393 100.585 395.748 104.36 390.813 104.36 cv
386.071 104.36 383.265 100.779 383.265 95.9087 cv
383.265 90.6831 385.781 86.522 391.361 86.522 cv
395.78 86.522 397.457 89.7476 397.684 92.6831 cv
394.941 92.6831 li
cp
f
401.232 83.9419 mo
401.232 80.7163 li
404.07 80.7163 li
404.07 83.9419 li
401.232 83.9419 li
cp
404.07 103.876 mo
401.232 103.876 li
401.232 87.0054 li
404.07 87.0054 li
404.07 103.876 li
cp
f
420.779 80.2007 mo
417.295 80.2007 li
414.424 84.7476 li
416.586 84.7476 li
420.779 80.2007 li
cp
408.006 95.4253 mo
408.006 99.7788 410.457 104.328 415.844 104.328 cv
421.23 104.328 423.682 99.7788 423.682 95.4253 cv
423.682 91.0698 421.23 86.522 415.844 86.522 cv
410.457 86.522 408.006 91.0698 408.006 95.4253 cv
cp
410.94 95.4253 mo
410.94 93.1675 411.779 88.9741 415.844 88.9741 cv
419.908 88.9741 420.746 93.1675 420.746 95.4253 cv
420.746 97.6831 419.908 101.876 415.844 101.876 cv
411.779 101.876 410.94 97.6831 410.94 95.4253 cv
cp
f
441.294 103.876 mo
438.455 103.876 li
438.455 93.4897 li
438.455 90.5542 437.617 89.0698 434.843 89.0698 cv
433.23 89.0698 430.392 90.103 430.392 94.6831 cv
430.392 103.876 li
427.553 103.876 li
427.553 87.0054 li
430.23 87.0054 li
430.23 89.3931 li
430.295 89.3931 li
430.908 88.4897 432.488 86.522 435.391 86.522 cv
438.004 86.522 441.294 87.5864 441.294 92.3921 cv
441.294 103.876 li
cp
f
459.713 103.876 mo
456.584 103.876 li
456.584 80.7163 li
459.713 80.7163 li
459.713 103.876 li
cp
f
479.1 103.876 mo
476.26 103.876 li
476.26 93.4897 li
476.26 90.5542 475.422 89.0698 472.648 89.0698 cv
471.035 89.0698 468.196 90.103 468.196 94.6831 cv
468.196 103.876 li
465.357 103.876 li
465.357 87.0054 li
468.035 87.0054 li
468.035 89.3931 li
468.1 89.3931 li
468.713 88.4897 470.293 86.522 473.196 86.522 cv
475.809 86.522 479.1 87.5864 479.1 92.3921 cv
479.1 103.876 li
cp
f
487.422 89.3608 mo
487.422 100.328 li
487.422 101.65 488.551 101.65 489.131 101.65 cv
490.131 101.65 li
490.131 103.876 li
489.099 103.972 488.293 104.101 488.002 104.101 cv
485.195 104.101 484.583 102.521 484.583 100.49 cv
484.583 89.3608 li
482.293 89.3608 li
482.293 87.0054 li
484.583 87.0054 li
484.583 82.2964 li
487.422 82.2964 li
487.422 87.0054 li
490.131 87.0054 li
490.131 89.3608 li
487.422 89.3608 li
cp
f
505.033 98.5854 mo
504.937 99.8433 503.355 101.908 500.679 101.908 cv
497.421 101.908 495.775 99.8765 495.775 96.3608 cv
508.098 96.3608 li
508.098 90.3931 505.711 86.522 500.84 86.522 cv
495.26 86.522 492.744 90.6831 492.744 95.9087 cv
492.744 100.779 495.551 104.36 500.292 104.36 cv
503.002 104.36 504.098 103.714 504.872 103.199 cv
507.001 101.779 507.775 99.3921 507.872 98.5854 cv
505.033 98.5854 li
cp
495.775 94.103 mo
495.775 91.4897 497.84 89.0698 500.453 89.0698 cv
503.904 89.0698 505.001 91.4897 505.162 94.103 cv
495.775 94.103 li
cp
f
515.355 103.876 mo
512.518 103.876 li
512.518 87.0054 li
515.194 87.0054 li
515.194 89.812 li
515.26 89.812 li
516.389 87.8452 517.871 86.522 520 86.522 cv
520.356 86.522 520.516 86.5542 520.743 86.6187 cv
520.743 89.5542 li
519.678 89.5542 li
517.033 89.5542 515.355 91.6187 515.355 94.0698 cv
515.355 103.876 li
cp
f
538.063 103.876 mo
535.225 103.876 li
535.225 93.4897 li
535.225 90.5542 534.387 89.0698 531.612 89.0698 cv
530 89.0698 527.161 90.103 527.161 94.6831 cv
527.161 103.876 li
524.323 103.876 li
524.323 87.0054 li
527 87.0054 li
527 89.3931 li
527.065 89.3931 li
527.678 88.4897 529.258 86.522 532.161 86.522 cv
534.774 86.522 538.063 87.5864 538.063 92.3921 cv
538.063 103.876 li
cp
f
545.418 92.1343 mo
545.612 90.8452 546.063 88.8765 549.29 88.8765 cv
551.967 88.8765 553.256 89.8452 553.256 91.6187 cv
553.256 93.2964 552.45 93.5542 551.774 93.6187 cv
547.096 94.1987 li
542.387 94.7798 541.967 98.0698 541.967 99.4897 cv
541.967 102.392 544.161 104.36 547.258 104.36 cv
550.547 104.36 552.256 102.812 553.354 101.619 cv
553.45 102.908 553.838 104.199 556.354 104.199 cv
556.999 104.199 557.418 104.005 557.903 103.876 cv
557.903 101.812 li
557.579 101.876 557.225 101.941 556.967 101.941 cv
556.385 101.941 556.032 101.65 556.032 100.941 cv
556.032 91.2319 li
556.032 86.9097 551.127 86.522 549.774 86.522 cv
545.612 86.522 542.936 88.103 542.807 92.1343 cv
545.418 92.1343 li
cp
553.192 98.0376 mo
553.192 100.295 550.612 102.005 547.967 102.005 cv
545.838 102.005 544.903 100.908 544.903 99.0698 cv
544.903 96.9409 547.129 96.521 548.516 96.3276 cv
552.032 95.8765 552.741 95.6187 553.192 95.2632 cv
553.192 98.0376 li
cp
f
572.03 92.6831 mo
571.676 90.4253 570.417 89.0698 568.03 89.0698 cv
564.514 89.0698 563.385 92.4253 563.385 95.4253 cv
563.385 98.3276 564.096 101.908 567.999 101.908 cv
569.901 101.908 571.545 100.49 572.03 97.9087 cv
574.772 97.9087 li
574.483 100.585 572.836 104.36 567.903 104.36 cv
563.161 104.36 560.354 100.779 560.354 95.9087 cv
560.354 90.6831 562.87 86.522 568.45 86.522 cv
572.87 86.522 574.545 89.7476 574.772 92.6831 cv
572.03 92.6831 li
cp
f
578.321 83.9419 mo
578.321 80.7163 li
581.159 80.7163 li
581.159 83.9419 li
578.321 83.9419 li
cp
581.159 103.876 mo
578.321 103.876 li
578.321 87.0054 li
581.159 87.0054 li
581.159 103.876 li
cp
f
585.094 95.4253 mo
585.094 99.7788 587.545 104.328 592.932 104.328 cv
598.319 104.328 600.77 99.7788 600.77 95.4253 cv
600.77 91.0698 598.319 86.522 592.932 86.522 cv
587.545 86.522 585.094 91.0698 585.094 95.4253 cv
cp
588.03 95.4253 mo
588.03 93.1675 588.868 88.9741 592.932 88.9741 cv
596.997 88.9741 597.836 93.1675 597.836 95.4253 cv
597.836 97.6831 596.997 101.876 592.932 101.876 cv
588.868 101.876 588.03 97.6831 588.03 95.4253 cv
cp
f
618.383 103.876 mo
615.545 103.876 li
615.545 93.4897 li
615.545 90.5542 614.706 89.0698 611.932 89.0698 cv
610.319 89.0698 607.481 90.103 607.481 94.6831 cv
607.481 103.876 li
604.641 103.876 li
604.641 87.0054 li
607.319 87.0054 li
607.319 89.3931 li
607.383 89.3931 li
607.997 88.4897 609.577 86.522 612.479 86.522 cv
615.092 86.522 618.383 87.5864 618.383 92.3921 cv
618.383 103.876 li
cp
f
625.737 92.1343 mo
625.932 90.8452 626.383 88.8765 629.608 88.8765 cv
632.286 88.8765 633.577 89.8452 633.577 91.6187 cv
633.577 93.2964 632.77 93.5542 632.092 93.6187 cv
627.415 94.1987 li
622.706 94.7798 622.286 98.0698 622.286 99.4897 cv
622.286 102.392 624.479 104.36 627.577 104.36 cv
630.866 104.36 632.577 102.812 633.672 101.619 cv
633.77 102.908 634.157 104.199 636.672 104.199 cv
637.317 104.199 637.737 104.005 638.221 103.876 cv
638.221 101.812 li
637.899 101.876 637.543 101.941 637.286 101.941 cv
636.704 101.941 636.35 101.65 636.35 100.941 cv
636.35 91.2319 li
636.35 86.9097 631.448 86.522 630.092 86.522 cv
625.932 86.522 623.254 88.103 623.125 92.1343 cv
625.737 92.1343 li
cp
633.512 98.0376 mo
633.512 100.295 630.932 102.005 628.286 102.005 cv
626.157 102.005 625.221 100.908 625.221 99.0698 cv
625.221 96.9409 627.448 96.521 628.834 96.3276 cv
632.35 95.8765 633.061 95.6187 633.512 95.2632 cv
633.512 98.0376 li
cp
f
644.704 103.876 mo
641.866 103.876 li
641.866 80.7163 li
644.704 80.7163 li
644.704 103.876 li
cp
f
673.219 80.7163 mo
670.379 80.7163 li
670.379 89.3931 li
670.317 89.3931 li
669.639 88.4253 668.348 86.522 665.284 86.522 cv
660.799 86.522 658.252 90.1987 658.252 94.9409 cv
658.252 98.9731 659.93 104.36 665.67 104.36 cv
667.317 104.36 669.25 103.843 670.477 101.554 cv
670.542 101.554 li
670.542 103.876 li
673.219 103.876 li
673.219 80.7163 li
cp
661.188 95.3921 mo
661.188 93.2319 661.413 89.0698 665.799 89.0698 cv
669.897 89.0698 670.348 93.4897 670.348 96.2319 cv
670.348 100.714 667.542 101.908 665.735 101.908 cv
662.639 101.908 661.188 99.1021 661.188 95.3921 cv
cp
f
689.284 98.5854 mo
689.186 99.8433 687.606 101.908 684.928 101.908 cv
681.67 101.908 680.026 99.8765 680.026 96.3608 cv
692.346 96.3608 li
692.346 90.3931 689.961 86.522 685.09 86.522 cv
679.508 86.522 676.993 90.6831 676.993 95.9087 cv
676.993 100.779 679.799 104.36 684.542 104.36 cv
687.25 104.36 688.348 103.714 689.122 103.199 cv
691.25 101.779 692.026 99.3921 692.122 98.5854 cv
689.284 98.5854 li
cp
680.026 94.103 mo
680.026 91.4897 682.09 89.0698 684.704 89.0698 cv
688.155 89.0698 689.25 91.4897 689.413 94.103 cv
680.026 94.103 li
cp
f
720.313 87.4897 mo
720.153 83.9097 717.186 82.7808 714.573 82.7808 cv
712.604 82.7808 709.282 83.3286 709.282 86.8452 cv
709.282 88.812 710.67 89.4575 712.024 89.7808 cv
718.637 91.2964 li
721.637 92.0054 723.895 93.812 723.895 97.4897 cv
723.895 102.972 718.797 104.489 714.831 104.489 cv
710.542 104.489 708.862 103.199 707.831 102.263 cv
705.864 100.49 705.475 98.5542 705.475 96.3921 cv
708.413 96.3921 li
708.413 100.585 711.831 101.812 714.799 101.812 cv
717.057 101.812 720.862 101.231 720.862 97.9087 cv
720.862 95.4897 719.733 94.7153 715.928 93.812 cv
711.186 92.7153 li
709.67 92.3608 706.25 91.2964 706.25 87.2642 cv
706.25 83.6519 708.604 80.103 714.217 80.103 cv
722.313 80.103 723.12 84.9409 723.249 87.4897 cv
720.313 87.4897 li
cp
f
727.184 95.4253 mo
727.184 99.7788 729.637 104.328 735.024 104.328 cv
740.411 104.328 742.862 99.7788 742.862 95.4253 cv
742.862 91.0698 740.411 86.522 735.024 86.522 cv
729.637 86.522 727.184 91.0698 727.184 95.4253 cv
cp
730.12 95.4253 mo
730.12 93.1675 730.959 88.9741 735.024 88.9741 cv
739.088 88.9741 739.926 93.1675 739.926 95.4253 cv
739.926 97.6831 739.088 101.876 735.024 101.876 cv
730.959 101.876 730.12 97.6831 730.12 95.4253 cv
cp
f
757.28 92.6831 mo
756.924 90.4253 755.667 89.0698 753.28 89.0698 cv
749.764 89.0698 748.635 92.4253 748.635 95.4253 cv
748.635 98.3276 749.346 101.908 753.249 101.908 cv
755.151 101.908 756.795 100.49 757.28 97.9087 cv
760.022 97.9087 li
759.731 100.585 758.086 104.36 753.151 104.36 cv
748.411 104.36 745.604 100.779 745.604 95.9087 cv
745.604 90.6831 748.12 86.522 753.7 86.522 cv
758.12 86.522 759.795 89.7476 760.022 92.6831 cv
757.28 92.6831 li
cp
f
763.571 83.9419 mo
763.571 80.7163 li
766.409 80.7163 li
766.409 83.9419 li
763.571 83.9419 li
cp
766.409 103.876 mo
763.571 103.876 li
763.571 87.0054 li
766.409 87.0054 li
766.409 103.876 li
cp
f
782.795 98.5854 mo
782.698 99.8433 781.118 101.908 778.44 101.908 cv
775.182 101.908 773.538 99.8765 773.538 96.3608 cv
785.858 96.3608 li
785.858 90.3931 783.473 86.522 778.602 86.522 cv
773.022 86.522 770.504 90.6831 770.504 95.9087 cv
770.504 100.779 773.311 104.36 778.053 104.36 cv
780.762 104.36 781.86 103.714 782.633 103.199 cv
784.762 101.779 785.538 99.3921 785.633 98.5854 cv
782.795 98.5854 li
cp
773.538 94.103 mo
773.538 91.4897 775.602 89.0698 778.215 89.0698 cv
781.667 89.0698 782.762 91.4897 782.924 94.103 cv
773.538 94.103 li
cp
f
803.891 80.7163 mo
801.053 80.7163 li
801.053 89.3931 li
800.987 89.3931 li
800.311 88.4253 799.02 86.522 795.956 86.522 cv
791.473 86.522 788.924 90.1987 788.924 94.9409 cv
788.924 98.9731 790.602 104.36 796.342 104.36 cv
797.987 104.36 799.922 103.843 801.149 101.554 cv
801.213 101.554 li
801.213 103.876 li
803.891 103.876 li
803.891 80.7163 li
cp
791.858 95.3921 mo
791.858 93.2319 792.084 89.0698 796.471 89.0698 cv
800.569 89.0698 801.02 93.4897 801.02 96.2319 cv
801.02 100.714 798.213 101.908 796.407 101.908 cv
793.311 101.908 791.858 99.1021 791.858 95.3921 cv
cp
f
810.987 92.1343 mo
811.18 90.8452 811.633 88.8765 814.858 88.8765 cv
817.536 88.8765 818.825 89.8452 818.825 91.6187 cv
818.825 93.2964 818.02 93.5542 817.342 93.6187 cv
812.665 94.1987 li
807.956 94.7798 807.536 98.0698 807.536 99.4897 cv
807.536 102.392 809.729 104.36 812.827 104.36 cv
816.116 104.36 817.825 102.812 818.922 101.619 cv
819.02 102.908 819.407 104.199 821.922 104.199 cv
822.567 104.199 822.987 104.005 823.471 103.876 cv
823.471 101.812 li
823.149 101.876 822.793 101.941 822.536 101.941 cv
821.954 101.941 821.6 101.65 821.6 100.941 cv
821.6 91.2319 li
821.6 86.9097 816.696 86.522 815.342 86.522 cv
811.18 86.522 808.504 88.103 808.375 92.1343 cv
810.987 92.1343 li
cp
818.762 98.0376 mo
818.762 100.295 816.18 102.005 813.536 102.005 cv
811.407 102.005 810.471 100.908 810.471 99.0698 cv
810.471 96.9409 812.696 96.521 814.084 96.3276 cv
817.6 95.8765 818.309 95.6187 818.762 95.2632 cv
818.762 98.0376 li
cp
f
841.049 80.7163 mo
838.211 80.7163 li
838.211 89.3931 li
838.147 89.3931 li
837.469 88.4253 836.18 86.522 833.116 86.522 cv
828.631 86.522 826.084 90.1987 826.084 94.9409 cv
826.084 98.9731 827.76 104.36 833.502 104.36 cv
835.147 104.36 837.083 103.843 838.309 101.554 cv
838.374 101.554 li
838.374 103.876 li
841.049 103.876 li
841.049 80.7163 li
cp
829.02 95.3921 mo
829.02 93.2319 829.245 89.0698 833.631 89.0698 cv
837.729 89.0698 838.18 93.4897 838.18 96.2319 cv
838.18 100.714 835.374 101.908 833.567 101.908 cv
830.471 101.908 829.02 99.1021 829.02 95.3921 cv
cp
f
857.114 98.5854 mo
857.018 99.8433 855.438 101.908 852.76 101.908 cv
849.502 101.908 847.858 99.8765 847.858 96.3608 cv
860.178 96.3608 li
860.178 90.3931 857.792 86.522 852.92 86.522 cv
847.34 86.522 844.825 90.6831 844.825 95.9087 cv
844.825 100.779 847.631 104.36 852.374 104.36 cv
855.083 104.36 856.178 103.714 856.954 103.199 cv
859.083 101.779 859.856 99.3921 859.954 98.5854 cv
857.114 98.5854 li
cp
847.858 94.103 mo
847.858 91.4897 849.92 89.0698 852.534 89.0698 cv
855.985 89.0698 857.083 91.4897 857.243 94.103 cv
847.858 94.103 li
cp
f
873.792 91.812 mo
873.758 90.7476 873.372 88.9741 869.792 88.9741 cv
868.92 88.9741 866.436 89.2642 866.436 91.3608 cv
866.436 92.7476 867.307 93.0698 869.5 93.6187 cv
872.34 94.3276 li
875.856 95.1987 877.081 96.4897 877.081 98.7788 cv
877.081 102.263 874.211 104.36 870.405 104.36 cv
863.727 104.36 863.243 100.49 863.147 98.4565 cv
865.887 98.4565 li
865.985 99.7788 866.372 101.908 870.372 101.908 cv
872.405 101.908 874.243 101.102 874.243 99.231 cv
874.243 97.8765 873.307 97.4253 870.887 96.812 cv
867.598 96.0054 li
865.243 95.4253 863.696 94.2319 863.696 91.9097 cv
863.696 88.1997 866.758 86.522 870.083 86.522 cv
876.114 86.522 876.534 90.9741 876.534 91.812 cv
873.792 91.812 li
cp
f
905.78 80.4741 mo
902.942 80.4741 li
902.942 89.1509 li
902.877 89.1509 li
902.2 88.1831 900.909 86.2798 897.844 86.2798 cv
893.362 86.2798 890.813 89.9565 890.813 94.6987 cv
890.813 98.731 892.491 104.118 898.231 104.118 cv
899.877 104.118 901.813 103.601 903.038 101.312 cv
903.102 101.312 li
903.102 103.634 li
905.78 103.634 li
905.78 80.4741 li
cp
893.749 95.1499 mo
893.749 92.9897 893.973 88.8276 898.36 88.8276 cv
902.458 88.8276 902.909 93.2476 902.909 95.9888 cv
902.909 100.472 900.102 101.666 898.295 101.666 cv
895.2 101.666 893.749 98.8599 893.749 95.1499 cv
cp
f
921.844 98.3433 mo
921.747 99.6011 920.167 101.666 917.489 101.666 cv
914.231 101.666 912.586 99.6343 912.586 96.1177 cv
924.909 96.1177 li
924.909 90.1509 922.52 86.2798 917.651 86.2798 cv
912.071 86.2798 909.553 90.4409 909.553 95.6665 cv
909.553 100.537 912.36 104.118 917.102 104.118 cv
919.811 104.118 920.909 103.472 921.682 102.957 cv
923.811 101.537 924.584 99.1509 924.682 98.3433 cv
921.844 98.3433 li
cp
912.586 93.8608 mo
912.586 91.2476 914.651 88.8276 917.264 88.8276 cv
920.715 88.8276 921.811 91.2476 921.973 93.8608 cv
912.586 93.8608 li
cp
f
941.456 103.634 mo
938.618 103.634 li
938.618 80.4741 li
941.456 80.4741 li
941.456 103.634 li
cp
f
948.874 91.8921 mo
949.069 90.603 949.52 88.6343 952.745 88.6343 cv
955.422 88.6343 956.713 89.603 956.713 91.3765 cv
956.713 93.0542 955.907 93.312 955.229 93.3765 cv
950.551 93.9565 li
945.842 94.5376 945.422 97.8276 945.422 99.2476 cv
945.422 102.15 947.616 104.118 950.713 104.118 cv
954.002 104.118 955.713 102.569 956.809 101.376 cv
956.907 102.666 957.293 103.957 959.809 103.957 cv
960.454 103.957 960.874 103.763 961.358 103.634 cv
961.358 101.569 li
961.036 101.634 960.68 101.698 960.422 101.698 cv
959.842 101.698 959.487 101.408 959.487 100.698 cv
959.487 90.9897 li
959.487 86.6675 954.584 86.2798 953.229 86.2798 cv
949.069 86.2798 946.391 87.8608 946.262 91.8921 cv
948.874 91.8921 li
cp
956.649 97.7954 mo
956.649 100.053 954.067 101.763 951.422 101.763 cv
949.293 101.763 948.358 100.666 948.358 98.8276 cv
948.358 96.6987 950.584 96.2798 951.971 96.0854 cv
955.487 95.6343 956.196 95.3765 956.649 95.021 cv
956.649 97.7954 li
cp
f
991.163 87.4409 mo
990.292 83.3765 986.905 82.6353 984.68 82.6353 cv
980.487 82.6353 977.1 85.7319 977.1 91.8276 cv
977.1 97.2798 979.034 101.472 984.776 101.472 cv
986.809 101.472 990.325 100.505 991.389 95.1187 cv
994.42 95.1187 li
993.131 103.86 986.034 104.247 984.292 104.247 cv
979.034 104.247 973.874 100.828 973.874 91.9253 cv
973.874 84.7964 977.938 79.8608 984.68 79.8608 cv
990.647 79.8608 993.743 83.5698 994.196 87.4409 cv
991.163 87.4409 li
cp
f
1001.71 103.634 mo
998.872 103.634 li
998.872 86.7632 li
1001.55 86.7632 li
1001.55 89.5698 li
1001.61 89.5698 li
1002.74 87.603 1004.23 86.2798 1006.36 86.2798 cv
1006.71 86.2798 1006.87 86.312 1007.1 86.3765 cv
1007.1 89.312 li
1006.03 89.312 li
1003.39 89.312 1001.71 91.3765 1001.71 93.8276 cv
1001.71 103.634 li
cp
f
1021.35 103.634 mo
1021.35 101.182 li
1021.29 101.118 li
1020.1 103.085 1018.65 104.118 1015.94 104.118 cv
1013.45 104.118 1010.45 102.924 1010.45 98.8921 cv
1010.45 86.7632 li
1013.29 86.7632 li
1013.29 97.9565 li
1013.29 100.731 1014.71 101.666 1016.55 101.666 cv
1020.13 101.666 1021.19 98.5054 1021.19 96.0542 cv
1021.19 86.7632 li
1024.03 86.7632 li
1024.03 103.634 li
1021.35 103.634 li
cp
f
1031.61 101.28 mo
1041.97 101.28 li
1041.97 103.634 li
1027.84 103.634 li
1027.84 101.408 li
1038 89.1187 li
1028.61 89.1187 li
1028.61 86.7632 li
1041.68 86.7632 li
1041.68 89.0864 li
1031.61 101.28 li
cp
f
1059.19 93.6987 mo
1066.77 93.6987 li
1070.51 93.6987 1070.9 95.9243 1070.9 97.8276 cv
1070.9 98.6987 1071 102.214 1071.45 103.634 cv
1075.29 103.634 li
1075.29 103.118 li
1074.32 102.569 1074.16 102.085 1074.13 100.795 cv
1073.93 96.6021 li
1073.8 93.3765 1072.48 92.7964 1071.16 92.2476 cv
1072.64 91.3765 1074.39 90.1187 1074.39 86.6987 cv
1074.39 81.7964 1070.58 80.4741 1066.77 80.4741 cv
1056.06 80.4741 li
1056.06 103.634 li
1059.19 103.634 li
1059.19 93.6987 li
cp
1059.19 83.1519 mo
1067 83.1519 li
1068.55 83.1519 1071.16 83.4409 1071.16 87.022 cv
1071.16 90.4409 1068.74 91.021 1066.45 91.021 cv
1059.19 91.021 li
1059.19 83.1519 li
cp
f
1078.29 95.1831 mo
1078.29 99.5366 1080.74 104.085 1086.13 104.085 cv
1091.51 104.085 1093.96 99.5366 1093.96 95.1831 cv
1093.96 90.8276 1091.51 86.2798 1086.13 86.2798 cv
1080.74 86.2798 1078.29 90.8276 1078.29 95.1831 cv
cp
1081.22 95.1831 mo
1081.22 92.9253 1082.06 88.7319 1086.13 88.7319 cv
1090.19 88.7319 1091.03 92.9253 1091.03 95.1831 cv
1091.03 97.4409 1090.19 101.634 1086.13 101.634 cv
1082.06 101.634 1081.22 97.4409 1081.22 95.1831 cv
cp
f
1100.74 83.6997 mo
1097.9 83.6997 li
1097.9 80.4741 li
1100.74 80.4741 li
1100.74 83.6997 li
cp
1100.74 106.118 mo
1100.74 107.569 1100.61 110.408 1096.42 110.408 cv
1096.03 110.408 1095.64 110.375 1095.22 110.311 cv
1095.22 107.86 li
1095.8 107.86 li
1097.48 107.86 1097.9 107.698 1097.9 105.794 cv
1097.9 86.7632 li
1100.74 86.7632 li
1100.74 106.118 li
cp
f
1108.16 91.8921 mo
1108.35 90.603 1108.8 88.6343 1112.03 88.6343 cv
1114.71 88.6343 1115.99 89.603 1115.99 91.3765 cv
1115.99 93.0542 1115.19 93.312 1114.51 93.3765 cv
1109.83 93.9565 li
1105.13 94.5376 1104.71 97.8276 1104.71 99.2476 cv
1104.71 102.15 1106.9 104.118 1109.99 104.118 cv
1113.29 104.118 1114.99 102.569 1116.09 101.376 cv
1116.19 102.666 1116.57 103.957 1119.09 103.957 cv
1119.74 103.957 1120.16 103.763 1120.64 103.634 cv
1120.64 101.569 li
1120.32 101.634 1119.96 101.698 1119.7 101.698 cv
1119.12 101.698 1118.77 101.408 1118.77 100.698 cv
1118.77 90.9897 li
1118.77 86.6675 1113.87 86.2798 1112.51 86.2798 cv
1108.35 86.2798 1105.67 87.8608 1105.54 91.8921 cv
1108.16 91.8921 li
cp
1115.93 97.7954 mo
1115.93 100.053 1113.35 101.763 1110.71 101.763 cv
1108.58 101.763 1107.64 100.666 1107.64 98.8276 cv
1107.64 96.6987 1109.87 96.2798 1111.25 96.0854 cv
1114.77 95.6343 1115.48 95.3765 1115.93 95.021 cv
1115.93 97.7954 li
cp
f
1144.38 86.7632 mo
1147.51 86.7632 li
1145.54 92.2798 1143.61 97.7954 1141.45 103.311 cv
1138.77 110.15 1138.48 110.537 1134.83 110.537 cv
1134.41 110.537 1134.09 110.408 1133.64 110.279 cv
1133.64 107.698 li
1133.99 107.827 1134.57 107.989 1135.35 107.989 cv
1136.83 107.989 1136.99 107.569 1138.35 104.085 cv
1132.09 86.7632 li
1135.32 86.7632 li
1139.8 100.505 li
1139.87 100.505 li
1144.38 86.7632 li
cp
f
1174.22 80.4741 mo
1171.38 80.4741 li
1171.38 89.1509 li
1171.31 89.1509 li
1170.64 88.1831 1169.35 86.2798 1166.28 86.2798 cv
1161.8 86.2798 1159.25 89.9565 1159.25 94.6987 cv
1159.25 98.731 1160.93 104.118 1166.67 104.118 cv
1168.31 104.118 1170.25 103.601 1171.48 101.312 cv
1171.54 101.312 li
1171.54 103.634 li
1174.22 103.634 li
1174.22 80.4741 li
cp
1162.19 95.1499 mo
1162.19 92.9897 1162.41 88.8276 1166.8 88.8276 cv
1170.9 88.8276 1171.35 93.2476 1171.35 95.9888 cv
1171.35 100.472 1168.54 101.666 1166.73 101.666 cv
1163.64 101.666 1162.19 98.8599 1162.19 95.1499 cv
cp
f
1190.28 98.3433 mo
1190.19 99.6011 1188.61 101.666 1185.93 101.666 cv
1182.67 101.666 1181.03 99.6343 1181.03 96.1177 cv
1193.35 96.1177 li
1193.35 90.1509 1190.96 86.2798 1186.09 86.2798 cv
1180.51 86.2798 1177.99 90.4409 1177.99 95.6665 cv
1177.99 100.537 1180.8 104.118 1185.54 104.118 cv
1188.25 104.118 1189.35 103.472 1190.12 102.957 cv
1192.25 101.537 1193.02 99.1509 1193.12 98.3433 cv
1190.28 98.3433 li
cp
1181.03 93.8608 mo
1181.03 91.2476 1183.09 88.8276 1185.7 88.8276 cv
1189.15 88.8276 1190.25 91.2476 1190.41 93.8608 cv
1181.03 93.8608 li
cp
f
1209.9 103.634 mo
1207.06 103.634 li
1207.06 80.4741 li
1209.9 80.4741 li
1209.9 103.634 li
cp
f
1217.31 91.8921 mo
1217.51 90.603 1217.96 88.6343 1221.18 88.6343 cv
1223.86 88.6343 1225.15 89.603 1225.15 91.3765 cv
1225.15 93.0542 1224.34 93.312 1223.67 93.3765 cv
1218.99 93.9565 li
1214.28 94.5376 1213.86 97.8276 1213.86 99.2476 cv
1213.86 102.15 1216.06 104.118 1219.15 104.118 cv
1222.44 104.118 1224.15 102.569 1225.25 101.376 cv
1225.34 102.666 1225.73 103.957 1228.25 103.957 cv
1228.89 103.957 1229.31 103.763 1229.8 103.634 cv
1229.8 101.569 li
1229.47 101.634 1229.12 101.698 1228.86 101.698 cv
1228.28 101.698 1227.93 101.408 1227.93 100.698 cv
1227.93 90.9897 li
1227.93 86.6675 1223.02 86.2798 1221.67 86.2798 cv
1217.51 86.2798 1214.83 87.8608 1214.7 91.8921 cv
1217.31 91.8921 li
cp
1225.09 97.7954 mo
1225.09 100.053 1222.51 101.763 1219.86 101.763 cv
1217.73 101.763 1216.8 100.666 1216.8 98.8276 cv
1216.8 96.6987 1219.02 96.2798 1220.41 96.0854 cv
1223.93 95.6343 1224.64 95.3765 1225.09 95.021 cv
1225.09 97.7954 li
cp
f
1262.41 103.634 mo
1262.41 89.9565 li
1262.41 89.2798 1262.47 86.3452 1262.47 84.1831 cv
1262.41 84.1831 li
1255.89 103.634 li
1252.8 103.634 li
1246.28 84.2163 li
1246.22 84.2163 li
1246.22 86.3452 1246.28 89.2798 1246.28 89.9565 cv
1246.28 103.634 li
1243.25 103.634 li
1243.25 80.4741 li
1247.73 80.4741 li
1254.34 100.053 li
1254.41 100.053 li
1260.99 80.4741 li
1265.44 80.4741 li
1265.44 103.634 li
1262.41 103.634 li
cp
f
1281.99 98.3433 mo
1281.89 99.6011 1280.31 101.666 1277.63 101.666 cv
1274.38 101.666 1272.73 99.6343 1272.73 96.1177 cv
1285.05 96.1177 li
1285.05 90.1509 1282.66 86.2798 1277.79 86.2798 cv
1272.21 86.2798 1269.7 90.4409 1269.7 95.6665 cv
1269.7 100.537 1272.5 104.118 1277.25 104.118 cv
1279.96 104.118 1281.05 103.472 1281.83 102.957 cv
1283.96 101.537 1284.73 99.1509 1284.83 98.3433 cv
1281.99 98.3433 li
cp
1272.73 93.8608 mo
1272.73 91.2476 1274.79 88.8276 1277.41 88.8276 cv
1280.86 88.8276 1281.96 91.2476 1282.12 93.8608 cv
1272.73 93.8608 li
cp
f
1303.08 80.4741 mo
1300.24 80.4741 li
1300.24 89.1509 li
1300.18 89.1509 li
1299.5 88.1831 1298.21 86.2798 1295.15 86.2798 cv
1290.66 86.2798 1288.12 89.9565 1288.12 94.6987 cv
1288.12 98.731 1289.79 104.118 1295.54 104.118 cv
1297.18 104.118 1299.12 103.601 1300.34 101.312 cv
1300.41 101.312 li
1300.41 103.634 li
1303.08 103.634 li
1303.08 80.4741 li
cp
1291.05 95.1499 mo
1291.05 92.9897 1291.28 88.8276 1295.66 88.8276 cv
1299.76 88.8276 1300.21 93.2476 1300.21 95.9888 cv
1300.21 100.472 1297.41 101.666 1295.6 101.666 cv
1292.5 101.666 1291.05 98.8599 1291.05 95.1499 cv
cp
f
1307.73 83.6997 mo
1307.73 80.4741 li
1310.57 80.4741 li
1310.57 83.6997 li
1307.73 83.6997 li
cp
1310.57 103.634 mo
1307.73 103.634 li
1307.73 86.7632 li
1310.57 86.7632 li
1310.57 103.634 li
cp
f
1317.98 91.8921 mo
1318.18 90.603 1318.63 88.6343 1321.86 88.6343 cv
1324.53 88.6343 1325.82 89.603 1325.82 91.3765 cv
1325.82 93.0542 1325.02 93.312 1324.34 93.3765 cv
1319.66 93.9565 li
1314.95 94.5376 1314.54 97.8276 1314.54 99.2476 cv
1314.54 102.15 1316.73 104.118 1319.82 104.118 cv
1323.12 104.118 1324.82 102.569 1325.92 101.376 cv
1326.02 102.666 1326.4 103.957 1328.92 103.957 cv
1329.56 103.957 1329.98 103.763 1330.47 103.634 cv
1330.47 101.569 li
1330.15 101.634 1329.79 101.698 1329.53 101.698 cv
1328.95 101.698 1328.6 101.408 1328.6 100.698 cv
1328.6 90.9897 li
1328.6 86.6675 1323.7 86.2798 1322.34 86.2798 cv
1318.18 86.2798 1315.5 87.8608 1315.37 91.8921 cv
1317.98 91.8921 li
cp
1325.76 97.7954 mo
1325.76 100.053 1323.18 101.763 1320.53 101.763 cv
1318.4 101.763 1317.47 100.666 1317.47 98.8276 cv
1317.47 96.6987 1319.7 96.2798 1321.08 96.0854 cv
1324.6 95.6343 1325.31 95.3765 1325.76 95.021 cv
1325.76 97.7954 li
cp
f
1347.15 100.86 mo
1358.89 100.86 li
1358.89 103.634 li
1344.02 103.634 li
1344.02 80.4741 li
1347.15 80.4741 li
1347.15 100.86 li
cp
f
1373.24 103.634 mo
1373.24 101.182 li
1373.18 101.118 li
1371.98 103.085 1370.53 104.118 1367.82 104.118 cv
1365.34 104.118 1362.34 102.924 1362.34 98.8921 cv
1362.34 86.7632 li
1365.18 86.7632 li
1365.18 97.9565 li
1365.18 100.731 1366.6 101.666 1368.44 101.666 cv
1372.02 101.666 1373.08 98.5054 1373.08 96.0542 cv
1373.08 86.7632 li
1375.92 86.7632 li
1375.92 103.634 li
1373.24 103.634 li
cp
f
1394.56 103.634 mo
1391.73 103.634 li
1391.73 93.2476 li
1391.73 90.312 1390.89 88.8276 1388.11 88.8276 cv
1386.5 88.8276 1383.66 89.8608 1383.66 94.4409 cv
1383.66 103.634 li
1380.82 103.634 li
1380.82 86.7632 li
1383.5 86.7632 li
1383.5 89.1509 li
1383.56 89.1509 li
1384.18 88.2476 1385.76 86.2798 1388.66 86.2798 cv
1391.27 86.2798 1394.56 87.3442 1394.56 92.1499 cv
1394.56 103.634 li
cp
f
1401.92 91.8921 mo
1402.11 90.603 1402.56 88.6343 1405.79 88.6343 cv
1408.47 88.6343 1409.76 89.603 1409.76 91.3765 cv
1409.76 93.0542 1408.95 93.312 1408.27 93.3765 cv
1403.6 93.9565 li
1398.89 94.5376 1398.47 97.8276 1398.47 99.2476 cv
1398.47 102.15 1400.66 104.118 1403.76 104.118 cv
1407.05 104.118 1408.76 102.569 1409.85 101.376 cv
1409.95 102.666 1410.34 103.957 1412.85 103.957 cv
1413.5 103.957 1413.92 103.763 1414.4 103.634 cv
1414.4 101.569 li
1414.08 101.634 1413.72 101.698 1413.47 101.698 cv
1412.89 101.698 1412.53 101.408 1412.53 100.698 cv
1412.53 90.9897 li
1412.53 86.6675 1407.63 86.2798 1406.27 86.2798 cv
1402.11 86.2798 1399.43 87.8608 1399.31 91.8921 cv
1401.92 91.8921 li
cp
1409.69 97.7954 mo
1409.69 100.053 1407.11 101.763 1404.47 101.763 cv
1402.34 101.763 1401.4 100.666 1401.4 98.8276 cv
1401.4 96.6987 1403.63 96.2798 1405.01 96.0854 cv
1408.53 95.6343 1409.24 95.3765 1409.69 95.021 cv
1409.69 97.7954 li
cp
f
1431.47 93.6987 mo
1439.05 93.6987 li
1442.79 93.6987 1443.17 95.9243 1443.17 97.8276 cv
1443.17 98.6987 1443.27 102.214 1443.72 103.634 cv
1447.56 103.634 li
1447.56 103.118 li
1446.59 102.569 1446.43 102.085 1446.4 100.795 cv
1446.21 96.6021 li
1446.08 93.3765 1444.75 92.7964 1443.43 92.2476 cv
1444.92 91.3765 1446.66 90.1187 1446.66 86.6987 cv
1446.66 81.7964 1442.85 80.4741 1439.05 80.4741 cv
1428.34 80.4741 li
1428.34 103.634 li
1431.47 103.634 li
1431.47 93.6987 li
cp
1431.47 83.1519 mo
1439.27 83.1519 li
1440.82 83.1519 1443.43 83.4409 1443.43 87.022 cv
1443.43 90.4409 1441.01 91.021 1438.72 91.021 cv
1431.47 91.021 li
1431.47 83.1519 li
cp
f
1450.56 95.1831 mo
1450.56 99.5366 1453.01 104.085 1458.4 104.085 cv
1463.79 104.085 1466.24 99.5366 1466.24 95.1831 cv
1466.24 90.8276 1463.79 86.2798 1458.4 86.2798 cv
1453.01 86.2798 1450.56 90.8276 1450.56 95.1831 cv
cp
1453.5 95.1831 mo
1453.5 92.9253 1454.33 88.7319 1458.4 88.7319 cv
1462.46 88.7319 1463.3 92.9253 1463.3 95.1831 cv
1463.3 97.4409 1462.46 101.634 1458.4 101.634 cv
1454.33 101.634 1453.5 97.4409 1453.5 95.1831 cv
cp
f
1473.01 83.6997 mo
1470.17 83.6997 li
1470.17 80.4741 li
1473.01 80.4741 li
1473.01 83.6997 li
cp
1473.01 106.118 mo
1473.01 107.569 1472.88 110.408 1468.69 110.408 cv
1468.3 110.408 1467.91 110.375 1467.5 110.311 cv
1467.5 107.86 li
1468.08 107.86 li
1469.75 107.86 1470.17 107.698 1470.17 105.794 cv
1470.17 86.7632 li
1473.01 86.7632 li
1473.01 106.118 li
cp
f
1480.43 91.8921 mo
1480.62 90.603 1481.07 88.6343 1484.3 88.6343 cv
1486.98 88.6343 1488.27 89.603 1488.27 91.3765 cv
1488.27 93.0542 1487.46 93.312 1486.79 93.3765 cv
1482.11 93.9565 li
1477.4 94.5376 1476.98 97.8276 1476.98 99.2476 cv
1476.98 102.15 1479.17 104.118 1482.27 104.118 cv
1485.56 104.118 1487.27 102.569 1488.37 101.376 cv
1488.46 102.666 1488.85 103.957 1491.37 103.957 cv
1492.01 103.957 1492.43 103.763 1492.91 103.634 cv
1492.91 101.569 li
1492.59 101.634 1492.23 101.698 1491.98 101.698 cv
1491.4 101.698 1491.04 101.408 1491.04 100.698 cv
1491.04 90.9897 li
1491.04 86.6675 1486.14 86.2798 1484.79 86.2798 cv
1480.62 86.2798 1477.95 87.8608 1477.82 91.8921 cv
1480.43 91.8921 li
cp
1488.2 97.7954 mo
1488.2 100.053 1485.62 101.763 1482.98 101.763 cv
1480.85 101.763 1479.91 100.666 1479.91 98.8276 cv
1479.91 96.6987 1482.14 96.2798 1483.53 96.0854 cv
1487.04 95.6343 1487.75 95.3765 1488.2 95.021 cv
1488.2 97.7954 li
cp
f
267.057 153.071 mo
0 153.071 li
0 0 li
267.057 0 li
267.057 153.071 li
cp
0 0 0 0 cmyk
f
67.7012 92.0669 mo
32.9575 92.0669 li
32.9575 62.2886 li
67.7012 62.2886 li
67.6987 62.269 li
67.6987 27.5278 li
97.4771 27.5278 li
97.4771 62.269 li
97.4761 62.2837 li
132.218 62.2837 li
132.218 92.061 li
97.4761 92.061 li
97.4771 92.0571 li
97.4771 126.8 li
67.6987 126.8 li
67.6987 92.0571 li
67.7012 92.0669 li
cp
0 1 1 0 cmyk
f
178.29 76.6313 mo
178.29 53.4951 197.047 34.7368 220.183 34.7368 cv
225.336 34.7368 230.269 35.6699 234.827 37.3706 cv
226.259 30.5894 215.43 26.5396 203.653 26.5396 cv
175.889 26.5396 153.38 49.0474 153.38 76.812 cv
153.38 104.577 175.889 127.083 203.653 127.083 cv
215.823 127.083 226.983 122.761 235.679 115.568 cv
230.886 117.475 225.658 118.528 220.183 118.528 cv
197.047 118.528 178.29 99.7681 178.29 76.6313 cv
cp
f
4 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
256.294 142.745 mo
256.294 11.5513 li
11.668 11.5513 li
11.668 142.745 li
256.294 142.745 li
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 16.0.4%%For: (Daniel Joseph) ()%%Title: (IFRC_logo_four_HACKY.eps)%%CreationDate: 12/13/14 1:43 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6MddX7YqZ*j^qKnt=sm'T1CGaah0%.&]]Q(:Y+=_'S2?"eBU^k*\eLDdkNP4T%@?0SOr^r)s!)AiBs@bJ0Gr";(]\dJN&MPc%-`aRdj39e0%.7n2%B?]P.,ChQZ#t'Lc:=p*bO[?N*k#Y5!pJ!3<Wd_0/=!5`-9$%Co,4Hqj,;CJg$[gBF1aV"T5<)JmJ2CNB8^Cd%EA@63\R'3')N<:+ito\*dDts9q.dU5DmlR%SM+n`6DDmmN%\5tPKtmWT.IG^#-Lsf>lB2LrV>68ojE<"6ZW.Ca/;,_nT),1\GEda%)0[F"IJ`9iidA3q7CWR)2(/^kcs$J8mca*UMmkgqgQ4IL,bI&&?S!W<PD7*W?ce)>LYKeoo!S#fQV"?ritjqX3?*mah&UDm5Foc>%>5pga:D_b%K34Zg]^V+4`:A<=CKiF;Ue%G!W1a2Zrkm"W6pB.e^11K1iq[kc'jAEq^Xt0aSk8eb*DCrBqY\Mi5+`:C7saaV6jctV%%07M%6Z'h@.j4YgeRlMM]u?4248T'@K]hcIO-\*mkI^+j\([@#rtb@fG4Y:S;o!V,IAO$C=PF=n2Ju?,2lrJ!q>N9>9@.#u:LC7@%]-Xaj<OtKX^[lAunGGW^W]XYRb*mlZC03K%%;KI/Pr<sH)EfoH)p/e=FSXs3q9su48'AlnE_H<ig?p#crmrrn18ZVe?i'?W@_LRr%q/!J1W+/CN1#uu:PNDYW5_o:/o`Fq#*u4f%J1h_nB?Qhf?CUTk&E^g%OW$@"+"_qJ_LU$5_&"bkB4#Pj67hTW<dA^7V-E":s(AIW%60m:')Pjm@:"+iC<W&2@LVf]4WM>31rm6^s0=IooX0W&&K(YeE1oNUnY"muDK(7[^G0hLad?&++s',;kOS<kLm?YJ;MF[@#ZXf;d%_p9B&<F7ra"9!&@njN*oAY=E$4CVgH4D3-^DXd^;P4>+8O2:VSh=A4g;u3,dJq'>DJ(kb<SP1<:Wo/)$_:P]=Y>n"ukB"^=\XWaM%kMXTFJ8u-mS=@j$bdI\B[KW&Ls$6"\"fSj5./42L"fTNGTI(>n3LR[LaTQ#6F8.eg3sW=ZF8.qk;]`fCn0NI\7f!HPja0uBGMlhY%Ji:H[!!R5&QI7^*&c<"jcm&6$g+AP^][/##(Z(fRn1U"oFJ=ql7IVt;)h(.(ZjH"CC/Y!1"mpnk!G4NN2!H*tS7kSq,V$XFP`o9G%fG!\+)q>Fc9-4HCr;[P=&,q9GW!B<PoSn/*IKL:k:O8D,6@#8Qn1VF?l_sjB?c!d\i*V"dp;+MnMo6o0=/m?W'HR7uKn#oE#X>%E%5S;h*0%=pY*\\tSW*UrVqMQKW#@O3I_O8b3aA&e6YL#K.(SHT!Tm]<Bap\4N%(*1I,Fg>qLF>YM&9eKm$a0iF!Tq<L`!\=QUecj8%KH3p\l6X"Bk0bL&2SpK-Uin5Yo$_gZ+j=Y2&iWa]'5a\$3W9Ti`mIP,ME<Rsj2_io7G]E[(;>k-#Iu&ia[hK+/6%Z.!#Q"g+a9`:%i%"Lo]i6WG<3!kYpe=X`nW28n-2sb`ct;b\J(%25a'))l^ZhZ!kro$CT;J=VVNJG/rY^^Z9DhLKj"\6fht0k&R8,1Wrhc=@N8ET5%qC0;ma`HZ-pm:iBhW9`Gqt=_[1"K:*SW'`Gs*S"1kOVP,TDCT"r\^llo;PWP$>K!9:?+G8k$2YU[/iM$n=.V'n8J+eelP/[Hu='i%Knk,<]I'HKH=liKJJ;IDU$oF,N.5n+@UNF8%d=6t95_Na^,-&nmR"i)I0oZP*l>^nkD$51XauTC<5BZp=*rNjV*HQO'5.bNf2H6q%X*P+0VcLTOgG7'CC6:F&]DN$s0gF4u(thr17*>;&&k^8)gZg-&6+bV"iA]hJ?E0p7k#-;7=W:Pq2I6`LmAT(e<FacW`h'[RKH&H,%bu%,5Q2ffognU`$0TPDdI0bF^ks0OTX/S@0b\-KjRL^eN3?r('?f!oC3pBRSZ6!f%G$H4m@lh><IVU<51=/.#9ubf,ho%7S2'+RR%%db#_qciFe9u#'],5u@+G6/Xd5*stO"`%nLc[6*j0ZKcHI!auhXC@q&qj;+@38lM]$bW?N4929OMJu&a2fb8iY;_amrtD$R(ZHkm%3V%FU_u70?<LUrPN#Sc%pjPGOi."ILlXe8<Xh54Q`22r'TAjc0g-5rC8)q6.M*fXAGY@Np/D<KI=QiUr$2oSBNlDp5bqQO/.L?6:%"T3&,Q7qa9&oI_26n&3n$0mK!UE$$IHC<Ims&4D+'5B&s:AR$5?8W65lf8HF)To4ALM[l"_O"kQ%*WF5@qqKn9OBl%U\$p'J"W+J%*YE-#[ITo^qU>K/)bK*iC64\HlUC5-5NW(YH49[`-9[$."#t;?@r"QI!cSTA(=<K)k@"LJ?6s;;ooo<O1!*=74qW^Y1F>UDn<pFn%7)B4#[0-?X[>Z!N-.$[_,m_dpdAS5`=<:lTYg@8.peOddh':Ve8cVRWhm%Xg<30(ZQti@8,5EUb*W"hJk`S?^<[=;>RdK?oY.c%C%d/>0aF"K0TWEi76Nh.U0;7\)p2>]#[TW>n^Dk`O?mWg*!)Fd\jput>EG)$YZ2HA<pi`,\VjdL(I(=tk<7!KOE&,Ei#nKt^(#[;u5%6*+Wmmr=$#OY<I@kT]_hn7tJh<<o"Sm(Iie&ELBVG,3hY30guohA[.$&rk3s8dKLcF)43tP+j3lg`2;A_?"aM@\rerL:2t=&?,uE%&6YGG[k`Bh#[Lp^7m8-]6N''>Ni,;D40u7,R.m;h-C[r$X#lXcTnhCIHLm*0Ktm0$j5o^g--^Pjq[]<;4S7nI-Cft>nOrJk_tA``%o\jt7nab_HVjl]6k[a9q3V[?7]\@7(s1:B2I.?99roL8u?(=q:I(<N&qZ?\BJ/Kt?0Aj@J\G:HU>n6(nc\\jrqs)tcjjVKJ1hNZ8%g"DG0p#]g`Ce.^!SIE5=CgULSoY^@]Cp>!gH78T&oqVPmn<AfAa0]Ur]%imloYeQs#h#^1&qK&l2(DerSe&j,jk7b$.%=Oa`$t*=%nfAmj"Qae\hHl^:++1WPX@'8gVbfE%@k,:o3pLsG):#rU,6I8a_uSV^7bcb&XqhOr\-E!'f3J/_Z!OW*D&4jtYE&K0kkQ97U2R6P%=?iEAfrS9<VidU7P_Y1aDKWTu55tA*[lh?Ik72)O.kfrn%-'uh*riV"*Bubl4kVHrX6$1Q%m&Y5lKlI\ro8peDA`bf3IM3lNe>Bu%(GD--N8=(c69Yk_g)muk:PJ]Eqj0j%V$H%ejSO_e`Q?7QPR"F;[lAhVDt*F@5bZ8+#N`a64=RuphCH6>Ra%beXr)Li\t(eOHLBp=%DW]JScdf[uc"FB9F>fPHB;8TkCM*7`c0WZuWgTHX=m7g2Cc\+^]S7A"gM'T2jm/deC8TN\:XuiE2Y(Z>SP1A?e@*VtT"'WJ(n>)5%'6!f-BB/7/>L2?W\/dNgHL/:EBu\\*O4C`k]Fd(A9tf(?*f[rE)q?/lZ6M0*7XCk"hG7iumF5qJZ+%=![V>'YH0a4l<NB?SH>gB_%2:H0cN4i80S#0la`\k1Z:"AGs2;X9Y+)b&<lVZKh9jQAR[^E*8>1]eJY*GKeWLLE&)nFNWY'/)nB3aQ*;m%\<gs599::qZ*nn)rQ%C[8(0#$kMG]kqRtAniZ)Cdt9ZhKLg%=CY$9Zr*^%k1-Q%<o+(_7TEYM79*F7)uc_7.UB$Re8me%;a&N<4jpJ+*jp1Jn1hN&=t<mY%\XKLsR]*J0WE(mV<_ce/<2Hs"W[pd"OeqN)Ea3pBQ+kM>.m7@<0=ulDf(Y)CE9E#Hf(0"rYdo>X^Ih1J>ho.KP<(l\<(mTp=dk*`%:BON'Dt^O'jS<t?$B3,Wq!=#C[.I&WalSUp(<K$1'gETY`D9'd-g;Vm9$\3D#s[Ie;gODP*[/MeC&"[tEVrpfW&FJ!paCU6U+5-l%rA;R/U1_Wp"J7D5,CWgD)LcFK*'^mYA-Got\2p&Ap0A/(8WW=fH=lqGq3g.sk%@Y<c57^K[)aE_eGM:R/3cHpC)tpGPOBe\jW&M[%NdN]OhP+Z"cPW8d5:o)/4uGP7+3T]oV!Ei$dQ4?=RIjNdh9%76=76lTjjRkrGp](p]_@BGabNE7R_>We4Ke;F5UsX,MIS+X>Og*f%:\Vo=]23'dGl4DaXRf+Ic_UFP4Ab&ol9+Ijdr_0BI>T_]e&QVQds7t,7u"c23cZ@*#P@%Z6':I'CbsSKVn2&N6bNH1XBut,rE!Y1%']Jcn>3"[6>"pgbl3PprQ9o=1^3#6Sf9gk`3`nG7fR_^$&<W;Xq&qp9rY3(h"`gth\r6V-))?;I+NY1YTgo3J[8Z9c<FBt?,H?_;%S`NB6+DF9lOea^#Iu6F\'W>>,fo#>h<?)iJ`Ym;R5GZas_i)O<$T%k%*"_^lN.iuNA4]Jj&N^)sNkj759O2&l`*e]L12"t@6$\3D%TX!N/G'&?W42u`>@D=8X-g2S+S^AYO-V/%rYsO<dUgRINaad2$UrsbBTX!>"g):nh_T"hSk(p<4$j!QcZ[_:r_:T9RW?2oI_K2Ef%'cc8SN:UPWnRH58e,Okjc0X6WVt/YEq%d*tmV4uc>!EM;?5H>L:7?OD<PCgNYH+bV=`r\g=6l.(fIJbF\=\,6<kbI^YO&>lH?I\]%%63pIE8ib7XI4E9=.TXHY:Zm.R^Lb=Xk0:WY>(p$X3M);#*`b\b,\b4eS^AIR3Snm-XJ+F7WUdRP\6H-lYGhZG4"sHlh1&*lgq+-%lZ5:('[C>0YOgSG/g_$&&WXOj0_L/$XGACQAsG:lX>_-aC#c=OOgcYaYbjXUqf/Jqqc2M4YhnrL]`li194[B@P,Yoajol/Yi(S'p%G_154`OF!Z1;7LAf$*8t@>-I-KI@;(*69E+Nr1U#j,ae(]gtW(N,fus4LjFUN^Gi;jtMm2#f@dF_`&(\I)s=DMSh90d<p',W%<0q%`Z^1+0oX%u"NJiUO#e7t1t[[>dU\Tmpb^(B/TNc=2K8Bn3?3;!F#c?RBVH%iNI$mDE4fB8I,OrAq&`'kMkaZJ$Y&m)EBM#ma&,^>%AY=$b<92==:_(NmeMpZ=\?n5+@*jk-VGQ9Dh&=)<#&l8H&]G'N3C[!4+ms7;WVJR@5UYu@+o_'ZhXe7tFma=@EQf+;^KG2uo3mur%cXB<)?hF3<[`;P=EL$D@jeCcPj;pR$mH:p+DT!n,HdORoqqU3qkP1]c>]d(.5.B29Mb&`odWq6]pIrg+`:5k3npn!(iUTTN/2_ma%D)1-m#bmO?UgM<Zr#LT@p;jU(=IQZ+V>?i!6fE3C100R`8F:nRQ'j)VFE!<81h:Oh1b+6[NmJIXUH&A[aV9^IDjJ1kSPB$Yd6ahZ%8c_#mU9+LJ8rXUE[oj%dM]rQ!R@jR:73fgA1%6;%&_h%WBdtrT$jC7%*L\oERQ00F.1i`rg,``NGJN4+U=J;k*dEc,Bf'M1JL\$Z%%&l(e"M?mN:BO'`_99N")i`6/!Xi_"<g'qUi'Es4EMh,qWmGVbbK6LOj='lNgJHaa.Ze$_1oA9+:e`37&e$:8E%o]/eS&JnBP88]%[9h11_,[8Xjisq0BFj0m@2f6L)4#trQ?.;l+!Sl4NA@jdcnn,7N<WRG7[c9b$L10herX9QZQWdS<j^]$DDQ+4eSM4EfLBB:N*S+X%$o0QV=uO2D,benemLk.F9J&!)`4VPD=f'cq&PG`4.(#QQ[eIc#(Rnd5I^/dhnjhH,/L%WWJe<[u:Vf3pHNCqn&5PQ=!V$B4*tXJu%Hij!KU0f%7JbTH/*Jf1f*eO.mlm2d!5s,<TYd5J?JiF/p*1&/M%,s.#h]SMCp^Z:H<!>>pi^/G7_/@29IQL\XCTAb>/"(_']ks`<%9%I,TI0PruFM-@C?d87mHPJD.S*98L=M`*#\-)!0n1(L^Q6]*`I[q`8.KPjIW3T58[j[U_(=FT3=EL>(70:.fmajE"i#r2[">,m6%5GW-e=-.;FQ.t4aM?Qt<.p1]%-t=hsL*l.3ZHQ.6'ABP.k_HMa.U^bNIZtSG!D+(gHq6Vf2,8I]D-5AeAG2/>+K?"4<;O*iPt\3L%/;OKPdbcH-=f[ac:V*.AA$Q*UU.!f?`%H".:N9o@E-..\KTC):[lDeT*:5VDG_`'NilF&<qC@d1)Pqt6$4mDTXeH<$c=@RnM1Y:N%prBe@#53sD2am&+JgW*EE7>Fb7hddsPc0F<;)m:1iM?n++cW`sVT<">>=<nu2$Sl7)E2]D8,uL*WS4!OV@(!bMuL5"N`:5,p*eRp%dtn,t<Cg(5'=$AFh58k7Z\^#CMSr,VY^JFmGq$#A%*q[/[`2LBU(S\e`Y2?3<E69bA_?,Pp(j-$@V3m;^f!:E-&.]F=fd@[WH#b<%=]7)MfS%[8Vr]La>LdquqU0)8nqMW(("ce9](T(8Ib'!DJ\(^mqanQhq3Mg5<aaotk3Yd]s-8iZ*<):,%W"5rU^:0NoRfnEMlN>F%`*8gGDbYeORAM$><fgqZBGq=ConMj-1'LOq:WT7SZ\M09/Y+a:"Z?.?%daBlPG^OH8McA`)(>)u1bCtI/D6J&&#-m@OBG$)f3C@T%/]F-,>!1`R=dh7F#u+Q8V+EqBIfTFOTV@gJZC%<%(o,NPLBp<3;u-'</il`)o$XD:X/Z4Q0UcOJ\IPp_a\jI,Q7Yie$^piZ*C?C@%V]T"\+gl6lI,(bb"jaqgs(O*8MS5hZQ(CkI.JAt2BDbA_[q^frj;"9NePD=?b[0i(r@)]_/+I>epPHqn3'9'n<5"mjjZr%e[WjK#%Q2@i.N:K77Sre,\<7'YK+8Ysd?Ll"afo(3)ck$#l"7IN0-Ds&uY?0]QjBcg^lAk5EDRe#(Tg+l,@QF)!#PC6`A?3A#3HiIRKuV-m%)0i#$I7AQZ]D"/X;hUQmoPo5=h0[B&K/4+Y,fIBN8I=4@Sk,Ke+>FL&l%&M6gl3jH&79V*B=o=AG1k?(;<rLbKAgVE:H,4hmj\+-%h$uRE!H:1FEL.3"lOK56rsoR&X+nNW?;*TD+.RkUq*(3nP'JFCF-?>GR;7t2-<10f;=)1lYR9,m%?_`FfF-;Ap9D^uAT++:n[9S+%Nf?*;I^pdMNd^LJRqs=Xe8"^)`CnfnMijoDYd5tM\iB&Bm41mX'mo?-[u9E%^:SXYhL@32JJT+d3q;4L7n5bSnhKVfHLpLL(VH%t%jjeEll;P/UFmN&Y5'?;H]n[a!=m"WI(I*sY&s"o0;bEgL@YE/TY'ssJ?`<dXC^I0P;+MCP1_4=tLS,m4_+$#3),1`lkVZfX.["bF%L;SheSM`*l.*#:M#*4ks^PYENVJ<E;.(cL"?Wj[Y=R_JTPK[J/q1k;`Ll%0pUe]nM+7YW/`$0C=UR0Uj!=c28d,IL/rHAg)c*pU"%=_mQ&1TC3$q]-,94@cVN=&%t%D5@4'.iEdPgR%6f]tpK*M&:PHp[t=OZ`h$4#5pbG%@UISe*tSu1J_I)as9;?U*Ogn.j=EqV?fI$%&iej5n-PN2Dg5a+%?V@",b@>3.e"manV<It&goDO+c&316AUpqL%1TPLL1`e%#.D!0dIZ)((f12PVGcs1F,(m&q`"JNmjB7BT97O%:aU0$'"\b92^F-q,`s)G.?\t1rQ0XT%mP-Y45REdV+?$qgckGV5<+='B*9$;%H5nV_8TtQpiT&FES1nPSIo+32M>FM";dC6iG1#U%,g<sJjBZA9HJ#sLr^H98fH1XW\B(8e:Q^[%Se8:nEk3Jdk@:J^L/^44p'0+pZ[:Bt>]F/3mMZaUf:+AHTDuK5;QIFs@XiQ5It"85%L*iCb.6&=("j;#3U$pf_Rf/YCrOEgS,GD_562%6<@#Ti:p<Ka6R("O<,-^'!7;@dYMs:%H7E65sP*i;[@^3CSd:8:+/R+<.>'+T/%rO%Q(cR_4iR"F:1neo>m?ZY[K1eC^!hFs\Kq``FZAiNDo02AG>l`6DINu"e&-YRtO?ZEFEXhjg_ceppYY#H;S%U1-,q5eX$l!4/W%A_(+B'u,-a2&BQ;04/>9"]k0:QW`o[f&E#LZf_/,MV\eR>u%oTc]*W?gfQ8Hoi;*>T6tPK<Rr9&4@Q\7pQn'_]u7<jNA#eTG%+hT%gkKP!Wf*GSj^7Ugj_]+b^N:Q<M+0mR=M_,H\<RiG\4f"92)qt6U%]LDg$>FmaUX.*:V=fQe9/fSEnSHhhX=kl@?PFf-W]?$BK784%et&#/nk\U(*nZses5d8Y]uRbHE]k6m[bg&&IqLhsDMR?@YY<>]]2dh!.U5sJ00%LcmQ9"':;l1!JDKMt3'<FGn-5tg%NbGq`S*tr%SjX-_N@_33gbr$=VTQ#74KrXCb6k_[OScQH31]V@=5N5bm+AFE<k)^ppMVXA>BOt%=kp="X^uLQ:2VYA>?88A/8j"[X^uLq$Fc>?%XZH9#WKUOe\7L@ubMlQngfbK&XDhrXgo?QBbMng&rcsgKGHW"J[\#T39DaTlPTH:%5+KfG[h=s(G!D5FV@b;)hg7.o1MjB9]AIHY%U>#Ipl,/;uaB$iX\'KQm7h\'kf"QbS9m_0_Ck"t-o()JpaQBYh5Bj%Fg_Kd30OoN"s4.&g;.%_##I63goNu[<)k&;RmpO-NqX5'2%/e8Ado'gV[4P,VIU>mj1D[bi_n//]Yi.J4'a)`t-\_]rcbN7JrqfPT,AW!'bC=gul]pbh.Co:I?VR]%F'US8g]1gh4h+g31?KQ@-%F1MlCh'S\1U(/-D$T.kCPA\iE[r816]App"FB^`n(bbA[gesa#9:;LoJ'snSEL2%)!FLMdj5]t*kpc2f=n;)FH$o=o!2mK4#:dFJ%B($D*7Un%=e310U\0'Y:`Xj.9dkcaL%ri$6>%b=q=YS>9Fn*9g]SChOqmkqTkeg\S83SB6?$*[T5_i^PT=<;4`AJ.F3n3]5-Y!nM%[/Reb5MZ3mG5%#TK.Ltt#nF9Bmd_rU(h'$O_J+@;d[oQgPDX:!O<aJI"85oi7>](N<BQVBMF4<-i@-K=T9jBhS7KUF/!h6Y=+o&q%.R*=2jAV):g$sA?+(jm7#\,p.3$,:_j)^*u76"e\iBrI^.=4#l_p^=r^+CuZ[$MiABD<f9A]fVfB4cPSh3`,lC\ZO"a-YL[I$J!Z%dkrqq\8KOBeMTI+isNMhY2\d29"osRcJKT4NH5Qd1M=$mp_7']2rbQ0a)G3o4H$E*Hf>I+or,I.4+%*!"39<MRBju]<pKqQgSpHD%<n"gqlP1/->Usl6+LfVbD/5Jep@XkYAU(6a]+RqXV3[%6X5pEHPMEZ\jns57"fLKEE>lP7LJCG](!/%Tj)C*`S?4.#W>nbL:T9WV%jlICR\N/+QI#3n(YjTA,-PuJ6I'&dkg)"\q)^d!Aj.U>o?fDkSnmfoYYOb]7M8+'HYT+9,`s9f(_DUtUh"'(d\N4T;ln;]?2\$'7%?[9^uZ$4&jG.Lt"-_T9Wg910P]-9>g:(Tr+[$/DkY?oe)KlbrT?J'MqV2YRi[2##ZDHqO6,HPd-/R5sJ!lpQR[M=-^*3[)tOe(3,%>\fbfg'\pC7.$5B<P?E2##*WnVQef6H@jBtj3&[eiR3NFX/G0O.6QXk+:aql]RR)'a7:Yle#.!Z.))i-ShE2iB`2J>%**FDq[K4j%[,H8dE7Y0N;hkaphH(1.mPfa;HtR@[IlMVQVCQrf.c+lZ^^tO6d;B]%fA/6:plOs!]:D">'HL\>77!HRd)fN]3^_;EKjE".G/\#O%fH%K9maB;EMF4l)-(!5sda`J/ceW`g[4e]K\[JXHpX\l:Fg$4-*M40TjEK1g_Nf6K0!$S/)s_C.Yl6<0L",LnE@Ji,T1AQ-.e!Y&%i-LCG-4@KYf!a30aU670(Rrk2`o3I10i,\L5@^:>]<!Bu]9^?Ob=-I1EfFtMbb<".4i<ER/.O/",*4$5j7UU;"jFXOONaoICRF-N%bjd1F0hQ.Drf_!M'M`[J"mZ$Xl:ng:F+!KJbsU*$U3*(B6Gj\7-t^V@!@J2CGZs>1'q?[tdRuQXoG5a5#gl#kE5j?>r$'Ei0&kr5%mV01TV#%jgAA_J.gTYp>aaRX:W43_u*j71JDG%KuE8R;fr.QL<(5[Eg]h#QKJSN0i7B.@<<%D9.;XJFr>4Hp$C52oAMV!bc3uk2"%]O%DfiBXdp$!R8)l43af'rfC..e)&,_d*/Y6TUtlVp!MX\eFsKj7IE]f>Erk\MRjV!!$<3Ic.*7.Mct@9Y?Rb`&b13:Qcn3K3U<k%mLt'EHuo"#]/n]KcCWk,T?OF8+,\BO_O$.o4C%5rbO*u8_;3L^]D5#-ol+uWHY7Kp<jA!CQrNJ"O2=qH,LK!Uml*K,?PgiKDEd;t%I/V"`q)=r@e%cAU)gqC.3B3]PO*J(j'Rrd'8,fVh9pV[G:%@[./F!gFY-r_?bcntMA3NGl:EXR5Cb`-d4lj06PfqOQ*p@Y.GqE"C%9r`r-f>/$r"X4B(*YYJigAhQaH4]BGPpEITW?e"mGMVP8]IPpWPdZ2d',X^YQ*F&:d6m6#*;n#<rn7>Oc=jhZY)[_,c.QS'oAG0q%HIr2cs(_j`h\pn6FYTZJp$BJBH[0P%Y>1Bt?fQM"C%F"BB[`=?3o/#E:\o_P9=j2hY_23!L1[%sRQYPepR'nd]4S]]*PXT.IDUIB%eBm1SFiFC95[SJmVu/Ih%?1[:`&GXg.f#Q[isY2_&6+YNIg.QDT_,.UYLVPuY2^lY$cVCF-k'IZ>62P(Tf;lo"MZ$)+P(a`$Gu6\%LhT!+1_GDu1CucU1(\b-5q4ZAb;t7EHO?L\+@nfn4U"]b8'aU8Ia:9d7kY%>pT2a`]**^l"b=[]ckcW_dci`)J4qC']ebb7"B7pC%ke.'$ND+oe]`SCS8:g!<"%8bE-FVJ3k.\GWc]1$J#o"[></u8+70st__DQn=KFS\>Rm9h;#E"XD6e0`op:r#TK7!_g#m?LQScDVS%%`F`(+A0_+(srUW#rrRU$/'GnG2UTE9D/LG&f<)g4b9>\%MYV*5Z'iQMJu:_.%pa^aD1("LqUbSkK##9bX;`$j.66*%qS"bB`ql\%b((>V#fI^I!I<i%rZ3GY`WQmDLluDU%#,En(f5]"$n%i)Sn9m5iIho"5"6+[$R""\`nUSDb.`.umUDa&8P0I?Ldj?qal*BU#U_&]%*+Ku)3.[_`Xe7D11kHUIdte:L#ot_>,_C#&#E1?n;"W$u*R%Wg,cL55m\#l]8P0K5e4edG-&5up'0&S*i<\ZNN"]/Keei%cm7Ag9%bb_%cE),>EgN,?o3Iqj(cf#`("AZHjLEiT.0P5^%M*&`1X&j)+2JiZ>Q[4]g;F!gr!?(2;:m,ia7QUd<U`>I-:Z49e^t*eMOngu1%_kK)(p.h24amA+Ra9PS6/D^csho/;N+^?j-om&Dt>+ZacL+i>b'^CE20:*2R0RPK/,g0$9^)-SC.!Z%`0/Z=m^,3t+1r2`*3'Df&%I.'^lha]ik8Nfsq>#2qrIqNW_8P@7nQ5<8C+rN=DI\0q4P-hf^[kB>Tq_[O\]h_(iEf(mM?alJAX"\J?'R5sNPk=BjMJAU[3^&Z"%ZK1=E]2"E_pmn;WjW2^kU#!.?mEgtb>t2Y'gYM7LV`c#dNj(?Y(qY31=)bD%/b&Yc6LF;8pH=5UnBT%Tb4+[gLcpTW0QQA!:.8??%^I!ulI=W&pi21:U=9<f;(!u49:8au.pG%$OV5cK3AIKUuQEaUgJhDWN6tNPqkmkE["8Bp-"0s2k+mi/VX,d;Y(q&+a%/5Fs]7ZeM%_`g3[KU275-:i1)Y[:2hrK+T]Bmj,g1D.t]dsLrMBb,%&-WpiR"C@]#n#?2GOQdE"IHn.7r>cM+I>Xt!J9M/h[grrtU+S'4^LZ?*%:Qb:r[BFFDc]&ioS$T$9h/3C.T_o+K_dhl#Df;L6pq$`+]InZ<0piZ&.^)f02D2*_8Z9M<a^:f[W!:Rc^A'Z<>3</c--UCU@)m=Z%O:?RP(EKT#W!5u3"RC%F5i$Yj(I;f;gsnCrB!a0kAVT(AnSXFd#uh;]M^fM(id4RdcY*`!N&.E@Mj#)Z2V.#($FS#Ro(&i=0GP;g%h38<mBUmL"ODfoS16d1HI84>tQ!DOu<9I+,A)"$Y*X^=dV'`Ro_*Xa^,6,j)Bt]D>g/(fR4u(>aX!WE9hZ_l]nGQQPSlBBY[4qcE%?>ZFW<r:m@)0gY[Kph=/2Zl.CFW5>$LMcE@PcH:NXi;D%[UfN9!&Hj`"Z)2b1r-TL,Rq!7M(B+?6YWMRX177?3@pi!#ARAmlu78E%4V#IZ`-EQaoi2CK?'XDMejJh/l1&U(\$Yj.d!e[(\e!3t4Rgp71K?JUVjmo[Bf'O:lQqj3kWjiX^Fm3<%KfBDSl,-Ef/T67$hO9m%_L.'82:$lj@/u9/9WbYCn>\!@^1[iI`r"2Lc_GUcn\*[b")UcNo)0)3?8Ohh=hsMTJ1k6>:n*)GR?(qCYrLT[\2>/A/*&:\;Tch,%W]O%RYKRY+<2OY3WXQt4d:8sR1KW5L0(7g-a%c\I']GSm<Tob``aU:HB%:&F7qX'2`<;Hg^gV<^#S>K+&uC4\XV+3m5iiI)]Sn+$%ptcU1)F\J,6qX[WgS[VRWdp='e2psr'-!F,V-@h1MRikhgF+,.8D[)pK>`Y1egEF\e#[VNo'3m*#s(Qs6sZ:G^l-5I`:JO%ZZY=2%.+dMoE13*/U`;$H4P$B.O<UYV88H^VQ-4_`,0!EXH:T_MgQ<I7.<?t@>0i)+ZaNlLKkc[hU%$,*?j_U@+JOAfejY"iWK/eO&uUis%N(FYFOqa!HW\[bJaZIe@-M'r2Z+`A,@upaQ0f"7\g3+&55-ZR!OH<ZH_",&T+:1hXN.q#A-U:>^o:bVV6E/*([g=qnG?qOf,f#B9%^a,ZbLfriFJ=&N/("FW;ak0Q:fsi:M8Xgl7O]s'i^=u=kciC&7'ZsB4S7eUU'=`d`!#&N'q&5Rl@!o6u[4QTD-Hgcs^n9P/oAmA^%2O3gf#b!c(q-6W'rR8,K^d'?!m\uCR!==`q\I#Y^6QN->rDuiD"US@1-WN/iRP:8aW,TO2R3@2GfuAWZMH"k>P=Vf2X3#KSZ`D2=%$SX7=[Edm.mh$B>/eH2^)toE=W22*=OUBS>!<R%SAO\8778[BBY_J`kT!UCe_oAS5d;os1NJtit+Gtc1,eMX<1o`Ri+HC3BjuSCJ%G86!q;gQJMetbrN`(N-;.1Dk!,J5e5gk(C`,8^,/1DLn:3#L=&#]fe[2-XOk/&29)2\e*^"BpY#U2ebm#*oip@\!PZhSerZg9R^C%2)#keL2<rE#S*/fgL0AJdc?FcKPE5>8dX1M[kb66_aUl+U8i6blZ2/Xp\6YDj4`]\cR,QTg%T8em]i.-LW/AXM!FLu9^ZDhIBh,<%^3@=Qep^p!RJS$X\+`$fC@JQdm`XhHkhb,eNH@(n^!#-7^O:Ba!R?G-#Kn]7&!`U7A2FDJWR^@99[.1V;,blYAjGJ\HM6p%4mVCe%$/`QQe!]X`U"46lP1L8rgY\Y3Rn*mNK2lFs"+=M+)&mfj%SB7Kn!$3L^:SIu'9(("9EK3tdjENkl_E"`'&rXdB4jlI'6Z$#@et36%>>;kN,*4>bl@U9pC+QP8909MP#'$u@VnEd_H%MK*B[da5Dk)J*L4cV@Q0;I[MYF<sMJDaqe_4Ug$"Ee1n.b.qP"lpi;m</C\O!(G%l;l\!$U[P7Nfpa`(B_LQomW&.Q0_Z0-5AK<Bh8am4Xl`%dcP#jjXs.,mNV"ocgeKU&ItRf'/ic\gKe/a9$-_e13SlWZp7OI,*!j9%mSYO1*@5E%4AV(`9*fHk2ddhrF]V@:>'.n_a=k2nN1CrONm]2!,C_7o5u)1clMK"=U&RLbic*pq8g9e\^IC2nhR)SVVjpu85U=<_%Op53,>@(S:/l@$gP4PWM[%&#X5U8d%$OIN6("neh3KJJYqks)^C2pgF4+VpBn0dn7=/LtpH)B/kRh64eb?Q=#0s;os3uHBHZ$U$f%l%icgSq<EN\RC[1;m'CJjZM6I9*enaH@_gE66JkQ<fY<Q_l@AV6=/*#!aN]Y3_=B1*)ttC2mBg@+sG&QP!WVUP82`l(qA#K=4ZLn%@[_!d=G#")Okm[$']'Pc!u*g!/Tfi`qPM''DR4*S3r<VX.MWO)d,8_RP8+nM;u2'@N1CPEHY!2SELK*WL\a#Dp-Ie_-K*MVgP50D%c$!5OI=&VPPuGO=^nt^-lPA*KMSPhW;kpNe#"rb"QI[3b>"K7HqJnAo>"PWr87)BYh'6`3(6t/Q;EQNX,B(7[e2%ka=0m=Q$E:U(%b0r`2HU_)oB^_,l4h^N1T>%3.Eqd\I*jO':4F0%BE.l?p>Mb+K54;+?NpO>k/b[T_+,abNfF0-WGn%^H:m<p+^l`N7?`q:?n.Z=u%8M*VO8Q-l?g[smSJXXDL-Ma'rEI(b*=4Ecl5f9Ul*:ro=,,Dp<DnTFZPrS47Q1=E3M::^LVsIe'9nsE2gH4GqP'fb3`1&6\D=/g:%OsG;GYg0&4ZAKd`>]?]_cJLH!SAHm)W%AV`YgJWo."4rahQ%!gWR=JF$:2X_b@%pBJU(8_;YlbmW5)MoV&MRNJDI$'%$T%jb=PU%%_<I@5='er5Y7?C+2K1!C(mkI\C=;hDA%c4g@[,tHC<:e'JJgOJ\\,rsXJ[pMPHkdu6oO%`#ob$(-Tn-O']u/9='el3/XX"(?*'FW%$!'VV&6>%aW#'A]PpCp#ML"c=3ZZhG'U#gu.>;'&dgDJ9P"'Ne+^o3RRQ=/OL.ZLJF`m2r8]@>/WV1V)d>I='OJMgQ)At'LUf*Qi%[7iX$E'b4N3KrDm"2?@@9NP,sCg_;a$V:tAWjK4jqXQ@^HAU/((G+gt59pZK![AXtkCT!m3TG+GkQ._Imd&iXP^O#re3;@#EmLMT%l&_p"4h%O*\t6oZ:+4BCgm'N1Br%CIl*8a<]9Ih_&B:%R8WiSpjm8>@>`)+9ONu\ILinm.HUrVQM7A?PPnDnlH>`OlENrfP_n:$`%M@R=;]NBihmI\$#6&/d(7Ma4KajMfrUL>b.6[m6k5!;Sj31TZAXDH'qL933XU`H:G`qpBK#`b^nI;):0V`=qrm1Y%I,)<KgXjbZ2%dXF$PHJ"ShAP&`a$7[a6@M7PV=9rh;+%%)EZU8@7DHL\JILTcn;1f]?=HE.bT1HYmOsJ!!JMU8\4FXfO\d]tVCK@F1!Felm0;6gM%2_6Y*gGUKuhBHV3PDSMi'do\*QuXLmW!:b"2di;6Ooo2\\HrpM]kO#$-nXE3/.1ao@f1b?osTr/_P)!^mu?:eHHJ4kQMqoU&f!E`%Vo3#HKfN#n\["QQ<iSSPZ,V-BYedEB_CP*\"Ca:/KJZsFX/7dW6q[PoL?>\Qa[^`H-F'TfE`F+3/>[q[#`EG&0u"c.gHF8-"S'"R%\1$Dmf7QiareZ$Eo@rLKoQseXP*Fg#2`E-6V<$,#dZKT)Kio<MNKeBfY1-eV@;q*Xj%mNM'RjO]LTh[OB*>q%/]lPdQ$QO^msIGI%8DV@%\@3Sa=9C?=d"dU\E)t+S:5F(1iD^Q<J$nf-rttE?WCdT&EM,977a@_jY=seR,7XqaXT/16_kPSW24R^ji:<Du3#\Ilc>#I:%GZG3*j*2(*2*0Yq$Ze[3F7!bCBORfiM&1)!6gQB-oMuNUS$d*rd(gS6^:6^\!?IJ;X&:F_p.XtZL^5lJ<c+L\0*6A_V1D.JE]2:[%U*5e`^^G/<,ln;FMujoPQ44OA@&H78!/(t8Q*l+oPVtAU@h)A_H'9S1(]]/^[)uP^J\p,5dkOb@b7/@$(C`6hF_TknP/i7,qu/;#%e^AgV5R-5JP3,]38Xg7.#'DUY+2Xd)`p[C.iTMAaX0h[Vf4Y2Jg@(;;h1F9'!otrFXS2lR*<]%=)$N>1)$YX#aZ'Q:i.2H\^`t"r%6Pp+9*Pt>QK]%t8KTM<=PXn;2+9`8ZTnSGZ:)!XVnp.e@EI!$5l!b)\.A^rr`'O`gn*-_BNOmN&7k0W`LU<'ujm[R1DqL6gWP!o5%6R>u7.kS+&Y)5kXYZ@j@&hJ<gcmM)3QQGDr=[b:=!YK`c'bor7@+tYk+E.*;2eZ'L<tOue@/MHlNC$/3'^4"hfG\j@>L.(BSg`T&%k'\8/qE[B#Ilc?g;,ouf&>5U!\"Q1=^\&oW6Mbm3/B4n9#XS#:U\616J\XVT-d-aW7i^m1682S+K_]G?6u<Ob''$9:35E'n7UVKM%laqhF;k3#\'Vc!:K"QXETo^iB$O.)o't5bi\?uYe>DG#aW^^J%U)*j_^ca.q3)ts%*O`p(YSO)S?s9,N;6?\YdUIl&;fXQ07>P)_%CK7'2e!bf.K<`*9I&<hDgbaPDKdc"ii!RadDGAg$G=.hI_W8B0e`-.UZJ7e08VR;S!Il!j%bZ/77/5',/$e`7cljOc\.^:K)dT-E%6M"CQ(d&*9(="c\I15:fJH0fQ879q^7K*B_kVMt?'JIjaP\n,'`Gfu&B<!iGHslEX(3p'4!:<V3f$Hf<TH#T(2kEJM*SrUSXU(++%8k/bfYUk03WWuXr7'>Sb)M8CG=tI18%Z?R+3807c-A]JR97j8n&9`!5/7gO@;A)6'7udf,Be8fbp4b6XgU+]>9KIuZ/5`qY1I,G%%/HpaZ7n8r^\!gF:B<OI6!G*ut8E7u5;ki!%UKrO)Si9#bCFX<(i2e^OMD`\(3Ssu><[ndb@*pjAY+o1u$um[4FFn#D-jnHSW=%"n%@/]jdCHre;E29)g1#Ed!+lteVgBiFYW#SVR\.\Nt2D?;4bQ@`D&c!he`IBHK(d=t&!<WM+6@M21'EJJC7%..1=+aqE&6J)'OWQFq%L3P^GT_2-J\-Uc\7`U)p:)A9R\J14`Ta,O4'l%%_o%8.#no84U""FXT"NE@P(SCmgmPiRm^tB.#?<lL"oE*(B>2^="4=(p*B)f_#%9S4;"Hnd2k5`-O$331Dg@0b?a69<o9"T/N=]Yg2tjZLsrAs@ifI?!UWBa).;ZDl@/_%]Y_+p,?__-gsbD(?2/fG[-KNg4Hl,Yj01%'[oJ1J5A@Ld%WB,h1Qs@":Wac:pR)u31sN"fWbe.9(X-W[32WZU&>BZgd+O7WM,`aoa?`m-$]4$kqE9/3\W9+0:GXD`*$=57;<b8%+DOPCJQ;j[%KjI=Kp^fGNa?'L=tg!FL[WMb+(FlB_'=\RY/T#ULt)2;;[f'^]"rVU0V1O%d1FZ9)psDd2:9THBPJuUZmH/[1asPQ%<AI>E%FhFIgHQS<1AG8h_jZ9<^L[H`Fr"I@mQPfK2Bb"i!._jD\BDa670L3AU@a0W8XOTYW55TJjp0R-)Aa(hFGU'aU/A1GOK)\Z%Lu*\7&tl]CkoJ(sQpihikUNWcp8]oqhH84S$BGU4'IJEhL1kZJP]lFJ5ge/m2UEAlP?!GE''TaUPB9H.1#QQ8Ad%E([]4RTk^QSA%SlXOqZs(]u$P38Y&5<Rr*J00^h-qj5FoDh<+7()L)&i4"<4Fa,%iJk2Qijdp1q4"9dQ0<k3sHOT)?MW`?=k>i.ZG1M80-`hM$@Fl%Oi.\3r^2c,jAYj)<nL/KP#-\"V4J?nAK6\*m8RC+=BJKl)L6ga`"Gb9,IqQZ*cHQ;&0=RS@b=U1D.)3Bpjfpkp2;e_^%%Y3B_s&t%5%@jH6$5&<'%FG9'm^e][*+nE%+C274JbY<)0@7qWg@uHU_,1AZRc2lLJ/0;$jbdQAa9PEY!FC8qa*?'<bW$(18lh@+AoLsTgD\t%]2bO0@=_"DjFiP*o;&aV(FNB)JOZ!LpDU>i`cE3;DhQqeTPH*uXtqFSZ8&SC&4[4N!+t5PcVa4jFmCP7W;DQ-`5!7sLm,YmKulm<%(r<)(V`D8UJ/55]K,gOaOcjm5anQ[?^fH&bRqYmf'Gs_KlkLA-*_bAkkSGnUfe7l(/&'R#(g&aAf;4LY25heR1Osm:WaXf#JkN(A%k5b32Pr<jl/Th-+#I#SPMWQ=GU]q<C'aMRlMNnhc!?""ed,6*MNN7j$,66<;Lrci/4]SJF?ua@EqZtOs?u#6F@-s.8'?_NND+80n%JtE$)>3fAi":I7dVga5O/P</?$*YRR/+F9h",]*Y'7>C4<nmiXL)a!,!cG4O=OUl'&/=IX\<;Rj3=<::4$#<.H,4s%=r[\N$Ol#B%3/^FmM4`_IY%'ZsJ1Dpp!k^CYUYqduC2jr8e[8?B-s5Dr-M8&Q:XE5).0*E,OH?@?gT=GGH3t-U#q_a#_au?J'O]g$ku(<nJJD_6%;t-UaPHh%D?lMah<eLb`Oce"@Ktu,nYCNDZ?3p<5fJTcj$Pq;].WH4:C9t5Hm4MUd(G(qBXgec6AlEoiK#+M+?%<sjV%\'h)W[.$%?goTN>f$C@**UsM])\JU#@MblJi[l10;+=ZK3T+449dcN5o)r2A#O1AJfP'J)rsM2i\A62(Sqb*_>2r#Ip(_GDU8KB`rQ"FXC[Fn%2YO?[mp1D"q5p%$i%b!0"`YdN1ADYf:`u+@^W;o\\I:@>82]`h3*OcYQQa1q>R!ag4@CfS"(sp+bM[+TK@+7L%]p"W).7g&*t.9V%,`qZd8H:4AI0Nd3_%>Z`^kmWN9md.WEUjuT^L'D^")MIC*!Y'a#R!JT_3YF"Ni[SPiH\/g(`[Dl-BH"7Zj%/9`rI'e=h^!@^g'G`%KBG:N'>@:X+qi"1YRoL?MUPrPFQhCl^hnoTFW00l%.ZNrC%,tjTuKh0&'Dh)!2@gK/iX;j5O]1D%FBX68\>8"?lL=s"2$'7?3;7X%&SuUZ)Os.F@BT]f>oW;P*%3>$H4:@-W>b:F@,^"48*i+KGp/GG]`pTlTG"HE^Z#)?Gn$>I9Ue'Pn@@-01r/Ot\e2-^27VU)nJ^=Z%#kFV'C[_`@ns6tDReA!rYG%ibbLpZ]_CET4",%SKo0Rm-%i'?l437p%U#,;XC4h[.nJcj.OFZ[Ve78h3IKLY,;Mj92qZ<<$^B('g%A=ek[L77;(aDZUhA_KVT9/n.ce-1+-22Kge4GO+Nj_.&C2gWOXSNV`4G%-?hcks%g8SS(2ecdo@N^Ha=\^-:'"3-uIa.\'<8!Q+F%%4i2qE?#mLO\"gu1a!]1l8UU1ANW$a%;]aei]&c$pWHM[)57QKa@7-Ss&QQC3t>(D:QD[>!"Dfl2ZV:aC7sJBEGjE=AA>s1L*Opq%F+B5'M<Ee)/sT'mLB]NAi]26sYR/s'!*\);oc-*e<8EGtd*SY6F<,aie^gS"6UOm']+4<7\qjSrmf14LW*tU1/%u++9.S9i]Huu2%NSIR#XZ-hKn3JYO")O4`5%j$Z;JI`-6Z#Z>Z1@tmAKrP;3]/O+MZWskB6>NG")tfR;We(h\iMFg6ObPL<QJB5GD_oG>3#$UnfC&E%dE1A*4ZJfQ%.",R6`m;LkWRGV`3Au4-OPU`#8iH]#_MpR'[a&X%lH>b@4E;q#Ja#5i]dEkPT&VG5ifgWY2;@sXC!L_-^u.C-q[eo%"K<E98^eA4)19pD_fBnKGrrZJ@r1W%Q.IH#8GIOJ!H(!j*?0mtX[4`5jRobnj/[jTe@JZTmi[(V^Q)0n_bCC.%OWGS4T5YKa(4mW%0V['ITYj:titsY&c,iot!lsSd`B_?UQnD)EKLm]1&CrK`$iLepUj&nl1XP#U<ko;Zh?6EsP_:@](!raXXrB/BBE_(X7LVU<EXIE<%$,s>QoP9ORd%A@S1?!*WroOrn%[lMa^lQTtiADW5OA$7<r^8`GM`t";PUG$7-qE!^L,\Bk,ZrdCf_q9"![SCh-r2*1U4I78X.1D4%5;3+<6Q`OUJe)PVL^#Ki=6`a7,CtYu^_KcL+iKfD7J`'PZ"p1a&L)5tPD)1tNKbgA/h$`@,T"\O88M!U3q6"%8<VMB0Tbgq12(da%-$/R@T^*0S2"D*i;eKlK'XX$]]::,Jrlm.<,*Xr!)Yc:k6h\>>AGhY])d4\DIK`,2$o7f;+S_4&^So85G<;$99ELargOqVH5*\Fo%,:Qu=(BGM2=@0$;q%10@#Y8VEqrBTHEGL-Zd\6;[6=#7X+K5nT?R[?H'oVETM3J5X1%8i*-,bV1f*8G3TH6ZIkg,2`A%C*.mO[Wl%/;F1Zr0'DC:a*Rd,]uQ(ht3hRLNp*6#9(WL(bcMV?3q[2N`eHf)cbbZ^Ja0!9*(eUN'd@4h]S/eW@OPq,mc\3nmA>aY@fQmP"&.F%?-;3=b3c(.j%#$6PKi@MGdT\@0>U!C,f&1NbkqqiQm#EgM$-K:`=8?2)[eh=moVQ'+2uBcGCi'EjPQ"a<T$l=;4X-(2dL41[F$C]%^JheQ&Y)!dW,t!JF\4(l:&]c]#Ih=a_aVE7na9W1%/?2Ck\3"ccJ__m%;S1I&f/d._aLO!jVh<EKGdU>VC?H9VIO=/cs]?M[\.lc%Mrm10Q(gp?$)nJqOqn+<)fgZi!1u&"2+D/0?]RqO/hB^+6UV%7@o0`p%=4JMAn>_[&#O"pV8RWi"fp64\qrE0JJ-`$!0"2;*aKlr%6p'?_QQ_FAi<odAE_@m7W^sUD7%%n;n[f\"84ul24655=-&8Ngb8"p;Y%\aYH3IA`EM9)B(Kf:>,2cQlLM125&n$KQ]@u2C79*3T%Q8SeM;m/%m39I/0/]MF'f\\7oacd]+L"6Of+?Y9,Etnk",tL[-?o\a1W8QG]hM8s`iiSo!DH[@%IH(kE;lR-6Ta):7`B(:j0mq84%i$M@:d4*CLHk,]U>XX>PraANsU+9ESESM=iX23=EN6Z5[Xm8oqBZ)t(MP@h"@]u$5@*gF8'aB:sJM;%R-g;B(2+iF+d>`)^oEp*\%LIn[7.E#X(/]08td7M<q@%gYd0GsM@&dH6[acI!,EB%C)@329\#/_/q9#26Y;A40dh@rSH@tNhW$mt&J-0=6okma?PTaM/<EfagK%p53anW[V_KQ!B$+Te-i5e'KA=lm%(l*^bjV'YB?0d\$f!o+`bl3Ypl9/Y:>S,Xb*H@ribb6cZ_mV/bc>`ucA4<T2pH:A[r5@tg]*%nPJp.'MkZA:F/]uq_qWGacR'-;&F,fX5c=C!-@&ER0l([jKKQ3-i3*["Tg0nc:C399o"-a81AKhm?piZq+4.N?qM4Z`gVcOU+#*"%_X1C#UEqk"_L=%6r@Q"'.9b<CblJ^1Td^HV-V.7'`jc;*@NRO12)qi9J3&L^W[Qpr.,CV*!3&GR8rLM,+NP]s$tYNV9\bb!7iq3b%;oE<#`M'QLK4Sb?O\dU5($\V+pnI;GW!qu7__`iBN@2uF%.aN9ieQc/h$R5]+l'5<_Af)`GYG?3!;nH0<B-o/ndEbN^rh7h#P?#p%A[gGMX-RgqZs4j;Ss*K9Q/"E('aA=:CKtu`D/1:9Z"\.Y*ELfUj[<rIL!+#^@2Q-P&Y1V0O3u9/*l.n+nJG8.0#eRoERCjc=@H0)%l=SM.R0^6TYHsLH:i#NY27Rb"i>R"C(;1:h[T"p`"/*Gu!/Z[F6%brOMk`=lEU^)<NZ!U3SjWdfJJcAb1H/]h-i1ii(.4]k.YGZ?%&?[/X]u@4tA#d6t']4`j*O&.%Q;<6LU=64f0d%YVU4Ojd5q/OJm.&VloG6L3Vbhk9?6eGJb;N5Y_I?[C>\@4*]qXhoC<EQ^P#YTE%,!AX7\/#SA+4_3KJf3Wg4U]0E+_7p=19lBLfnR0!C!_(0.!-R_1"mP'-MCk6KFhfOcG$%"bo/p(79R&Ye0/9%;ISOaTs3>UcbN#W%qP'_L"'&;L8V-BPZD+j*Q+RF.,fRp9.sZ![Zi_c3"_qIfX-FCOYnHZN>:_k5P]TDDk,kqpF6*X8GB@6,''gQjKu'4T+m8I4aj1GA%[kIkRj&laP>TrM8Nd7H44U<lt+Jf:_2Op@N`VG/=3f$t>-s/fE.'>G;.Z$7E1&T-^5lfUKK/7K"#8WEZ]P3(/+lJk-,RrQPbNDrX%X^/iE=%+I-/TD4n;5>M*!WGgC'9!Abe0%<)@JghpNF3Z@#8hFb\!/t*L%o[m@QU7D)WO.8q''3ni"=X^B[D&D/C?fbV8^e3N#bN0%:4s=#Z#<jkp23;l9pRD%#,)'A.op>I[Q$7JN](U(A&i>h8RY`s2mc.lo_PReX9#BVMC`IsK)fRYQ8J#Q[Sa?L]-M*"#mM1KH;TK(%Jotg1\]@r^<>d0cKolp==:<,rfqthS"(+,u/[2:7&_9ij!sR8-=Yr*XS6/FH!QD,D<`RhMX9BoZ8luH[#T.!P"Qe!f(1TO&3t*L+%=kD#sSTJ@iK,7ntB0iU\XNWSRZQM).6UFGg(ZMN9OV_k8#RJEPa;MAU_?iuT=1E1d'@u^T(bLb`nC-DgLXgQMRAISD255nD8._(V%+Q4`CJ2TkGN4>Pa@-*,*3lNbL'\1Ou$BKf%Ck`G)=6qiN5lk2hb#U],Bst$?AsHCffbftWcP1S4&J;P"nSM*M:`=3*"JHXh6mtY7%BeRS$RSCqbM@Z.X\a[;Vns4W6QW`.7=(Pt+WXji*h9oW'@#!U"d8iB?L1]Ni<#UD=iM@59YU5R._7_c]UgYoR:&\X^:*>5:k[9D.%h-(:o3S]4Ig4_XU$GI,.#%uj5g*].`VgoEd3tP$V(_`]tXAUGk^gE>'.(#p&9hh;o.uO1(=CJ$n;\Yo-@5,&)!mE.`M!7NHYcGPh%iX15Z/I!V5;bHV7>AOXA?U:&t*R%o5F'<Ae(r._@Y%n;&5s"X1%Asltj@1(`[R8A7.@`&q9gr][CPaBl4(!9I&u&\Amd.6dO01&l%>m*Gl+:?q<Lfn9PRUV-n1mW+P5WOK2!:[Q;\nfNI1CFeNE7A*NCPS&lS/=n<:?G2g(<)#"#+-?+(ca6C!`M=L-5de`@2gR3*)6B6%RUiWZojapbBaOte/qgtZ:AquP=Gb$O9`9JsG<>s/1L&9V/Pc9&4<9-A)iEfdcAY:!afBEM%^;-a(GnnI)2J"&r-+(h365GPW*J8a%QE[X8?7kP%0M$h^S4+*ZX2Kib1ci]@FVpN50+I;KLh<K[FoZTW/?$Wd_G,sq`ef[d0[Ya7<)V'O)F>0:)K&k(g;,(5Gc*eWAeTp@%=;:Dc=Ou,bL5dUM&QIb'!WIh52ph3L%)kM,L,q!3Nri`4SSYpH1c.LVG+W04FGA!#(<fNA\]#URb:PhR,F)Iis28BI`M(RT$[fWm%C4W&iV3[j$<K^MmB3c1M`A8D`[D5Il;Cb6tO]lET75p;Ti@'"RO]1C]5$FZ#k/(rB,(In\VG!#aL6b)=rlkR]8^[/L:`ISD8V]5c%BI$:ek8]=t#%t1uc+R8#8Q/<8UnXPl_gHf"_qQ@V'od*d%VLKJgBNG>U9SRWiT-\lXfcnh1XoCO^ohA2/<+G)2bd7.ZPe_CMM?7B%#>=Tc7c-2C1lMU,btqlI!uJD#hXS<*gnMf@#iD0I&,Zpu5Rtb\<pg=#oJcXWG[A%Z>A_en\l5KOC?0b:;J)+3;2T6?3+^VN)_6YV%cs`8-^pa0cW8O/b/Y\b$dCgBSY!6<X"8<!0dC5#&3\<q[nCBYC?p[F3)5qLMLa0;Wjq:Aadr$1]-=^!E4[nG3.,8L;A6,PG+EC:=%%D"^FdNqB8:.nfGJolU#9pFcOcO<7OBNcgij^=ZRMrOqE81N'PMO]j@-H1a0@"NK8q9ek3d:ss`X!4SZrtW]c\(3C`C;kBObP7MM%Z7mm1/Te*6q,jKHW_Ss^=s7He<"_:qUUPXFPS.j7=bQ6E-LZnZ&p1tu1j)mOC*8pPP<G767`L$sVt?r[o'hR%a0/I/A?'*a<Qa2d%<@'h\6$B)K>`rQK*WM/>4M?oO:Kc<P5fSc>!O41]3gXAsH"en1LpF6p&91@i<Ol=aLF@*CT(sOaH$Bq5SJ0YWVgN=N;lS.fJ3!/X%%od8WW`s5'f#d_e>&*I4(c5>sS5d"8'AbRW5dXmgra])nifcVa&2<`2Q4]L>ie]AK+i)g=$ldA:?mB5n+p?G$,!eK9"T`)R1ai)r%iRW]NI),1=+?fADM!WKuq(31!TL+7kTM:@r38cKD<,S@D'sW>EYs`?&GU@6hL^\p&?dO-gQT&p9,pSo:\C\S?Z=.Q(")F#4/nT'*%8M4%P79">"\Tk(:iZ=\m6:FJ`Ep1AR*P,c$&"SYuL;oE9L+8&`l>CuL&R)$-W)u)J=&MX?#f,qCERRq4'=:S<"1q"[7Ou+_%(DPP%[&77Kgp0iB@/HU-CN8J?<+pngnQH9`Z7Tt.drD(Y`/T/qdV[^"[Dj)60U3%N0%;r-Oambe^jQmCX:jh".j[\H24"a=+-T?<@"S\.%8"5.%U0TMhSrWs-$t,]g%X&CY@'k#*M!re"Rf[-9eSEt7;odGU)A>_9/!#eB@JDgL9sf%;F&VQh5E*Hu\<mDGHYe?.@ZGPFIaD+U%=kr$t8591iK;aL<<-V>QZpbD[ih^@m.-@A^Al?&HCN*Zkcj!2AY-YdP>BW\+PE5;n=kQNX^1W6CYqZurgi.kBNhGCKMq#`QKFI#g%4Lrt;)4o]i'kokd/_-_@EkWkP2/g9i"t4=p0'.&bq"K<W!Ghs-nV`EV>MMIT^F1*KL!iPpGstl)i<-#YpkqJ$kec^"%nla5^OP8C%qV(us2=Wpo:`[9OG[[dE.16VSK=`<GfWYG9\?NhdGkX@.?'f*@h4A".iW^In"8P&VfGRGN>k>[ha(4n>H,2'5Plg7fGj9u!>SqE\%_(I-8/l&GsA>]mg/PcOA)[%>[X[:W-V!49?O;5-uV#qZ?\.'*`;B.9(3UhSe!O/]FKi16sBi-J/NoFhfHoF#\%#1_3Tqk%T9T+M%%#?*^Aj`*84g=1j(AP1L+Z47F'/IIGG6P_r?:lq)_CHN'$`XTu*;dB`3gc$o35^.%^(,Q+Z"^nuWfM&'OFLfLJp\8u!_1;FgC._lu%)Vp#Y>\>]&.XM8+J4\.dr5rTo;:%mWBbG&>b0.jN!>Sn$F7WBW@=Nn?Me':,m&779F^X(b&h56u0*l"Hjo(X.qM1*T5OQGYT+a\M%Q?0j%/R="87V*NRi&=sFEj.KoP6=J!hEcH3p&PBq2ecK(jq7e1-c*%sGc*#7.^.9hmUnN!el4YYH(-jN_7BBe(r8:u+'Sq]Z.8qB%:mM/D9ot\&h94c99c7XS:)D+o1Zn6X%I8BGgB]D[jNKcPmbn=*G,5kZ6i!uq0StGFi@tID/G\lA8@*ts<*Y].T;2dRE9'mNjs]P[%#6c:r!DUeZhnk,$WtI<YjD'kb%%6s%7[1910pg7(6+:FD!@hlQU^9ijEEV!L!Q^XoSH8^o)M[%D)JPR8WC+&"@?MB;jq>67k`2pT%@5>nL:"Wb`mgOhjU]lhg<:s;L78X8Y1dT8XRjl6LdK98M7^kCK!LL5m7\$9r(_G1Y@j2q:![?Z"MWh*h%mqC`dK1jRD5E3)!5mH1%&Y6p`].tCTdZot2BZbt.9B3B4"&)1GWcsDDa-$"jN&)n=*K/@4Or!QM1:ll;oOZ`Mkt=SU7-,b;M4Aad^dr*1)1C'(Tu`cR9oq-Z%AkH\?(e1-Ukd73;E5X.q"cfC8ZGrjch%b.53bJ^ql^U2I6U]onS9(i$i]&n)[gG/o?;l\*BnEUSctu(8:",C7Rn?j\gl-KEI59n:%0HsPoFZoDAE>1<r2Fs6M4,$BT:%4K)]'\adC"c6h;b7@3S=@l:T1mckN3K:Gd9$8fMThsG"=Z-DVQacb+nVUe:2?Yf2equ'euP"T%]>[g`m7m`=_$PmAW`jl/JGC:*>32Ju^M."KQ?MAXa)Eem>[[gAlXF+6C&!Qc#i16C((FnLq+b6P?^;Bl;7CSf+0=&I2M8nfkaX"O%&(C$,Wg6\0(#;*Wl1Q5Nf'44`,0-0".h8ct9Xn+c9%_]4FqEl8ko+MW6tnG2DJNDmI&5R_6Cgr/a\`FR(bNsU\E/BJ(H9,#$oeWC%9`0n*"\3MhG^N'LDY>Vu/<OO]dQ5g@bAQgg6PL"Objano`rd61@r42">KMSqE&<QTE>Fcb=0(jR1mlWW%oqR[eI[D4W67k/]2Mpm%'ZRh%&D$1R7a#[-#ggM1plKEOPejpJ#1&2u'"HlR%#n3rlf;4\4PE/*RKs/2_MgCH`)BZ\*,e4O_Nj>4.R=AN0A@0CN9ITN$C..>%"<02U^nZ\d6paje!es"M.2=![`hZ#H0pZu:N\KWKVjnE\E7gT6c;$?r.9%'r"26FKE<MXC`V@^q@RVW[&0d;o"<i`!jr:abU]A7H%kNGM_@-aK%1Cmn3LBE*#3\_=D42d/5\8[DA;0">$U$.I]7:Z8)Khs-5%Q8ja:4U`D;[GtY,Umh]0@n+Q@)]nn4ut85Q889Oq&F$]%$$1+7*R)J/nVN0f"Qn^>2jfLJopLYH!Y;o=4*]Dsrnq7LrnpY?oLFp[)#o(<iW0$K@V#6B"ssMDKI7Q<0p+UiS'a2B+DW73(tVJ,%=8YV0@Kf9X)?XD^^E+-3FKI9tG[H]W9>hD)1Mq_?<h.ZJ-sV@KNjiH5nO=s_@2N74TMfZ+.>(IDGetP*nU^?h7R-j4@.aE6RJ%3B%LL&Eh(9sZ!=LZ[P=s*K=;BMe^D3Nh7/]m>$qld!gi)8:`Ddc'b;0f25!o`K_dTs8u..!^HBgLMe_%=hf_]^Ic$'l:E"A?nS+lM+>%@"Vt-AdEF4@D4Ye0WmWJQ)Uq8rrCTWYABgH?-D36psiLWf.hH?G"$f,NaIQt^P5@,>'/#De)FG?2I+;FH--3#8^rJeeUlGdJ:S$i%&qSE]M/#S>#TZTjN5t^-'O-D6fJg<;BA%+NZ]%RG6XI-!GdHh_G4h"6dJ,BI_$K>RPpHc+K9?f&MI5`8Ud^ou4-tuPbN__u9TmbJ%O/ppk!gW:`Mi&=Ti@l!,7]_0)0Am"S53@p1!#mTn!(f_4E#VoIPTgD_O<7gV6Ju)Eftg_gZm&(4J\hF\#_?n3Z>HKJ8P"D?OZGhe%>D?b=Bs8kY5]tUkYTsM$9sW`EgXUQE@rh$L-NS/"oX3^np^Z^OUu+*e[6l83r!nubUHPe29B/]9BaKnBq0\Mp)/ac<I(2^W+DMi1%1Q641P/O.@8]"-N9=SSnP8`4a\t9+0(0VI#JiW#mUnmd`$!KBaKpV;]dcn!Dh>^$o;3HSlfR6Hb,`Ci6"r&0iWftl.Kr7J0Lm5ok%X,Ph>$_%IW>*=n4P0PcNGf!=`4\8Hn+,2#ZpEV'(5OIo+NGCZq:.O5e(fSl5[^tOi+YB@Da#W=$\Eg@j.W>45\?7GR2X<N9FN2:f%6Z)'?*_\X&C"-:%4X-&6?g`@UhTD#U=)V8?_r4@li$])'_1sTT2C'<^Unl$2=XZF[BeXLKYBH9*?<V6(OHY"q%?M4kH`[CPC>+GK%Km?>mK,/[[.-nIR1Q^'>YX-*:(;dIu(bPA2geYKk%&oBdCeT['];60$C!:(sDop%6i8-a^%F)\k[C&7cC_;JS,Um>idf1cES#>?=%G@E9sa4TBYgg;u_];=T;p`dq4bgdb0PP\dPQUA'J$/.p$R_4@6@'_UVPh)PP:.gsBjk8+lIJMYIr\QIIP5)>f'mhAi%R#XAE*6Lj%W(r2fMP^%mjXBcZ\M$mnV2#sX%#)Rm&ip<jiRp"XZa+(XMPZ`!p%9T,.-tGhJ=K1sZ25LK/"L]h2lVEr+/Ut[PeY4b6dLh&)n\Zt%Hc<&<1gYWF'jY)'n8Renh8EUF=lH85Kdn3(.]kI#iESm"jlF<_1$A'^7TTM&Dr1H`pMnj+1HfX%=sh+apf^mD8fU7%>.D,Y0\:q1%cmZJb"#&/SS&\cd;6kJ<YcR-J$;eB?`6id:rEA0uQ(o95lOn+qJ7Vrp35g_>XN^_^gahBBJ9_Ko#flq[*Y$t/e)5X?NfN[_4!G[#%B@5`4.bH6992I*p:kdA"9\L>rPUeQp%MGa.@piARRl/2^/20!e%N@1O(>)rpZF1T0A#>Et(cj=0gB*k9?.p(H3noCt<-5r*[fmIU%/PS7fVSFBdRl(AQ;%?<Oj.XWB'^YXs.Ib"[9`a3L92f4r_Uu4E&<$V``DBM&EmdRK!XD1OD;#bm("&^,E+4Q^D=QVfgCh)D"S_Dn%@Z>%bg8`,Oj1<7eW;-W@K/__QXTUI?]!)UG"N-F`E'%8sG=*<1bQ9C)6"ip3LFA[^K6\8k)sn?qJm%'X29XCbDuuHFQkm3Z"g7c;%0cF47$s5.H8.@Q)l^4o2mF/9a!O0Rr-fDcR3h?aU%=t(riG\t14iBCm!Z-GO']'pbOb+=A#kUCETK?)>*gS]-+[,%P/%S`@klI&+%>3Ne$N_BsC!2DG$4^c0:gBp)O5EU+U%noqO6/_*t8ddp-8@oX`(ta[DV=]9TMq/.sr#6?i"Mq,eWg"WlY2E`?=GI^R&4)i'kp[qb%huOn52F7tb84!]6e.(8S($P`M<gS%7%8;+aO^X-!Uu:kZV^U9LdEQ=K&.dNHS&,^m3rZF:=]\!&2T3F''7^baHcD!4)?GT1J08;%%p>RrSC3,;K+L(HmO5Js/lX2eOK2MPc7@'e)g>G@,9@r-%kiK8ndc/:\:`V((Ql`ea(F4j7q_DSXOFlmCd\Z#??4gt,-Ucnt$T"k'%TuMc(@\X#_plJ+F"pXLnjFH8:W^%%V>9].2Nk/%93?V@p@NoSK^CkjSklGE<<Z+'YGY](<!@M>5JKB%M7RdnNI50(NNj!DQ*j@f-%bif'T1!utARL[04NR.b/23_Zu*0Y1rFGDa#"6P'7&UH\f7nO8U?kf52,JWj/,g,,CY)38jBmV2^8r^\&%s*9B//FSVD&jsoa`4*9%QXQ")=7[WEnSDuBj5F7Ih$K++Y]ur^CrjYC>%n4H'T3PR/`!Z=TAWBFKf`JRMrSYr%7SsehD9ti;%s%Dl"YH0cY4E.P6"kunJDXf%CQu4QSQ7H[=92Sf-4Qn]_MN%[?'nRTPR+3\Ka=>`kr`_UKke+mM1B>ELk$C+&-4Y97KgA."c*/Vb-n\h!=l_T1*XNe(/6)C0Q=7B%/OZhEbD6F;f,20V#)IeQ#SR5u'U'(/D&=DtRQ#d'TR/Ii5jLss!/?[D6u[6[9gSt>]S$Q(P6E/'c'AsX=gYdT6=N5K"^!+WD+XuA%K$=KLe9'M,;ZZ<2;Dr*??T>`6iVePX2eNZ1X0^XIm+M@7P`3V2qP!]^j_JF@l&/(#na>T5o"951e$I:pBDCK6]_gN,q/gV]hL5FT%i1811Vouoiign,je!KBsJ:Kr2cB:-+_,u_ecn`Y8hebWV!@H@23@Wg1\F@QKhCSs#phKbG7*rCkU3C/f+"l,;:Hq8,i=da[T"ElC%nmB^egBI5#DiLsp]]c4.&!')<(VO1&djBQ@ANBMos8<`5r=o7MO-)7?%"J<\!7K2.s)X?qY3L"@+[5#B5Ide^+TRccKsFOBc%&uX%rF1R@,$]0S@DX5(:qLfkP^sZ/RfaQ39PT7MaB4ms#,Ys'5T9P53#d[Qe&'<Or(hhi<,0Pc>TKk6W-Z583kYR9_pqd9P-oDIY2A'_%h_,b\3<(Dj:S@peKm1T'M^<km5H,:=3*-/:pi*k?3J!rL!cFeA"nqJE$l!#XYmgm-h&UG4L_VWA>;27#_Rn:9p;J.?0YW<3E+/@_%G'Ugn81g0+AsPj8kFo)'5MW>9(`<9HkZ`)<^6RmE=g;[5_W_@)`HH7p9T\?P.MUqo_)tmnSa[HiI-f:n?`c4m'JKg-!7^d8Tn0k7%itqFo?U%obYT=^;MLX*ij(BF4n[QYk@i:KngWf!5\JZs\_`$B[rGcQ6'K27B,e5klYHb'nQIVTXQMPQCk$.ZKEkU?-`))(:$gl3'%P^0P,b2V9npQ7^H?"?a&=Q1R/,bA89'S20&+7GN=ojGGb?C<`=Ec)KLj6'5M1;_rY5]H4+EO&cLY:Qq+95i5->RsArFku$fA@oJ]%U@Tm:O_9U5'cnL3\i11D],%#GRMiO"B^96!p\J8Dq46'h>?Q7DI$YQHrSZddT"H1LeTd?gBO(`J)/iTs0@$bdRmG.qGeUh.2?p!o%S$T$LXBAg^UB"fTl'(efl>-dZYKkFZgM7P/Q`41'YNET';&g7r.I,X#d*4o]XVRh(Z]j^;1]V%:O-]fJ4PO,%OTZFU*\B"QbOmBI%1WtjqEIBTS):B_39th=5$<Z;^^sg8KID#[pGUsuNh=;K[e!i'8HhZftCD>104p[('VfZ1AKQt39A<ml6Y)uXX.DTbj]h6nuhV%@N%`R%qUlf=r!/!PnN]<7EYUV\-`2\bEnq7GTJ=Y\NGH=p@u$H^npY#.[&SqZ;N>.A5Q4rf"MjVOQ8"q^>[q.dc)?T/^?4WF\C;EVp"%nW/aDl^'ZOHQFX<]T+5>9)A2TkL1fJ2&,Z^EO%6rPB`a>`c\jQ^,TDimA>ft!i@%"*G6DLl-)K,o?Co<T5RJj]cZ,Ph#5:XqTOH'%^Y!g,HK(@.oA)Qud-tqr^SHZ)-pN8DI_K!XCr$DY(d3-,@o&N^(&lnbr,PA9n%NdbrkjeGi4]$=i#NY,B?tVF*uAVE+=s=\++QFW%S2(pkEh9uCLJm<WlKlGJ<F(5:SqrGo]?cTJ=&UN$^A%)5j4WS]&B\_aesk\9i/V."2M&N7mf/!C=-pAp>5c$94@'F&A^djLaoA/f%rnth4%s7mN2fg]1n+bmi[lOE]9!Wpf+$MYk^n`gN4>/aubDuVpEUalXAUZM8r;U2iSj32<=0.D]c,8Ie]fQ-gQc5O#j3;1a\<0QF%4"n[8Q;;^3Cfeqj,3\;uhTtf^Q,q+a<IO<u=tVFAkk!p$g%4ONNr\ttd&<R;-bJQnBbLUJH^f+!p,!<I<K6jq[3X#3^G0kXNQ1mD%S]:U*X&/[AmiHC"[`?S]joT/rs1QS+CSuY@$E))'il%<P^D)b&(ZOu>':sEX%QbuP.3FU7D?obj`'^%\r]a[>euRWQK-QaWibH4)%CjE=t3#t+bSo<0r]X\!eT?gQY^(.,doW_;H0G!.pTo578mW(C6\6Y[ZGD#*t.U1%<!=V.rSj+;Z>+G&IgXZ>`\pmTsjf$<Q`toQ(%QP[7ans#i1qoBd0cCS;mSh10X2_Qgj1/T5r&!u&BQV/tlIU%?3?(Lo_dDjeD3Vt4%"4]]qa`>(D]_^O4f#utuIT5\9])?U>ok(Q/%ip"q`,ssSj/`G4GB$_C)k7qlM`Ol^?X0Wg#cX%KMG=Wq]TL',I(:Eq\`NeS/!d,'96aZ34I3e6hD;]Nr_gpd_]\7(2/qN(pm*"oE%\tk/!!Qk"c@M(YqHEbmhd)E1hC2B6A&?9m[B[ST`*5pg:eab(PY,88kh;[dG.Fc&<a(GA(L#EI]Ae1Pcm0e"i#ItMjS1fnhUU+V!%X"hCf;\[BtW_WqEBo*i5%Me9*dI-;6_@i%BJ-kbHL(,\*YTSU'R>*%#[P()lcS*jbOXsl8]RG\4YH4A.(4W3b+"u4f/Ts=]7s2B@%G^>BWq_WYM4PG$r5_u;A.DV;.L-i#QORG*mbFiB<E<T_kI./rum*3Le]fK@-c?J$f$aDXn!o>O/Z.k%U$0:)^[i0K#ZT+"u:aC-d%iYKN0r?"2JS*f.U@N>]i+XE*"X-\J!%89XsA$B6&o5q_Km?aK1[QcALRie!OQS?b3)<tC^F9O[O*U*o@jf?ARlMS2*N't\"L7j9q%*r6(fHODs9hSSRO<=A\Eo.hcZcnGgb?`hUT:KCj1JDReFn=a*6ok][Af#oX*M]\R^/H7G3D9oDK*M"aBQcGRO(1c:m(/e4Qo_tmf%#8D/-],CoY:Q/A$fB*'t/N:TL=OrK%5V2;K9G$00]<a5Wd,qo]N[8iT>n6:,1$gO7^\!00^EB<Ed9)hmfkt,V[`cVqoBoC*FTc_j%fB&ZCg8^&r_In,t?6R'g07Nn:Z$jG\@C4iRfdsQZ"2/Ue-h_FSEhc.KY.3)]Fb@,V!utTuJoC(DRn$F@d:773$HAQI=&UR;1gOn8%hn2EbeX6F6pfu2/p"%I`I2@H*ePh6`Q':@D>b%=+V!dL,r'dO;o9YrLU@:c@Up"I6PF&<nWsMN]hQ41Pl&@kJN%T:Chu`Q7#;m'j%BCOnsF8Wm*Wkl%/7a1f5TI]J!G]"UJ<JmhqHbf%,jl3+<+QofSMtJ:*)lZW@gFgds?S9!pGPneNF*6K9"\#KN`h3UL&/Oj(oBK*J%RP,lB*!!T_;9ok:qC:."fS$6sfE8)c"Kqr&&@`?2+MdSR$n:o#A9%>'i]M4^ZMo2!lMO:nL(%ZAX5/A<QZ.mrdGrLFA9kK,_h3.s%hs@YpR=hO3^iS7cgVq8A(h@W0_B/#S4t:,qE2nI26C8'6lXn:T;M3Z?a0/__jgr%+)GWm4(7-(iZ?\5#i[&t:+%3]s*M%#<GfP%i%B?,Gq\':*GJL/n9?4"_onouI6*Bg!Ar,H5E9+['OdJWNm2njY9]s%J*k.?OimX8!Hn\tIs#MTbbT0IRDp7"k?^U\R_c,j]T4TCuL%o1(V2gBShuq8;qk1Ojdko\XS9p;-I^\=V%=B?_H.b\t\qI/:>:Z[:g&5'Zh*_r#t5hS#9=+.Rh\h^Ru@nF"\B[K5UOKD3rd+/ZsP%c/m^?:&EPOhtu^".$jK(fq!KioCi(L[hnY8q;'Z_^THDkCq;b/UM1eLrUeRdQ_.NqSX&rkDZ&jr599Q'hD9Z]b6RLLR",.PKCe'd%gXCLn0'7@B4F)hORst4uj)6<k^\boeg@]jboKZjbo>Yllp>OWpajX&"l`7D&df]E`CpC3?VShA^cajhf?/7\mYaS7Xc_pIi\o.MS%GrT-fq;BQQZ`h+=B_:iTh/hK%hn;%B^3J],o?"Lj"6j.IRK)FDp[1_HT7;F5h]8odO8_?AjR1iLqs_n;D[6SJ^9_ccrV?>o*j#A;%ab_\EO)Nn45$q[0oB^=@mt8sdqfcCqnD58EI.?pkG@,etI]i-eqV^'(s':m;GJASe<$-PMHf*HRf&%gt2a2TdiPdlcr7C0!ps%9s%s7#:4[i`8lg)Y\4m[&E-^&@rJ5J;d/"T5WQZAS;aJ+H/,Q#iS!T"-NCJ,:$Fqp#*043u5J(=`2!(,%j%mS'6*B2:_dlHQs0:S3s1%Sp@WugO8kf^RgBJGjg+[?dhg-S/am@h\q!LqsM#lMgP0T^74!VqZhWNj7*ad$=Ae=qtAp@fQ1d*\!uX2a7o8=:EDX%M`YG?bpW)n%[bKtp2@i"KqN&Ekh_fSbFgHG^n*`\7o7bFQKlS0GIa8c(&*9#TqUcA#qd5:6r^FI*7D8Tl+"m!XI[R@h\6M5!g[^O=b8$<6^3d0U%`7k0VkEF^j/5b7%_^!>NcJLEUrV2RQrEgH;S*b,:m7['FiG+&Eo)%<><e#AoHf+,g.;-]YDXI)6h)@FZcnh>c)a4%<ETW+#nsA&0%I/KJqpksnT01M#Rp1kpb_Ra*QO8_4[lAPI34fq27?)rlFV:rRZf$AiXr$9d9N(iS]7t:<WpnPmqmk[kf:1.>?5CW-g]?bL"aJQ]O%m:Xml(@Spks39;JflihHgX;p864)n4ah?C-&=i`#J*c:>2s&f_J,&84T#Rc?/F_N.-\)$kYES/B?e"uGAFnF*='SBng[Fku@VIO@%ran:k@?4/RSkbo<h4(!ChKgsVdg+e/If-**hsUQ-[h02iq`-[6cgJR@8*^%;<I`nb55k>IhZ[>W;%NVuhYt[hkJN?-X2"Ttg>71[%Gp$0*^4P,B!<NRAmY);%#nVFO":4+_"B+r`rVh&FrKCi0ce,KCVjuZ45"jt9)G)/fU_t`pfTm=m-(EHPS'sT+$<SeYr.8]lI^XH#%Y3gl(b&4n]H9(I4_cHS+Hb68T%_pSNR"6D&-,[nL,st68:&,P1BlS'68'30l3&ukoDW0d+HMOW:,n$oW(EIBoO4qDtZuWEL:C*RO%0_+_*e*1d&^%-(JAFfQaj`eE3Hhb.:f\02QF4S+n-JiWU:Vs]cp(BY0'YeG^V<p6.#8#F7VOm)9?cpN62T+o=d(pg2GA!(I`Y,,s%k1dLf]!T,ZFdoJp>U?"+&_0D*T5]'SGul%'3I1(@XhK2=g_@@.Q[SV2OfCRF5:qJL=Mf:*J0kK.jMp)r<knM"NXW;eh.cSQ<F)W=%Q>5m=SaOXqcaL1^g[8+?Q8sBM!#^9.JTH+O>YGql1mr_ESRdUBQ&h!$Qg4:f7N;f,_H,7/f%4\Pb51tCnj<eWmM-DsY8ncfIEgX(%0L;WVRia.Qnbai>+#`hQ@gV\iri@@u`><;fC@T"^DH3,or2Y@4^*0kU<]@ukZEi`1$LSh>*.d(pZ;fY-X,q)WVfpLQNbC'b['ndV%"^tur=D9p&f@=^1=F.LVX^R?7;AamaSZ^+;A=p7rHbo\P"0mO.7*um"_5Xb1$K64>ae50gQKUSQP'"8p,fItW_U_7VHnV9%08f*>%HTNN<SJG#VW$F7On10pH-:9*'KbVSd;*=ijXW9Dm3$J'=H<KuF\jGVt;?XuP;_J9UJ]M;;PA(RZOkJ3++iQC]XOp=sR+(YmcPVOj%,fc4(F@GB0Q@oa9r8k:V4*CQCO"BM+:r:$-9kRLc=N3\Y#+[4%*#fb7YTl69`o75PB_?>EK>7qg8J6u`\f9:\-/@O[YhJ0MVc-K\%nK#)>Xu.dbR^Hf;0i@LMPr335LQ;/&A4f#s/<XTi+I]Gs0-ES1L*3$pd:p5N-iV3:*7cZcV55ggHC'<TO?LHjbn*eYj=cC<B;W7`%SpNmHk2N"Lm4)`4Vf_k5[L:g7mOoCla7]9r.fO<Wq=EF7H;PAr:ON55W(G7]7Vg`9.'[*.kb#!lf7_&ObL"<_`Y)LPLE2N@CV4QE%h6sVIXIS/G=FBbur(O>HCn9ep[%8:Q"eknSZ@heWlXmgUIkL0Q(LVg(-^5sTT[DF)oNF0EW`41$s2qb4cbCd/Y$0&A<?'&PL!oD>%aU`)GQE\-5DRJn0j2A5NdL3'j/msd87I-?oY9]@)hQ#t.>17''=X,3X!b3LUg>Oq<6r-GP`2<oV18bKfCDV(tLc2[8F'Q/<lJLAo%HLnfBB,_:LM\utiDE4-<J;p+Md<e^Sf</JDmmqi,6N+>@PKeUUEP5[)<Y3Jd)EVX(]f0=t$T'M%LHu$[AR9%#NaZ6BSP$#K#>_c<%Y*D;V\]m,qIr8:J5;oD)B6Wb!lK_=92#i[M%:Q1.=.s]$V>2&p,DKQl84F"tiNpJ#V%[2'1`86SVgm;>lcIc7>Y/$^]ghOr%[*Hc%Q5`WYQ3E>Xqskf&h[m`^VjD_kjnjp3]OrA*7W';Il_S@NiS%dW298BsCh+CkTES3oNUeB$Is`Z3eT19Hdq>%Sj!0lZ0e0\Ff=$$s%f?-VP6UMk/jQ==&",l6B:.rGumDX=a(NquH%I%kLjUf06X"W@;!XdEt9,eE%XAcgB[X0kBL@X)kZhg`dYrF/&Cq]`K)VaIJ`O!'G%)'lPU^Y)-fUis:g](ATZ+L,,``q[]!)n>p8/otpOh685BY!&)cIa14mDC)<K76A"OPR`/cNNt;f$Y&8"kO@hDY4AaO!0*8f[G@qU%M0]3\Hf7iR:KQ8e:1J_^n=<2c=3#tW__1*#GI3qnK(N7Gde2cijo%*O$3o\P2//KR/kFa-h=B`8)D%;o=2hiWpZ51b,L/J4k."B-%a,fr;?gY.$q2!oZK0V"1<JAD9RG2d.okQaW=F2&.r[XP2[B<mh=2/R_Ch+PRb:@0aYMZRO&Y3qP$6!'O`1=nQ]NBC][Q%Bl]Vhq_%q2`D4W[11g2Is6$C4g$&>u**OV>qLST=&bs='q5a(+c)8Um77e:-uHGgbZajC=q%N\m+^38@a-61XUA^GP!B;DE$$<Y:9A:At(D:%IsAHm\ML2HNaK*2ebsuiNr2&jk3G6s;Y+G`O3g2dpTO0cc!RUg*GKf(gs3[DmiOQ>S[=ddgU<iH(XJG7^[9%p]?WlaQeSNX=Ru,o%6Uc\o.XrNS\1O8ufY16I(s(=5,fdT%H:<2B"?-tta;`jm_Oj\1^%hJ,HYkmY'j!'S#u3^XnsnFujqBJsf/$K3"23:42Q&cB-&#ms%=m\Gk8mec%gV4!<NFXrreeX^s!lCbumciRjlWugUC7^$!hH[-F#X<O`f@0##/^rAlJ4`bOM'Zo_LL2Kk@V%RNh@cG'.*[%NQet"\%SMlDI3G*GZnE\2*2ermqLWB5&eW5(;Q+1CmVh+6#+D/*$RO]]_p@bTeYkF[_Ft+7+^4@-Xik5/Rem0>]N2PPll3sOD+9pkJnLn*B%G0Eo:iV=`_27Fm_K]>bF+n''e?f/^N:tFg;<`hMp.^&`=ipbImEp,\oM>8\D?YK,ojlp]naE=p@R+KOS8mD0DSQ8s(q9)ko"=`s:%!K,@RQUNp#L4aNj6UgV>ju;KI_OLA)]6rkoDcr2EZ9)b>oq+%sd:4>L\YPiKm@Zi1](YdmYi.O-L!Pq9\D&VV/j:@VmlmliL3qTH%Q;3["/^hRV"&&U@a[0R:o[?q<X0:-I/Nm7C^(\PM[6dSX8L-N=?-BplD-(dX-pj3-mu?ahcPN)6X3tJkFI;@]h5LgIE$Y"nc-eOK%j.bXRZq_+VJ@U[Efq6KfUIPpj<A.S4hF9@M?iI(6fC)#\Y2mpF'RF*deTO63IK([cYM+'ZbnT-E>#ae+[uF%AEc)<h<MN_T-%cai%H\JWf.JFHbHUfje!;fFDHp5"Zd9:%RA7WYjQf\q\[)[#4I!./M$e9@U3!?d;QLU^_rNC4"L;rd.mUG'H9@1jHNEJ-?UiEuQGZ'#n%=PBgiR^F,;2n>.`;)oW0G#:mS/>pZuqL(8lpC!oPmXeRuW96Ko^*p.6ePj,kk&'DEOt7:C/U^$SUji;Cp1rf#WUkSCOtQC09rA;c%9P>YrPe&=d*>\D@*t,.89I2&Tl476I%8a$P(%oa/]JIjclLi>'iua)ISa:Vj4T"QK[9&^/@FiJuC#kY)IFN!3O`gl%?*q4[K;6%`%B;M'[l8WDl3)E?H'?q3C5>UQ0J]4h@al)dp[Y^b)D#O\&+?*=*BQkH"Ama0%U`-Wk26s1p9^(Y02g[f,(D>pBl[-9[fBrh@jib'p%_>FBHA.D;hA4gq::V(Z6>@0V^ZL[h^6B27[#t*UO1b.rQ0D!P6D8*N/,i;[IGLu$$b15a/?cBF!CT1?>]0#mVDfZh.jRZEHIf3EQ%P[8jA6RHS>C\?b3lOrp6?KuRF]"93EJab,g\u!h>W`-`@muGO_6s["eZ*F$ueYQ"-EiZKQ3T'I&a?"G2`aQ'P]W6P&V;p%aT?js9%"#]#rQQ"i#>`s`QGuk*ar7>&SIPoY!nSl5SYJ-SjG+b1_q*c#uQ%RL\@CtR?Eb4qA106O#4TCjsYBdBpYZfd5Y*FJm_0[sdil.(0%pTb=Rr0W7fs17#no'dZ;/Z59#h-X$.iJdHN_O?h]87R[@J9:9`Wh#GtoCrbjVB:mFG<)*];$W#,pK"I3hi8Y6)rc%_b^YrVMj.9A%(!f[b>HpSE^"U6_R87%S#E>e_<]#9;&!_A#@EmOp9hMOL[9@A'+2174W?oSi8qb_)ORCtL\tEt!MLX5n=%n!@?bU<hdQs^W7#n%"%kHCccY&,9Zerc99C+bbQIjM'sr_>,K\jac.U[AV/Qr;sP:i5"^HI^5<]saM99Ut(03,G?2^"1kiJ2JuEYKNPR@M4V#,loLkBc[u/%/m'75lSi$CfTGSCJMlK"`U:Tk^\Z[Kk'SJi=["=LV(16c$^[fLb/<ReVZU;^:uf.$Gkpe1AbUOoX,q"I?"n')DL[,kF7K7Q"eP69%-Z;Yu5Nd,=nD+B2Q"8$6]5&3jCN'/%*Je:ZC!S_&MsH)S"eHOtmF7-t3P<p=+3MX/KQbm>'J$S$V9dqST^+b5MVDA(m:&",a*B3*%E%/Itbe>#MY0>JJ[;gLsHTE`a<8Z3%%hE_A'QM=_(Rq$F.p4u&qdU3Fp!R:=GBL)JkdV/raDPs%IBKq@X",:fB74'g[;4BtgGR9O%kh7eFIZ$hjfBgbJ*Gp@+Ir+33eNjM&9E-$K67ccMoq0YR#k6:W&BK1K;PAiS+S<OU9uu9YX'))M2-%uS?<4+Fe_J"<]'J\H6G9na%5':gg<]]Y*+18smlBCgb,*$/iNUlXdZ^/-Pj.WUIm9,tPbi&0s.^&,;T.\m=ja[:;NNK7:hoC%`GKY)%b$0A.gPZ.NZb1(X@BO8/%$g@$7XM-<*/cd<ub5@omP'u,Lf!Vj%QTWg8&n2KtnY>,<FXR/<\9u1ao<mb^p7leSE:XTWA4"&UqCO>j'd3!>E]ML-k3K#G>,V(q%V:>'B.eTM8C`fL/h<.au>R&ba]WPhLN46*5+_SpBB).ZV'@+7A+jsTBrcVM8)n4@@&p2<>dG:GDcH=/\e*?+NgEPQZ+_G>/qtjSC%Zj8G?TghOfGUfl`*e9Id17(1lE4Te#)$enReOP8RqHMd*>PiqV/CV-Fl_Uf92iRrZ3VL^DV(BfU>MQOJc2.BSD7NthMP,qJ`sq1o%#?%NbeWZp$UjhiRH:@0(:dhWk`84jkY@Yq$SsHIF=5VQqk@Ba'8"D)3c!R().1)ZK5ss[>[9],_DUuHej^sQ.7=AmNq3rug+BM1c%D0\pW0&EZ:mJ,Xp)R$5u+J]phqFW64J.?dk0!8hnIP=)s6Wo\N@mRcNQ[.3)I]as_eBbJ<:?/nCk]_AAckk9edUt*3)b"+.Dl2)Z%nlOfIn``)?gIn$?7@!n(L@@8QrY5Y;Y@%UdHK+e$,hFb;d%h[.SS+@jH&PK\XO\KYX^;%%rIg#%ma,"L_NiD*AnPLnEb]..VqmDP%%*7jr/pc<%Mcd9:+fT$nGM&jgLTS&Zp<RNpPJlWc[/AHl^L5VYe?[+Gh/IJpe';m]U,9&]oKpn*J,F\S/p^o<d=`:#YinZnp%-Vs%^4bKHU2/N[rO&DPPGdm:?@/j*D9qn4gN,#)A::V92_k<Ep#c8:^&9b=C]+L5;d2J-gL":iEfG1=488UA"Vl@iB#1Tm`-6+eX@J_4%J)-+_[kjEKrIRY4T=O[=#C[h%e)oLj+$XfgY)Y8Yd$[i*#EUmrmpHgTmCA9A(2hBF[Jl)8kV09FO(Xokg)E/hj7'M)RIftB_j[:4%rP2kP@!%r@f)8*WDXd7S=,H*p1CsD&#u*X.5CU/aj"R49U8b]6eL1JKX^;uKrF+lCO]^\[QM*@(SS)t-D\^8a09I-0JIWh(Rd#`%%E^0N?D?o?bJ]<Hc^n):qXfMHo,Gp\ODg51=Y%%u.l>u.SX%d+JMgC[Z82OFa4sE.KmXZM&c#]dZhTe@l>HTQJA#nKNI33i$rNnc&%H;T>HLcDgi],u2CQ)K_-N58.98HFb.=*aZ^A7t/+A*<,jUT3#e"*DSCGDo^+K"ITB4gIFWJ@6ug+F"4(XoFEB9m<`0OQio0%PG$K%fVnFA)?Z1*1HH`Y"9og=&rKGc)iPCU;Qmfj#upte;qkU-/@`o-]PTlD)n*/?$gpIb/Z]#us0'<G5qDf(:A9t:&`_F%p\s\t*`"gr%7l(`E[u-Bc'@uLIoT+!!*0#70L5Ah]fub)p;(esVBbL"F8aZs6hLtsC.cP:Z>b[:gIY@SO!]VN1$?UsD5oJQWl`oO>-u)38\_DCE%op`)`[_(L.P\;q[mr/4g_`geX);4-o<mQs.5Q@FFq,+2DV?E?JF^G?RP)QJTfsM^f7'%?#lqGb1bkgFROj@Q\[pNM_+0QdRmT?Sn%&%MP(cR)B'#KfmY7s,`mX?:4qVnE>Xf*@DASTi5tK9dFeU#Dp2c0$&ro%s27#.[?o:Xa+]^Y,/o=2"Eq1k"i.F#?45>]JSOK;j)=%=5UM#8Uiefp&VN1OF&]jf-ctd,7U"/#)*]HT]#$fUW5d"&p>4T/!1IVWLtZ==JFm/,>((0%kJ$+&p.3.]@a)-.!1a`C6bJ:0Rli_%oJ3VGMr(brV/bN&Z\+$1`=JO_-/(I1.?'^mX-EW88Wf*+N_2q:O]h]F:H=#]f%4!Hbqb4^L+7^[AA/!UV;:W=^!Dbs-^_hbn=G3M%\o!\KD4F<Z]Hl33c?0466k5NlVp3J"bt/73`nKZ>Tn?s;h2F+?,7AjEqWNF<:c\/S1GuhIs1Wo2k+9qJdWp8c4cRn#8F^Wj9mMZo%U#"Q"TEgqV1NCr)@VTp6euuhps!q`m>CNQW)ej;rRT9>7l7PQkr4[QrkHCN!KDL"Qgc3!Df;[`<eA&b(X'!FU5T-VH/%sg3eb?<g%GL<.Y83s*I.ji6N;BKT$jLuVi?^1%#_pH8K>PhG13@>[&KtD.4#!QT[U,YrJ8K^'UI4oY;s.-36@Irl@Y6MH+_s`N$*Bebr(L2d:%?:\!8mM<3l`]V4p<hGU#G<CP:Z5;NGo=6*_=4BE:2_9]k8.$!K0LE<NO%QLpU=?Rj_mB@-k)_=890<l9]8r;+KZjTm3i^L>^A_[e%8G=^lIE?WCGU5]"-$ObF^;?cHhWb#h(=<AOqR%qF$)7[PlWZ!+poH7Ni=&uk;E_Zbb\h3,\c7?/Z1n1n'kYV81=&2A)jS'IqOE0m%G^ckl?`i55Gd,>EN1K<?m2s!=/5-%RW?/eI&W(O"E@S11@mm9u,iAXcIuSF#OJ3l`;6b2cU6(@[6lE4YIn(2=-1-=L=7S#qj^-+M%eL?s):]-p;.)"^mr2e%H\0$%rj=]1-iC\.V6XSfT/pC`:(_Oo2_sl]\f:RN[jXXTsd5&Jmf?R0Z]Ye3l_3<-)IV/i!4d`0hn#Gh+%p-8dMV)>X$:]%95m_9)WoZXt<,KdiGo+U!3QhX772a[IR:p0QL!p)Yj\V,[jIIo/j^t>02nSQNVb4c>.It)OBP90af.O`j?lLb'^%HRS^PU]((TZZa0([hpVch/;0t@9X-,&oUif\a8.&Jt:f^&?.u'oKlTK'R1Khl=kt;iG&R!EkTkI"=a")pj!@C&mE:qI+XZ=@UgO'%>!G7F'kRAF1at<)7X4ppe>;5/mNa`8d=.ObFMPJ9RCc1b>T=a?VWRm<F*4"NRG[E<Q&h0'^=?!Yh6tZ-ZqVs*(0Tie4kJEZpO>F+%D!I0hR^9#>DhuOg>X&)\htGZ1]DL<j$a'r.h!?J)pZl#8-%0nD>q5QW)"B$G&Dt*sdKT;@:N)ghjb8).0:UgGn&tKmUoYZ?b0Gbe%k:cC7:#8#"Q`I=Pen8LOGb]tTP6L-MPhnCNhW$&qYn>=EQ]GX5Ge3CT*`)01S+4`"#CLiFc,J.aeWY5in$3kX$@@qthmc:AmaZP.%FenZ*hB!*.qPe9P4;R"`+WK.Cp3jWGIB7W`_D;!<1`kA9=JFP%Ccmt<^\^+3?*dTd)XA3MHKSHlYB=ceL$EgZlEn9&g3=B79)=V!%MnF;!Y%1UoTtdH?1gN/9SD5q;8IgWU:p\d@Y4YP`PK^Is=&.s9fZ8A.]mhZjG<V@HQR.ddI))3<h?gl<B\OB"$X<-I13'TPe^%L7%B5B$:hqC<i\b--6YH%"cDnC4?[n$FgDX$o\lLoYO\'t5nrFRV>l'?IlII(htr&\2F-bDMrdIlu#:qTfjV:?=3Be7*3m4DuEZ2pMr%n&a/O<R&9Wjm#aB$S-S<S^,hoZrgd75>LVCbuL^7?;q"feJ8dQ-`'^;ViS^G_Y"f4PhaOGFM!ei/oNu9/q"=Zqlci!SK9C:HdF:H%otOg(Va-/92><PG!@?Vp48[ZIC3Wa"2p0-H,n6CpSKUnB?`s]XWdYu4pK=DQP%hD-mep&C4J:1"ZhC`,ahF>>8p>;PV[^FDkN8f)%5M,T(A8bUXlM>YW*B]49<-%TmcEC0?DUo/r;s;36Wf&7fh)54-Q)d!?Ib-RQS`tO8\!Hg5T:bn$)G:??RDF?f>d]:Ip07&0@&EIA%\+b6ZLn1[WU%bM"ZDeZ#HdJbk)bYG=g=4;I<i9$PUo./YV"o:240@=fem1)F/dfjmRd/L=/CBr*r:T^.Kd2S!lg8e4V>CkWC%:eg%;@;X[-7,1`[X4fKUbNC3GI+cj0C;Hj\'pOrc*b>^pMV!4A\Uu;ngcX6iI(ILn3uhoF('%Yp@MhhG'`!Z4+WroD<87@8>i_GcWk[J%o3]$Fd-50-r;P]\jP/q<k0o2pV]_2.gP:P^ruqHZ[u,-KE16@dFT::dhdpqY`OF=.IdW#6MYkTd>e^fu9:%r8eqJmS^NKQO%uR@S%9rV4aF:,^CDJT9X=oa/67f6_&B[TX[oDL7"dqj14(H2\ERN>q,K8$__rS[PR\FO3FU[+K:j3$nde`j!Bin8%3KY;f!F=JjYOpuW5%\SgkQB)t*=Z;.)090b=Tn_45L%\4A^6_a(YA("+2PI6>S^%##!@$u1af3d?RTf7+[?>FBD5VLK$ITR;UM-7O&oFF!b&%nHV5;lG@%VlN<JpIlN=ji#S.ku?M%CGnb^fF+89_G*gS\iI](KcpTfRnN@>rM+5n<#UqFh9scu=ZR_0qgU1:+Hs"SR^YAmhZp:Y]!-UPmK\,F%/r6XdiI]rg=FkcFSgZ6mnZ/:8Bfu?-H@8Z/mmCVAhg#1/[kb_%5@+6GY+^0U3ih0%pC4BHXo$`,?A]O0/o!lW?i+WNgH,d+s0'&O%>qFAsVq")KGO8hR=;WRoI,036>h.0,^0cluCXM!1V2Pr)R_kf*QJ(6#g<s-iVH*ut\t2$fXBuZ)?QG(_b:=Beh2cSAm7-63U7L0;%J))X*s)"RmPlKA6A(ZqDoc@l4JFAj)^?&[-$MaJrf?&KM%KEV5GDFml.nf4)@-hdm`hDhZg(/\r[QO3Xg:EM,jth<H#\38FrH`tm%T^?+`<OdB_rjP&Zq_`A5oQ$O^mr/&Nm<1E0Na`=*Ga(n]pY>7^WP!Xu<;sn@6UI_UHMHpIn!:#g?O)Xmad'ejr/l@I_AI[X8?ERZ%<a)SJiA\1DlWAPL6qA':`o93,]nFDc@DstGF?e65[k-Mh]5(k<;a%jNB?ot^Y'bISN@/XB"8qHrmE\Be]DDT>d,h0#WtdNRT.l^t%,3b0]SDQ,OQGFQS*"ZV8=@o^^::CW,O,^%OBR',+0R*)*\_3O?Q8];[QEddKiO@a^JrJ]=kF3AO:Q*8cr4^L$X/'Wc4.WS4B*141%l=K?*TMo\.XJ?q`m=BEGlLa@*UslHU)VjT.<qjc$'JmZ%DN2ZQT/O3e45KaR,P[;f<&n+Bd<ehTjuRon>$>=)68*+]BD\c7%t]qt%If2?.Y-*@<SZfd70!9;?95KB6:;NA%gYjT[doKkSW/Y^%X+>=<)G+>7W/mGPTf9kMV:pWMY1lU@<>@<_CQRu+?e.R1%pgHF4'60C%GX%k^r4tib6FlOBiA8;A$_4OJ/K]0p4ff%!1WaaLe(^eM%t@SUs4\lVYqbQ`r78\=i-6nbrNdqlmMk.-6G$.;*:s)M\-1f2q5.V\%]6.A5JZa/'^WDg@YLa&k0B_6I<Qm+s/iXlQGhcPi[g0oo;\`BVs6<]WVG/bL=")Q2gclo!RD*MuZFIc,97M*sCV#Pp!er8mW/1ZQ%#Dp9.BNQK@E+Vp@(S9[lLHl@<>A&`\Es[&n_$]Ffn4W8DHCdEJL4n/QAB6tLT@@48>%+3.Ku"O/.5_@*O\Ym9k&#.2q/)#$9u$MC%')W0[5HW,/h[6[^P;gf`pI;8lB$[1f["ja_L1^de?!@V*<qQ(>3r+?;N.n?p`m03n4dLmhmL378lgiqE<6AZlj^=%FXH(q:>],LS%q&m?5)'r(<q57OYhIC!8nq`m<b`>ite8?eOHj@s`h4c9_(qCRZ26h>VgN&aEr=QQI]4<@%^0FgQ4m7Z]LWK/trc>t=?&*B#6OS4l%:M^8WAL_Y6o&AA@F0)@OG;5!?gP+%R?D9Or1_?A:H8oE@ib?UoX4.cMQ+n0Lb5Ai[M%LC.O>+)sC<e,6*&_od\^3Oa/\-"HI[LOI%[snN4N^%eE`4W6"YCh#_,DTqf*$qLM)QVq:+uJH>'QBVd#?uG93aTO9br>YHn6J$*&P?rkSO*?mRAjc]5Ls"p5Q53`,gZ?>-Yc9A%"iYsB.7fu]5.&_+h\-*+,QHUlDg98j.!bJ=?t@]X<5(87r$Rm]-[i?Umuk3+Op[i$Y@gG"p/s=Rej^B;>H!T'0%U1`VGTCLM\][.%gesElQ=>\*fD!`2N3>D?o0*T^.3=L#S6pa+ONdN^]on@&Jk?:H]e9KtWG(gNe.iBkkq""T0N\h8q->L18u7H[IU-TeP&3g_VQlKL%<\8](Ysd*]7bJejj)U]IPK&2fIf)bmX_n=[F%b491$4d8@q3aRCfuE<PqT>HDSrl5XAU!E4(_tKIXW84^G%upE!i_^*.)H(Wn4Mo%OFll'.l=o)p_7!/er];(jkVX"AU9e,]TW6<"N-41M3!^gk[kpp`mQGoYd8KI*S$,\0UG+e$&'LNM6KZ^-D"im<)`?.as\\MAKY=8%E[%$4@XEGE[Z(]a<6BEC.UP@fj4WMc8CMQu]4+;P=32W]1%3gk<r:p"&E)'jVC0#\@u-0G"p$Mr5&a&t`)qY\:]NI3`j+=6m2631%R,??%p3trt2HPt5_GMA4M"GGSkmERN)(nXTp[q+%]m"HS6j4!E`OQrOrY"Yb%'n"TD%!Q,r)EmrN/_/[C-O2+#F[fAQ%[4VVa/fd%0/=S-qAoi23@=/&,$<Zr]h:Fn"qU9dK_Z6G:L4GO9q_JLj<9X%=4'l!as`;.P20RC]1pE-]1JZPA5r:-8q-e7BP2!_T"r&0]d'n2%T,4b#J57BSKQ[P3HuuV*?93AZr)9=6-4hc)Q\Xug5*-n:%:CR)?fS"o:2[X*%;o/a6^%\_._Y.JV;94R,pFbdef(V2/PLs^>9BX#%#sOOkV$XbQpUfbJ#%b7q2V(@-H8G_Qg%Fca'@?R?;4N$1kEV6WUZKb,KH+DeZ#E=mok\pf$%Uo=kf'mc9no$SB45V$Wsd9c&Nfi6%qiISr;LQd&eYSFCGPhZhlLH3jn%uW\:!"N2V`p_<kBkc9kFki%W;\8_/0BRQ.#irX>Honk>+&V=Ei_6fP#f])Kku%i);jY$gkOl,%UL@fpUn+JFOL0&op"=CAH(9&th"NdThkr4'$/o!UW9\hmm)UP=?BZ"1ZT;M;kK'5(B4AmhN]$%I-hrWR8;Xi=NJL2%rJW'#luP[k%XnYGoZgf>FOG<s`@g3RJpZXiCNip4q1_tK&A+,Zp:QVe8BmNLQ![be+r3X+djsSP'i;L"P-(:IpK![>I6p$m_fdge"+n4]s.(&ka%GsX^"5gS#4CVeST5RZ:gFQfp'34bqDP[uP!$S.gAY,Hm^&RqmqcN=X@kXY3JS:3fUn\C25AtcJLKIl*\5V[WY4+?gSQ^M3Is--Vp%C'=c.%ar`MbfFt?MVM=/+`FO3G,>b#+KbERK#8u),MNOeS3W@ppG@FX2Q#(ZCbO"7^'j[QGVP2,mip375I))#BCV[L2.?Z/jOi\P%&/pI94pLG/0$=;7S(d%'JJDoQ:;;]mN:53ch8M"DdI1AC=F9"+]@_h0Idbl\/2=H$8@r=*?>*!!f)2*rc#2au$S`nh_tHEtQ_E&u%M8GBop6U5T+knOCi$fFr&Z?)Q\F'ID;&:\g=,)&Qcr_-Y;+AoSD4(fl7:O=DRP$FnNq+ZQb$$aDIM,LZP"Nn_Ms)o?T8/u/!\9pn%XS6uP+QZ+Kds6`0c_Qeg,I!MIA'4U`936]!;P667E+=4ZKc"M)O__f,rfoF.4p[DcQjYJ8o&XMoD%nkgXTD5qH++Q,?,eq=_8c>6%M0L;cUA0q):'TK(M3R?6^C>$25fK\_nfbiY5S4j,C=,F5_P"d$_BI.bm)YJ'La``h.,:^brbe%_nY.)N]`1(0bd_7ICLeOb1?`2(%g#UM6B@%*!$r**V(S3o_Xk2fYke].>_Qj?cae9*gTQ=`R:7afhSj=/cbU/)t4G1qC/N@_[?$HQZ/2<V6]'p+h'&>9p*4kW[,l;9[%3HX3tFM&E-RN/p.$p%$')kB@Z%S.)T0`1Ol[R4Q_K/8(9Iq&p:aO>LGe/]:6^%%>GO>"ReI8`Vd*\NG.#`\9:"[!fc'2'Bo`cnp4%*,.;HSqaRfL*OrD+sqr=,</QUB7(k^AYu%@d9oIWc:+@4DA9iR7_7b:BCq:;1ET,s_*Wl5S2,lVd4pjIU</k)%*-r%fUhUGW5])H%TtDH]%!#^Ec.O(r*VE,R)K0AaWk/pe1G[Y.*=4`tA'j(>VY(e\a_q*u2I7nJA?srXTce5e$&AmJfB#`UO_+kWj^^0oI=KJ\g`]d-%ZYlVq-T6+.:%"5@(f=nQjtFV>*&s]Pk.8HLBL1s88Z$!oQs+c_;,\<%g\,d)ZYWAYo=E4:3tB`WDN^><^BC:Q:96X=i5C)Z/2.^;%&=<]GdgoM-`l[6K^UbP.SDD@h@"^6VF2aYM_5V.&roQtkO?uo\57]jb.Q@Xh=h7/iB.f4%JKH+tmjJ%9JV>iLpdXDa";?D<LY$;-%jC^B8`D/UK1K2;-be:&NM6YeI<m+S^$U+n8H]j[_RhT@Ma04>?$?YPLH6.KN63H5L0f"=-@eE"$AOsP*='>_a^][D?k2WF3ru&Z/%rQW:e7SG@jYrCat%5IPXmYHtI=7])61kB@C^/bV[]s<n5^^6V_2rP)QT8Wp-4M`IaUNq>G3eED04_,Xj%.7GU;<S;7>T2R&SiF3M%7+3BW]A?K3X[d8ib)3#56_V%SG,EU33,XWt;p!UT65/F-UeYkuPhugAUlW?R&lII#N]n57Vg^BN]8!6:/]U<h.Oq%&V`8Q,YVYVi%Ohdp>\A085nrYYtD(L`AaH5KQG-S7[]4`7R;:4V?P2\f_jLr08;r$V_4>QK%q)cHjMrKlP'R/`<O&F_hi/r$)pdUV[h`K;3ADD)4%LqCjZ:X-p)_kK5eVkK+=On$O/2#em3&E_SZ-mNl?r4I#31')iQ7*MT#qhW?SJ/^'Q,tElV-k:tEbu]tcUZ9@h.*KB;ZcG_n4;5UW%#,2qQe-i`I)lF16RU>-WHUj*ZL:33_5=j)+^\mLh$=+L:53</W#g*o&PufnN/>I-:l>G*r^$rZq[`=)6$BGZ.+j"lCQW3L>*%b,#%H<s_IKWP>-)'4o/2nIY_q`SSS%nGYg7_$F8cA.nMriu"biV]IDB:TPl<J5,JI(0b#W\_eQ,;OOZ%NL`EkBeFe@!pn.q/G2(./WdX%[eXl+pPr]m1X:c6E(dtTo&7*$iC!HRS.FdmMZk*dTI4=!"$05l=?W1),0*)tXr%Z"/Yg6P%Rir_`qsDtVq7[TMAQX[ZCS5@i5d:Y%fT+!s*bR<i5"=7o2TMDt12JoHa2!b%BP4"K0lO_2`VZ?Fk];uD.;[t"3%cP"?N9QAoU8?@e3Q;W]g?WrFrnjf!HK`Q%;WFS';Uh<%ZuNnU%+t(7G:'d"PBOgq0UhZ,g6mO%q,W"PVnD>M[M+%[mXL^,@$if0k.Y;:e88lH;a\#OiXF9W*u;^_WmY;[24'GO0oM"?gV4V<%UdARtb=K>FRmBND33UUO,IKDDQO.RV>"1!K1R6bVo#2g/.Pc$$^?3nS)6)#eJ`][9s0t80+<d)KNZ2M^2sRIk1IGugRN/RDdJR0K%.U8VdRqX>ll=2%`HJF^S+;HMB?"TQ52jN8UE[ojhG3,O!E1T.I*kMA!WGoRXKpejU"o61_g1RX>7M,fqqiaA[TA0G[j4t"0e]4h)%G+fg$SD!>jn@JoM30:C"pI4.AkV,dqpEd`;*A4k.d4;bTUa)CkciqYa)tMDH]gPD/p'`Ao7<%*\TC'Jc!$0Hgj*\u%<rL)ARJQ6o%X'WKBT:ZhhrGo6q^#+(e33@XeYsbFYhmo[<[!,9FS*?-cNQu$;K>4i)U#^6jIX,.IOd6CH<N6]FG;&,T55.WlgY_(5YqTUAS0Zh1%D@>W/LV3N,PlaugXk[.b-+dFeAt@o(Ht#X$*I1[ITMo\.+4\(58p2/9@J;8WGDa^]#BkucC;0r6@\qitG+N6R6WN,,Ff0bPVl$"[%]ub0e5iu-EL7OJ7afq8<[rR%j$ME6J_gkMP4hcTT?[W>TG'aKfG$EIJ45Dr$\7V9A]uQI!pt0?cFa>$ZhYl:%^eR1UeS8`>pSojo%$Oc=9XOleC.i\:TjlD<W.7a3Q>>f]N=Y3'U0tl<*f@\X\F1tPbMC>foQ@1[@8m'=9aH0W0"q,*E;slH9C4lSbBW4-6Sm+(LH1WWb%.e04"X5H9D7`:LFa*BYqlc`[uo6X!QpJ.!Q?BQ8V$TE1lfu2R*SQJ2qEK@UkXtTDZ\Iih01O;GAE..iV^.""2*BBpXD[f*(HA#*e%f3N-T^E48_?TOtMbP)BgNV3A.-r9=,flWGS@E-Kfo<SOd(N*:,FFLcBrqF<(P>16''D17M.C8::Ep9IBHlV/`4##*3ibUXd>.hDr%1WlTdCMMo>+_,06q&/kQG3!YKl28h@\@loPflV\RFIn\Y)._4lq,uMI_Ta9ocHk+fXOgTddtQRu28a5k^K`gDm-$"+l23GVZMHB%%VXkaipL`IMZg%D=0:!GJ4cPOtkI5oSd83bQdg\5nnkJ'LZKZs`b?8H+NJ4WoZg!46_Rn<0SP;$l`l?3!o<YZ11XDriCOkJHcSV-:%YCY?MZg%B_986p6Vp;12bGFf6YL@.5q5'._:I\rY:$7j9kM9LBc_g;$L?l7KR:Oc8aQ/dU2P"2-?-%A?di3h,a_I.ZJ=cMShF=F\%&JN+B*k_B_bn2Pt.C-=Rg;U/NX7I9.W-0oCHZc%975R,dI+d(>U^i^'H/dQj'T6WM;!kRlKtsd&s$7)).?Z*8oX`g[o].qV)VqY=%+eLqJT)8X=_B_e\T%[&Pf9OJ>[YT=VT"fL)>CoY<Fbj[jgVnad\f2l,c2X1npH;U*<:]RO\I4]W3t]bnUHW`8P0"FjOY5(Qi8O4J%ejFX[:2"8?(n3Fo-,MH^;*9^tj$38OkYVb6kUoK1;C1[t4$31RS2fFlYE6DBQ<s'Mo2t`lrU.r^cXLtg-rTX%kR]&-g1kZn>b9j/%8?j!sT2+aOIj3^)k6a]-kH5QG5D)A8Og2[+8/[/u5o`b.dL\.e9S1?/"'pC_8riJZ(6O`sq*^"qJK(0[h,$E#4d`C<S)?R9D`#tc%m%U1KAf2&#&ht;>6t#WFG?!]DOnkB5qC%$(&pPFA/2:HmPAPRt.uCVh/I.G>4L.$s;g<Cp(MR]-@Vs0om,#ZakDE`/F'b.j_KY8.%[fU#KQ2Xl(?Eh_9NCf6V_n!H2&=*:L.iqYZGjdLXM*Po0jc,o;R.l`?&XIZL%/&:UWdDf[Gr'f`&GO>8ASdr^!YZHkiVhVGUka[o%B0NK#9WLofL2SN4kd6ec1L<7X^cPRa<tnFk/+5QV@m7ik@?BtHL+uJK;>4638n;'')k!*,OU\47iK!#$qS.#/&K;4nE&[U)e`4;]%(SZnQ2st:?q,gA;kbYp(lkB2k]U@h,"hen7p8iYFp)_@LMXo-TfIu$>GjdLGm)'b?_HkYqbqVb#-Ac#/\43^q)Ek@62?,?S(H*$l%Z*lOijQeRW@"c*H+(p[;Hi)umh*16i=1"N<]iff.6pNgi8?Bd2lp.If>ASCC_=th:Tf(VrOF_+>(LuR9qf)22qc*2BQ1\S'bGkGD%gq.L@(X'><J-\_?%pb6ujkdsGVD/NkKLI]O\TJ38gb5Q8`o=N!16S+f8eTT?f42EgDHC;AB@J1Rk=soD_$(Z=%i3B!.>BZ(2&A-0%.?\.Ba^mVm+negUNS$lJ.Y_#UMBRhg(cTLCI/+h.;hOP0p%4"4^l5K0Al7%k)i?B=)iYLlOKg6AkN!mLbY\5WaMW_Y[fr[Zmd[8H%[_,.6c_Df?<TjljSuh+Z**:.n6GEG\p$9q!1M^('h+]Ui;tNgDorD2hH<n9HX^9Vj`DT&bh5QW[c]q*_^PcNj-boApPPB//cgi]6%hI/MCrOVOBLPmH43UJ0STt@)M6_9NIq/GT+kC]EQ4S=+KYo`B'1>/5&'qG0QS$0Tf"$77_Vr]/<:1FV,%ND#dk3_dqm$YJea`Zmo%''o6ldll!#iI0ob\U8=u"m#[--Nd;r\q<N#2[L!K7M*5Hp<C92k=NS_]WUFhktP:Bhm_\;_0U2&3iAm,SLueSmk6tt[f&7phgI<S%O"LMH/CaB3[K8KI)Qq*g]q$4,::VBjJZu"/!:lJAKXj.NqYoU-!m=`Oeoor[bt'E9WC'k7g*W;XO4%_uDLM"3o_)4^T=F*ogP(>U%VWmJgSla.%3`4qX_Y3,]Wr$$eMVoWa:.b;?3[C-p&Mg;i6=GHYRo#-i.(&9:)AlT<p;'5f,TSLa6dR#.S_qUA2q@FbX$RH7]JiV]%Ss;2`6IUgENC6P_%rk>_gJ]+?A967^gna2P09MA<4\CY-PJ^9!KDi_unk2ND<frDT3&]>>Y&^),_s=?3pKj_H-<E$DF^L&QHl:pr%-25F(jOUgZY5XBcOm[!@39>^jh+mD\]<BK;hF:Ug^E`&!n$Sb6Zg<YlXj,i<>0I#+RP-SIC;IoAUU6cja#lX4:K#6&2;=R<L<hl[%KR&^bZa,]<\:Z"eKBn(CF7_:4b4Ba.AF0P-G3.nm,8^f8<efB<i<g^[)L^q'=!%aU`*]r>2TP>#ac-5_2cCnJP21KR3FJmLG)k*$%jiunH[>-T/s0B;b%_UsIJi:mbBdc_jMGujM]_>.^o\=L&S-h7+qRQ/JQ8d*q1F%YGS7g`OWj-r)EOiDk6Q-p>q!U0Z)u73DoLVZ]%`0`Y[N%'=;%AaFCCPRjU-HQ=JRKMc5kain_/;!,#hl7:<`5o=G83)41qNGOmHIjeu#EXj?SKJ:o4GRG1>\q8.5S'gs>+!3IYX'cr%c&6l^A!:L*\s=Te#B2*3.M*WL]Vrm(a:i(b"qSiC/+K-2dd[ajb+h+Zr@$Q*0="=M.%gCEXT,=kq>@l4Z[\3XoS[OlGa+9CaNLp+%;rFEuj<S`X([rbrPg@Y`2u?,@6Jk;)fqWplhliR0;*L=J!=..SD?C)cE#'l[38dfO=kjI?n+t9SPA=cS6V[<XT6k>0`23j8D11=7%$hk#(jB,.KY+LJ!4g4]VH8h)_?,(?^:nT*uk.?'C.qH?Y(N_Uc\F98_U?&<2oa?fhiB11?^$?IXPA:BkqU&!>+Esup^J+I+?hi-*%hliR:?,,l1r?cgk`91F@n-Sn\W/gn\TC4OhheG?k]7/]NB*!3B]<N#,r?sAqLsu3tHIjftUEc[!1O.M)r)LKdDkIGbf.Yq/%>]TW%qcuG$W%%G?hph,bbol14qR_48XcV)*_7P0T#:`tHpJgVXKdY1BA>DumY+P`FMZ'QIkB2N9ht7ouKB$>3Zf@8s:/A.Ooa;RJ1!e]6%l+;DYk;82+6*6sIht7?f\9;M\:B%Dg.t;?u<PP5SXsSPJ0-#Q:MepkVlPI]ZB1U.NGh4VHFEic=pnkR?_u1Y6oQ^uHYPO6Nc/J]*%?hb4QE4#"Wn+q`RnhfNXqKMnT?hKm_<naMIN*'OIn+qa12g_;*-@OK!r)LK\hW#P"80dIa^8Wd7EF/=-aa8C[D<V>82[mIe2pP?L%*XOXY]7*,h(9Ua;S;a-jht;'3bP,#O8[?da=*"FWCs7,%_UP+15Hslpnugk$nm4i$lPD/AFkV'<S5piJNBZ%-IcJCPq7Q#PGr!&(%Wh8U*AH#PBm$suX=8bI'3?.9i^Ap9+W<#AufS&_iKa0XJq334Rf.SO8:)SbjkW)G>a_4p>ot,\5fp.c8lfSmc6a->\'0XFOlPE;.%Z%u03;=F@8.u)>@ifrp.KdXgE*I55?rPDq7o?kT*HIjfD$)0K)/Dg&XWl%O)Y+L%e]s%9dB%N(5Y$^td0HuE2o"0A0RtIOdiDF0(%BR=DB+[`.(_JmGKk?]T_dJV5;I@kTJP#KRiFq,%qGGd$=jHu)jG+[VB\_'+Ac+CWE@!3Ro+__"$$C&@g]=eeEQk:*0hP:AGCjpX_%-TB:=]25icm7P&iI-%JWPg:[WQfO&f[A7R%hYVK11MA@!g4m/DH*_`Y+5cLaihcKkIfAV=>?sA%=K!Q1InlHUmJ#LS/>8UkruUgY%Qf_NBo5XeY[s__SqmVR"o+UY<p\!VGki:uF/&+#&J(R@>+!)oreA!O,hnf%qHL:AaI9l2`'.:o`DHC/'cZe*6HpUq_?V=Z`T?ktu%H7rFr>Pr@_mjERah<sFj@=70SCG.<*&&-J-cUq'5$_%<nIX4j-[MCq$_UcR&HaimWRI(L@$d66Fbl/8N4Dn_6(B/(5%:fDBQR#>S%hLsUnrm:&Gm49A]*jg>!P-lnf^U2AR=0LqdAppG]n][STV!eRAQiE*EOnC"M-gt]+TI4rA5MCSa@Xg?(2ci&h_..A&ALVVE\7hsl%PnSp#><C#h-efSt\[892S`EULVV>9TD_CtjZ:NSooC_Ke]_c[RP`,p=a0;rkFPZjoiS!BKn`B>DU,l`Y>K^htD"loYYc0:rJ8dQ4%;S+@WSJUnrQ"o#PT(;!3e0kB7Dl<AVG.M$qBTN%);r-*-Ru><?Q+NT@#+;Gi^.R!*>E`!N_U_-gs%9/hRDbbiCi"$J[JSMI=JGB6%b)<bh5IK\#5?#X1IV,F3`_/eB\,N\Ca"Lmi6l'RUL:P_-PW-qNF/2rC[P'0F@n=\A8rENLN"nGDF#?[@P$=E9rr>k@m4:V_m0re`%?<gieX?WLuG(nQFi`gE))=PGPGPQf%KV(ct_[?F;P'D"2@,s$9ktHJE53;PMD]>n*#D)c6?/0n<5O>;h9Z=-rI*7);8`<d'(>l^L%4Zf:A>WZ0)Wrg0/es;us$^e0j/N0u5KKgd:p="H,C&9;QM`grqGY?(SQJ5a^JQS*150Qla(4+O]fZoUEY)O6i)[GH%ea2o#NC_8-%+b*KfkP%_8Ab^S?+^_(1[d'OI1hZP,U_XD*qDq3t11ogc\0d_!ng%qI@o<]`A%d2i:1uQSBf%`;Ad,>?0u)(>:S4b3[DJ?;?deCL%P116t9<%6@\4+M@2cAnPe*N?C0.n:`Th26"bGU>QM[WfNWS5uiSa_6Z\Q$9!(+B>bT+=ol(Jo/FlV+UWK:@5)p/3KmHEdC3hGe;X%V+j'W(U:sF*6D6D*koFG-ZpL8a&^rUWCr$7XsK[ZUrTm0J'KDf>s#f;i*;k`\NF3:.k"iWnClm^nlP6rV0)M1g8s^[a%r)O7^0(>%X>o(J-.a/*[U:`2M8=Aimdr,-3IXO\;oiY6V6q8mqQ&?HE6?:'\b#9QB/Hk]l(E'C=0I(t5F7C+DjP68g#<2'YNmT<o$gX]pOBSs%:"hBcVc/$`3SjT@lM2NOp?M0GOXGqm>,!d&%AeJU?$I7:.X,+;Q`G<8SKs>jjj[?J?Q@W8jdM8m?+Y"R'Xka$05j.V`h1\s<u<Je%N%Ko;-%h^gVed,5lr_`Hr(PR>/RRB/K`("\0)mYU\-0CgG@(oE\Xl6YC2OoH>\/cLLWE3\@O[G/\6":C'ObK"5hh9WZgbG#k8]1K%K>`T^1$g2Vr)tM/d.Q#3#<6uJK(%tH;d!>g(]M'VQ:M[NYeSbN$Ul8EPEmUMD!(upBm4Vh^A_/dlHX]GJ0G4BXM2r1pN1DRd^HQg%@a>SG.]tEJ5+G*.$</5(5aLOa=fS)Q.Z^3u2A"+@@!:j<A1a!iR.rqf*u7r5#>2`P'+`*%=E2HJ+o`n<'4&Q.m,:YQ;Qg?UO"m=(%hic^PTB.B'q+>?B.N\>hn@:(FSgoID^4FKuc-lZa-7j%4$^;4-PVfRSVCiJ5r-VpobL5-'3\.jl$i0t(.eNp[5\SKEGu"OI`9$)h%a_B`Zl/JeH0<-N6&uaWhAWc@K:jAuX>Tmi]&/Z$jNl(41&%L*Dp*_"!e;$4W&94'B4bR,Z+h\o,hL@HHfju2&MTk+9/,.!dbKbdt%=,IeE/c0^K%>i^jHU#ecds!KBA]oF?Ksf`uFW&,chATIA2bUU%8tPo<(Tc#3SaF&eQLpS?K!B?2f?k9OGIdO!B1,<Zh(hXa_=5q*%p3VE+"kDIdK7[<^!pF34E-'q[_/fcORR=qd=+4ThO`MqL>ef(K.*,t*-m4?pa*g:rJOimGjH-TKq<ROtW8sWjW^W+Hm@.(rP.4@S%DEA_&!\jmnVm:d@Bd#b\L_8kocNsD'hT=BN]/sClY&5'hP#%"V[fLT48oe$-XN)D#.0VWf]h9q7IM718!M0L'?,gP%*QSiOr4r"u%lXn-cVND=(JEP)%-?9bpK0/&::HK$%6W>+iZ7%`?#r0)LOUYi!Z,Dm^SQUfr5V*N$`3^.(6V5G;R&c(BX-(Ln*<XEcp)QRS_J702%UL_efTXB('DL`t2=CNJKap;KS-/j8j'4Lqg,4Pjq+P@3;$\Z(WRuZX?Ft9_Yq%ZpCmkQrr>f>]f@g$9.HPU58L?Qud(h3&uf/I)[%o/RVH9sQbSa<H8aR(!B1g1bLM"8&iiKLT8dCCGm94JS"8j`nnZSG%t*7ME>;=N,2KQFqO[\/[0tZ>66VR5hIfOt2,iU2FLHNkG!N%q/Lmm+,nAJZh/Y;S$3;D[@"AgQV1b<8H,/u\$_V<e"8\X+a/!H>@i.GNm71R(kn%8_Vl=$a(6etML*g\4@&jUN[Wo\8KulZQDLU=%8`CG7C$OomdoWL2Xu3um9;XuqFlgdccl(A+cE:3og\Q>NpRYr^h]Kona]s!fr$Si>34a:^r.en<EM;dj0!rj9m^OB_o5<UZNU'$o%h/;=='OgmOIrO^)l1bMX1]3"e`GpOtkK&Wp@#c#%DanPRlY+E,MqAE+5`O#u"<?rK5J<m*[mq=ZmC&ss>+XTp?ABH*ce/b<J>9d=%\(f\-ZlP!(NMA;X.%V_"(=j95heB_pO?+8T<)u<13opntV)F6I&\L9FQf-Nn$1El&Sm\\+P\S_"-Yt\#@gJMdC2Q#UQIYun@XIG/%g3>-=$l2'Bf.Vp#Ei1+VAEduN?aLg$=80!pBVu4+UYF:j@gU2(QaL(@7hl^<(O;JR/thU04&jZ^7,(@U6&q6lpm:@FV9fE]CZ"@Q%^UDjCGcm6Q;6M!!m^;!N`R17K.,?t&Y\T[,;#OY+>UQ0D<-p7L>#ashm=1cB@fKOR6]M9/Nq:!+9;r"]l5feDFb+_]SOi`(F1IM0%P'_*S_A"(.n59/Sr2NXh)l\.s[WcUk19:GW$LO`kN>r*]50.O3jltRRlOrk5:jK<cQ)%)R].K-YL_Uke-bi]EemI!o=\=k!/4[o8%'DE3Td=PS&KBUFm:DeLM!:\<7LE8uWbJj7IFdc,MIYu#O&CpW#ro:;VULa4`=\TQd/MF9WG5T37jN[;ph&$Up@K58`1WtM*kUB"7%hcUT!Y`ZAL]P@h-baFin,0Y4;]h%8NZV?@r$V^YJZ(5PL@AX(g]H'h*B$V!YKXW8^KiZ;l(g\iu5IY>=F=[>@J'J#C;3$LA*+NhA%@HKtSr4bQl2[hRAc5EXU_uJhZ#@Hld620F,j(BtX>DqT9gS/rdo?sU^g[3J`s7WLakJ;B>Va%XOQS4n/[^Q^Rg4&J&[-,L>0']5"%=R91+^t.bL*-A8S`C0CLh"kh<*,i3aYJO:j$i_M:K9Y0D^`upB2">\HF$6,K^Gb,?pCI&kpmR,=#HK6BbhcngSe^rE6@XQANcNg7%%II?r^0],LeiW_^/A.e77rd`A.;V,31;E]J`EffO0H06n\U*FB3NmRDY6AqK/ig$Z<%r^4hD>=1Om.O"mcjnA9BQ31ANY$_?\?1%%>fMu\ei_5r#QIqbB1qe=b^/M;T)/43`3VZu\+0*3c:"9rJoctd`bY=,#14fcK@G$aeQVmbV2#<!)cs',Y'qMCPdTW9D%D+W_@N']%qC>.G98r5RrO,!4`>G_3Q<tkHm?u%F8GeC:;_cVrfYCq1AXa'l,i^30-(/#G5HM#,9STI1p4m+3o./]ibF?b.rMcCK5&f6_n/D2>%GJCOXN\"+VcWe@F.1Em4p@uA2l</jB5i<MNK<;#!MQq:Hi$Okhrr2iHR7'H7ctN)HX+A/\)N/,WWH#G=Fo3s2ej<O$YaH_iTS#m6%.M%RD]Gs8FI,B^GZru=RT:D`//ETk(WS]U:8a)upY1]</6-ebLd/7)E54r*)fBNV&04ViV8<PMU*b*U<]Y]e"?!JE5rS!/U-?&EJ%i4/>oA$o2q>?ZBT]^*2EV:3j'3AWFeo$%NorRO9ko;/efT#s`fi7I_&R;j"D"WD:h[ah9cW\<C4HR\emC]9hD9d@eVLan@md$:fr%#0QlpZAF[XXJL>k;[L3@lMB[H%_]KKF#9,(2S:Rp>\1ekc"DqT8Nr9M^c?uGHrD"2606Dg2UCZ5qYLO?[-MNchcaAjIJ[/2X0:->%Iie>DL/8mnJ^3m0/+\VRim:rnWNgr:-bDBt]<jp)Wnm*=l!N5Uqen6@fl72nBXI*o``Mgjd5qNFCjknQ+Z9ep(+Mk=USN$;plSZ&%lHnaV$(E,BIteUJ[*QTrM3^HQ;Yj&VeG?n2qnY9"b%c=/C90L;Et^e)`%unX#P_^@`TR\I%ZU8+ha/,TlZA%U;.@3ijd3&i&*q59%0Xr[R5%q,r7WYM\&2oB(5Y`&qaG>aXMlIldejI`GQDgj7[*6%VAR;BKDplQNgW2@c:6q7X`8JK4a\,.oZQCn)qo_2S>MU'L<hFa>%q21DaH'Rt,=#*j=D(dhYaCpTFW?k$!Qa_seI?;KB<HR/K;$FiX11<Tb=9j,rq&GeGOf#Y&HULZ:,""VSU-oZr_aK`^Q6*Cd=>lMs%A8SZ7M6&d[..i=_;UJ>)Zr\sOpA.8X+6Ql!4ZZ4aqpcqgi2iFAS@s'Wl^K9G'd7DNAod;Dh@!s,.lDJ[dl[.],[B7<$*U0GcQSuY%><f&HVi4-`%1K`N5eC-5/2_[t;GQH+jjkSuAm^.4.3S.<deHnhJ`RmhX@q^:&,#NH2/@kUm[E+jjh78(,tI;BS<.k?(h`Td43)DD%YV&3HFHk1M3M(jpY1OS\k\M`+s#o-VVu/PG\EAu>:/!5b>k9B54E#b)OrFQ?-1aZ@Xm\%ka>[J#iOsnZlsj3O?7Cct4cBllh&H@6%Zm[Lr*n8o)#u`D3#*DgY8MA>AT"#)q'cG^*o)=FlY'qU76s'PY3AfhS*kDq%#j"[+qII0O[/5ljS9,\<_*mC!^jamEW/7_Q1uSNZ%S^&*Eh,B8lbM@qTS[$*87MC$9\G_sn_Akaa725b782O"&FiPSV/(^e?f^=`(NNbBs_Vok!O0E%FdAQLpR#nlF%/[nM-gm%PW4[-&%[=aI'X)HR>d+GsVG%9n(etJWbDR;b/Y2Qqoip,LS_5t^dQ>VMrZU,T%%-jiU_>:_]Gjfo34#W((IJU*bGQT"Gr=#Qn7b:^PJ9DN-%BNu#/-QIb+@o#m!Er=C5n8`P2EbH,Yh?=pH7t1=!:WN!$Ij<T'GXqb@/324_?<<=;n%LULH9Cfg@\<t0):+VP'Oh'9s3!H4U+5oW%Q/^#A>+8FDMC)n`RejpSD=\`jCnpL\(Mp?8%$`sTZ[=kP=%]Q/40CD9I\PA\[,R=lS*%XrDOI$=>>BXM-F9#S8U`Q4X,5H7e\3'"%]$:&pGcu\crhf\"4+7BfNATh*j#dU$8s](mnQt_P4E"K-]p7pp#9rVjZTKgD)pBgWchG(Pa`&?3T$]@nZBSJm)u)<cIH5UcIfg<N%8q)r];5E9j,&@(l$I(`8'6i.;kg&QN;3<U#aWLmV,R"=.*9=*.Y'g&S#X?X'lCOcBU;Ir'M8E'#cMFIqlDhr;o4[kRQFFnS"Sd4g%9GlecAa1%6HZn\sUOdL6;EMm\Bl)=XbO*dDp<,q\p?#Y<cLIIDT4!+2/D/qW/VWf?ETHe75[ABJ7>gF%FI'BAs63DmT:4L`q!1DV%Ho"Rm;Sh.S@'-#(ZMiC56CP.<Jj5=&e6@\gE:EJIG1_9##gV,ukInt4juB:0kDRQ4\<"fD<p]eA?c#"cqplt$<tSq[G:<@/lON;h%17uar74S7_6/3*2GY$BumCutp8+E"W;fFAfJ'-,_eGa`A,un'rca34iouFb!8H\sY*dYE%Z^&PCKfdQM4Al^HhN'#cT#JI.aLhJI%#^@-b::pr67hP5Arghh+rdPU_cUXu7haP>epid@!6R(H8s/uu<"6$dBM@[+e(]Mo:Q:M#:Utm-j@KH.qgj].qBt"#qm`*1*qB#b;%KE!U(lC;bOJ)Rked,n7Xq:0cVUun,]Se(Wp[pT)YmXK>->2B5(XWltLYBdQ^SQhYk$EhW"@3!,d'Er^g%ga=cC_&7/Xp"d:r1B?a%FU:;3$U8gmO+.0+T/gJ#Dsla_R!ZYia0D]iLru6^(cb=>e@G%8U.H:#h2EZS;faJg_]h6Q"%(:tbrJqYEeYbVZk5)ABVNY"UK^Vb%-n3:3U$9#gaQg?nVl?G\(r1W%"u*B9QsaA#1StO?"brpGC/-H>"WGtaS1G!s"#Ur%AhGO$#U$b90Z:-f'mkqBS7.J5R56*gi]Am%%S7uX@hh_GueXW@,\dN'0'Z#mn!$EaV*RI[/0I:_aOE7_1Yi!b]6d4e`-o$g$j@i-C80`k(RN+T78\-?<,mVAC"%sjU^(<`WR4;?g%W!7\7^*)WGeY$m`K'Bm5-K*$3KF2h(0PWm1&Kp08W8PVXLhsj_@RHCmND:?1YL#Fo')O7rfT@mi)+Hbn("6R#e-&X$<H18::q3SL%>quu>J2Co-J2>ICgJDknXP_>Yi*/.=ab(RLRa/tg=Cb@NQ3>U^#f+di@h-*$,t*n*G`Dg$_igHn))WcLV?d/2E!"8+!'i<N/CI-)%A5<n#QP&&&&@R`s2*[1W&qEK5&&bHeVXFcM`o(,7[TK7(9.F%39;qWTLZt%\7)=D-f/S3j7561TVSmP3-n;I4K#s?W!S+d([0.&Y%0Qbn'Zd0JW0KsKZ)C+oT',ae88jrK.0MRaN--Vl-)VCngM_D&_0EbC<aQO=(Po0^O+^!Yq3W5]-7-``#+p"QK"r6>4fh@MFm#-W:%Pk@EVkX<u>&)e'Jar$n)W'e*?F/9!Wn0656Ls4d"5WL;NM=k[%&>*XOgi9"&/d`b((mIYh"#:Z1";aJ7d*G<5f"ciF,R&E3d0UZ@%#Xm9XJ"gi4e#iUW_Q"`Y"B@hm&;Z2Afh:r'ZWp4[cidTK#pl-8?AjsTj$:O;%V@DTX<lq(_=WK`]nm)i)Zhfp`=7H&Ll+mk_VBZN%,^]%+6GSCcb+`[^A<@@g'bYLo('HiF7*uEq5\*tPWu?].&4e5e!]1E>a=\;<$a@Ud*;ffG5[t!':ae\2L2k<)1@1F?CWdG-^kO>M%Z0T3XI`T@,%1saK4u11%3()@Q>o^$jehiL>"[`Ogf%I4I6(DeS_74L$E!-?li<SCD>t3i'1k-@s$44q>c41+m-Q?lK']Gg$-leT5%1gt'\M\$S%KX`3?cdqMts(%UoG9OIBdU;qe#nfOPP8%!N(^tUY%0iYcLhVQZ5,J[7.&udUPW9!X9#^cDPqN<(;6h+7&ro9!qIl[r%%0Lk[iXG.hC8fdJ9P+QGVS[5P&:0FW_^9/r8O0Gi9Ec(\m2QU@d4>R"=#N2Z#&FiZ1,NQ4\uVcPW<@8H82J0fJEYKkW@4eKKHOL7%:'(//quK%eTgR:&a]/[/2.T>gOEMJZ@P2G0'W+dQ)^1qn.uT&mTPY5b.Y3\-YeGoI8WjBOK?TR!92M</a;"ai%7%>"ii$B;%12SC%"I?r'+ugF@V_5apTIL]\3`6pnUZ:EG3tR7Eb9g9t7V\1i]W/K#)K(Lc82V`JDM%qa1IOMqL]ej#[?Zg_5QnLMWhqa[Jqb8BML6l.%:DLIO;#19M-Lla"W+%HO%dJtfA-!EHgkj.e$a#nu?pQ&p!9f;D!'10HYfrB[/:t8$5n7:a'%jl,6>7R+^"WPg5Jm[U&UpMImr15t%)-q>Z#WSXEP_(451f5N/7qE]+TLF^"o^ac%HhKj5`L1cCg,B7HqD&;^ArAR=,T7X&F=]^epjg)$_[UAO+=:]oVQ<u0:3:)a>h*@[%7n*d2S&/scU5f;*d#q="b)tN3<gsuB;4AR;;c#oenPmaT`(>6dU*%HWP8Tti5[6_s%=U![(uFB5KXh,b!(Nu(`s%+=0N@elk.nL@%S@X/'IcK@$"&on4="hckk$%D0=`p2tm;Xp;6"r1kS]G_LVBVGE5eAgL\=125Z:oIH'=<%8^iGo*#C2>$!\U.a5a$Xi\Y-0]3/H**%<c_Xsi(U4b2<7:9V`,Or7-0AaQ#al]2)IG-B6u!]JBq3D4`:R[Fp:fq9iN2<9(%?a\WKu*3W[,`<R6CkJc_*&2-EQ\_GAs<ku=!Y%/NFHal&V$$cD[72Cc5<e_t/4u#pDkA,#m?d3LI]E;(u:a21mX>Ob6fJ,7(+c;5J-+&<mSC2@"ftJo*h%a%CooXf.aWKnD@b,D1!R%!n0mWFC,Sh01cjoFS`e?QA@4[L@0ei2(*F)'c]I%MO_L*JI+k;`YJeVTrG[6_,,!JNsrf<aPlf"4=\1A$G*,+.O9XL.\m1Q;bTnr%b+U*@-7<gF(`gtu0&_!8P_/bCJVph:6?3W-Kk)lAKuDOG0PHg\.D[+3Be$b&.07tdTRS^3;M$oEP0,UPDK_$E3BUeUK>\);!pS95%+V=oWf9co%&.@TcH76n6k#mFhV*s>$."YPMco;_:A4e*PEKj!(Agrj%.9T]>%Z*nq.Va'!LQla1#5UNO%Oju<`Aj.j.7n&D)H.ds%KW1%QbYfU(JHSF#PXA[u(o>6QOG$/8*eko;F0S_9S/qORi)N=$OnmZKUdWE[@V/fdT`d?^W];OS_@/depei:gT>X]"KE,S?]F)cs%*#0)pMC'iIg`lrt+O_0!GH.<U.O5lH;_fZSR7,S&NnA8SI<6Tlp?4bXjUp)[.%f[AUg-pO?#m_(8gXdn@RXb[>08'V1m@9RNq,/'%i,7pZ_S'9"M/Cnq'q>^d$lp0`%IBP$&0I#:.^NlIZE#'Vr4-+f%*#]4/nn88"(5XYO[rci%mLo8Z:lSuJZ<H7C&gf$%Q[Zc+.1@_%5uEe>c7A_8JLoELAAI?.M4>4nXCr/=MTZ;UJKgg\.UU=$HB9D7CC),p+\TH]FD(f;N5Op1fqKH..)Jq`f9d(J!\M4;Fcgr.EH%(T%)S?RpV][B#?c_N_p40GW3"AakPR^tEr[c(jb/#V6W+;Y!,'#"D%RAEtbDu+DJ\+)VP<^.R2+;.!:_)K05T.f>JDri17c6]T-on.Q%\O@L2L#Ur<"m\NGDL4V\R6Z`EmfA\IeZNP15]OfLWA+XV7!(/hLlMRZGcfcf$ES'=9r>%?o.ZF8)$H<6Y8PF`$=(uT5KW-KQ?8ZJ%"V=$KNYY8Jiuh6[mM--U)0G_\J4(r07"O/cR]Tpqb)ljZDM9b*+OW[<:RN/nSZQ8B,"R+LR.$N'_\C41l\G]K@u;'?YG-*\fGB*q%RRu<u5T_2<".b]O<jI88eZFehpcKg:RPlB/F;*dZ$<:q^<G`R&&dF:\7O(@^M3$RgOBh3t)0A\9G,H%QQ<$X.j]dhh3C0nC=&9ZS%?oS4o=+nAX4NnDH2HH5*oA\FjI@sT?.aa1p.EB7Ui?V&EY'=E>;([nFf4h/lW6bsIb1WW<K5QK#f+P)CMQH;VDKlSuSAWbZFd+k+%NjL6M#*X,\Y:+0I7u-;CE76;.*se%NQa(nFjW$2h8'o@C[YCrS]V+:mQCsGh]l3H\5)t/&N2&6:bnR;h*g]ET_SdE!EPriLfjYHG%Trd_0&8GL8&f@GWKj9f9;Dq%t@LdCWWKuSb&p#hN"gVaKR)A_\Qm+XD'6Qd-Gr[gr<ZXk#AW3dTUG0bKEKg,,2E;U1a^edo;g3RX%(lY$N?lt![L.EF'%$R7RJ?EaKh,t!00'J8)[8K9CPuXA.V:jn7%XJZf%4V3@%th,S*Gf([9fGVKO_*7+g$#]c#S,jaoF)t,kpnMM%kVYfhNBd]SN'LML\hk+\R<PqD6;9@D7\HiWe.j7CP`9P7#im+g&]e@g&La^$GG<$75jV9(ClY5ZTWA3/$Sl>t,/b%</!-6l@g*?<%fo[7(Ehpd%?,$])cJ>o1AQ?$;fs:'W's',aP^+bja$MN!8q@=%R@G#55o_D:K3;4t[\QM.B*QM'CnR^fD[%E2.*XM':^6GaBui%3%&O8nC1'6k#bQN#1Q2uf"!u<k?@XoI"gU]<l,S8AaKaS<X:;\siEFM1`/cuYnFDA5fL_,K#/DEq>Et_a'YlJ@>%g3jn<sj('J[5=g%@d5`3"KfU%Qt$.@9N+C*!^m;BA]t3$h,.pr/O2'@CGN7&&;;5])it0S7N_dn<ZhLtAg"7Y,RF=N!7XG=S!,Z=<AI,J)j6j3bRDFd%[!!G0$ll-`O1a"3CSpG0J\ft^!XH'/WtUW[qQ2:72fu1F/kD1Y0KG0D6u0'L!<VuU&-P!35_qdDecCB(fpqMqdL6MEp'Cd*EK1SI%N-X]"9so<>K5l6p;qDgt*uZh4q12XB)]:g^DB)%0_hiD$YaL+1Pra4s7)b-q)od$^eFeIagBLa63CVk69F#2^qSA\#K]2Y")8Se:%n8A2C*bIG4AHTG6\&'6.!<F;K3(>h$;Zms_ZY0Vt;[Q2o72NM#(rYr^F"kf7cWY>lL=75+7pr*49!ON5/IftNZ#d]/'a3Bss38Ar%mm#ANK#'Vni!/0\,Cg@9#SpCR'WTrSl]3sb5kp0t0[':<>&o:VdiTs+lp3XcfNdctL1]U478QD9aE.Z8!XD*!]L/mE_:U1<#I@/;%'G1J\W,p6!"eG=DAFOaJBGoC^S5KD,lCu:Y&NGSfN5/iV\-1<0Go%;.@iU5G/VNu9R-dLRVIFj[PR?f1"IO"#0apf%<PZ>69u1tp%KD6#]g#PfZfX;8&(k<VP$nhos;oFDa,6][\m$ic5H75qYB^1gV"oI(UZ9qJ@[7LBf)[mC:/#@deU+%;<&q`0d+9rSD,b0Tc!C>h&%F_=(7RPQ?mar._>d*V,q-:L+!,ft/SgP2D+`"6TUMa8O[A_cqRC"j1[Hqc?j;@83he'tm^*!ecG#Gt@t``duE,X)[gT+/V^>D$C=%S@R8]%F*29UnEl$,R.,cQm/3AD[n*s)CH(GW[`+*4tsT$^_Baq<QQ>;2B&ScHsL*HN/T$n@2OoZ[P4-b)EH!i@4+O:"6cigNEEV3%J/T0a(K(lQb0]ASBJP=JJW==O9?1>*@$JKX5u]=lTVACned8lQ>>e#u0o:cTR=mjHKPkYJ1Voe7'DID`b/Ps5Xu."#,#bi@RDV4L%);POMqCne%<g2Q^*CL*k5ZK4%@&<D_?alDb^qKdQ3k.`9BbjB.2mH'9*.`rg2ai0j=!?UI?t]`fb8D_5M;qL/4#;%-dl:J<;W3@A%_nLMQC>3o:Ba$XbOu3P""B>ZD8UsBD`t]7)6?HM0q_g0u(rZ..4i^e]V]J9hUf*rn-VA#[ZNA@f'S$07J"Ot,4A7P*3\G*s<+O/_%"8n!g#.!W5-6`O8Jo.?7*=]+iY]U8j3s@[##h?Wp9[g+'9"G+TXo_W.[4mHPMlhe-2]S?\%^`98;.ET._4hQ>Ti7Cg&DM3q*91EF%<U^PS^l+GpA?l_-$XlDAGm0ZF/6J*gEQE/9eqSVK/@O<W;:#QO>3Eq:j8J+K)P+3D)AYI<:Crqm$E/DH&q`<eJ/s2^/;K`q$BR`o%hX$O>U+;DFqKqoRK2&@J=sG2se1O8QO0hKQ'lc<#$V:MU_N\'NZERd9EHIAD)[q>3E'IKl`%-Y.bQ]4g8uk3Y%Xj-kol2[V(bmL;%8_F#nI9XA12Ao>U%G<SJ?,jfWRHJYrOO,,J6agDga)pKs;2R4,<2Lm<0f_NIhFn</$R&_fB;H;Xe3Fp-ck0CdfGGTD;Bb^T]:MLh%_qE0XNfQ081]jn]=Y'(0ZV#*R;an<>gcoLr('dd:q2GrLL5O[6,6GUsVWaa/QkAQ43`cY2L9+>2%](la!APl<U/d8kW6YVYJF6rN%PW>b[rZo[tB2OX<3XBq%3N+d]^G7`14^0L9Taj(YZha<aNe>7R11"QHfs'gP![@0)(?g[,kXa(YQ">TlJBl914ja8W.k<aLiUC+E%$*(5KJN?fn3J^@?"P0ke`4`?`.GWBWUk`AN)K?uUdZXfLi(b^-r>ufK;1=3pVImfj!bIhAC6HG7K><p<b`QlT8stJS_Qnsn<0Yrh%F]+Bn(KLRMF:-,#`-;a0!GY"P)IfXZTWtDp80=.S:*;5P&DW#AnYJM8:fPV07C7.@_9a0[C)P5V?3?c#3``3e:?`Ae,N1gE!32_?%;`,l8&.DgQ?&'WjCcFR`&Zf4UlIT#ncmX!5AM?@h3ZSZllICQ(<=),[S5(j4E2opG@E!uZaIR>)V(goHjq=u]1C2"t:a;.>@-V:+%;ZYF5Rh_K/VAt=Ba>6s:El.5Y_VfMKb`291'L;^rM)3aid#--n1Smgr%%>&tcjUJ9#-*;$kq:D)?q`jc0oDEQ:AVe;K9"$)Bo:l(%RJ+]*e2Vt80E>057#i/4b9se.&lk:#iNbd*)]7NCKID#^)kgVBO2CBgc/Kidf2sq90Gp*.)`!%#"PNV[#E^GE=+&B9Tif?@e5U_j%O+UTdWi?.f,a5Q]<D[T;drIZTFtY2eMQ/<!V#\%Oo$1s+5obfAK2H]T2.TpuX?1%gZ9^LIfYFVDL1]TSGTB=E<D</"D4#1CW]IA_%TS^mgjTa]]^7Z;EK+dX;?-5PU:ZMpk#3"^h@$\LK>&l%4l&V_uHW5sLSCuOH%F*49q.^aS9B+9jL4m:WD[KE:l7F5)8jiPNP>&EZ%)CR1<4gsdU#qX<t5ZAE)GF_V]Z&gr$7eLT!kJ1%i,b!q&1T8Slk(3I;VJ%YPru&g*!T!qt'8&L<-@h3W8Q-8X)SnlIGq2cmJg_ED%,+3OMYUKfHr23X--rgff[LM4-.!]j&,mO.#QEPpYQ6rU\oE9p61)SV2\.tb@kS]SA@5>En10BaU<*b]4>1"n&gR8KfJdZ$r_2`9<%8gucQj[F1(%9o6@5enLqAT3>TN!iTDd812t@jDA0Pi>AsO3$iRNa&o[Z3UkY,*C5?FNb<8O?k_X^uo*me8/#lO\'A`:!P_(9p]+B%33KJ<W$5RUUkG##CXK!gYXl@b6fq)7JT2$Adps7&+A@qY%KNU:oO:SdBqfKHF#ZDu;<q7/^6EGrOj*nH`8L\+AoW>j<)V-)2uqYj%1f\R9!9e>8)2nYOc@Z7F3ufAOGqr3c!uqTe!=WR]!(MV).]49GP]b5MGn/1To\=QYM$U.OZhZ0g5R8)5N!41COt)q`$QtB8*h*<E%6IG342ib]XZ-YbVAXA"R!uZ&?^]9<"*14VIP$heUjoPtG=!a'n!aH[;)EM,rM3?\\`<HH"Wi7^2i#iLKE%m1ZY]Wh&$ileP>oAY1%,YWYF\.&K_('E<-^`\RHL1m.<",0F6bal7K^)73_Eq*gH"(foDP8^"'7^PNWq>V=ZRiT[mV*"#Mnf<$c5Vh9k-FrqbO,W_8Cld(H%Nsm7'Ju`]QcrWKI]t)^O+CjRp<tHu&\@IKdLHiU_0RaP<7L-9elnu/%TrKE"Gf("3A@UL\?uX?01T&!8ATTXMc1?Z(9C5mQMmkun%4JnW'[?1h7f-Q**jif>M_=mO_@96VhRN[E-82F0m!+r%S,n%09Gm#Zo)+2<T3SHc8B^Y\2Xk&+e2%r1(d72hRf`s;L#kV*"W>gps%?fP?;0SHjK=Kbn&;ifE-F0-qUa"U\CJCpH]c7^<XQ"0orFIg8Aj>=ct&3m'i#)3*j\KZcj>:Z]M0Y'7[:F*1mXQdP/O;%bcs(p[Q%e8I0Gr)6>q=l35L_9l_m[H5*Dj]0g>OP/W_oCF27NJ%(!W0IsR.R::E',L^34b#(g0HUl8+kZph<lkU['>1OR#O-!pq/J*4@/(Tn%:`"?ZG$.=C+8,N^^'B+kWH1!J&>jC%Y>iUEYm\LKqWeTe5G-eL]m"8np<.66_OBokGgmhZ<B(Mj)o8t*j'C0]RHg]Xnu'*gg.T&c%[H?mGX[[7SU47:L2O/oZ5@nn!:`'p@'N%:>T^s)?QhnOBfN.2Io!'6,'^E-NernG;hM2;N_,HbXFdV`coN$=0h#_m6pRV/.ZQ"IB%GORk=CGlo5^e@0%UnenC]F?<;W$`*[!<)ra1U^JBUn6DuIrG"M,HdPP0VF4or(_uU]_)35\_"`Xp8Qk]&(u&GYOh=_>D!YV*i<.%%a&14Ho;If^FuBh,l=YHnEmE3qMf/N6F$b53f'q.%os'Xmg#AQ^>WYlDkTtZuAF&@fk.8+S+[nmI0Rg4JV=j?/[AY#<Ba&BWb0eIB%DP`i:dr]ZHp1B[-+^jJTlm4dtp:AID(==:BbC+/1e2ej#\n2t@>#35<1kV'q6i0D[^0B(gZ7Ter1Hdf\lD4Vf)1M"fF$Mq,Y`;0>%Ff9cLLXt4SL0f4b(aaf<Wf;W3=Z<:\;REACjB0nQf`"W=j;'UH<3nQn</3:pY/_kP0XGKcN/K[IIDl97WjtQX8:I#W3^P=\O*F?5%^cFU_?**6-4NXs_T_>T9gSBQnNLlpu`,JE@fe\iG6&nMg?tN<s)Y[2@_4@,V-FJ<]Ej%Whjh\fKm@?BcrOUb@8=EQjo<^B=>/8>n%egZcB^c=KfX4JA;Buf;r.(NOkD-Q4<89>.b[F[-L>/a-4IW4&;`]ac1_.HT_mp>Ysg_Q[^`dU#2ll#Teq,oYWKn4'H>"A5DXRhK\%<XY;=C>D%b2flnCZsnfEG4PI%fBVea\Bk$Q[U&9.DHF_0o,Tf#VrEnT_9G2+TA26C<o$74Ai2,NFamX01-<FTBki%o*7VFf^=<Yo%^cpLb[F^uG7VB41ppm^5Ap8ER)fnc:JuUih7lm]jfgDee"oQ*B"1%C_KDEdJX&JO8MONXq*D,FcH9e'&HfT?m^J<+YmLI')M5Bpr%c%3stlQ#,JmAl^Q^>m`Q842pZ)cP+Z2H<cOG6k!gp[862hgQ.(p(#0X]as87GDBB4$%(,9?4QoQp!mM=5HUq,rVQ<V[EH2E>i(#)%Ib<a&Yf#`!U'=BeZI%JWE.Vlg&P[%6G47nXAm4L7.I+1+Fi50So8]-E`P^;rf+_D2G<Tuhg-La1/RW0nlOXEff&oLYr#YfSK4tdI%b'fN,C(4EsIAXEioL9juQ'#d_6U=@8_IHd8'AApKO%>EdUd5I+N+VCBCfQL0/I^-5ojV5MDH]-C0s)J?9l%F\;DbFW=Q41$_fSdk%Z.4LmR-1`V!GSZ*e(X+7LMWY#;\k*<EtQ2-CNsPULhgM`Ob@Y<7.M@Ab\4r7rIhJ;gFR,uWNP'5>-;kqPB#'3m'rJnpU"[J?p#Gp%/BQg.XW?bqdEmBVnpFp"'1EE"bnnI_RXf5'g?UMK-/M3(O#.G&U](;?hNGa^G<hRDhiF,W=HZaT27Q`s.&Nan!FX>#km.s+6Z?H8%XY';+(+.\11*)f;JY,[/Bl[gH_;/rlU^9_'4VVLEjhL-06l=%3-3c:cE`:`@7)1'B$tuE>^sOk<-.WLc6#GmE,'g8</GJ\_$,DiR%%d)1B3\'k==>bQq)@q9\i2[HD#qV8EmD9!lddhEr@:I$C,0COclWtm^[@D')-;2!he<?(,.Tt1A_2&-5E\87p*7PF%(b7W;JCjW4%JFuRnMg<V#kd'T",=Xr,&L1]6Ih']<r/O4J:dLs/4>-+DipWchUh.I]e>H:9D;N0_%mii?,'+!L$0+9__8(/X$ZkbJ"oeD0N<gqu%,G)B=d@a#WZ:!0n3)!gs(6!fP:aHG(((=S3T5MK\W[P["cU>=9J6'HT[2X\5k8fa'JSi.]R+j:(^SrY%OHL0(9nPS%$Z&JHL'9$K%IPE7WQ!f[9Z<X99THG/7D8-@Dfe5$fEJAlGZ*3c@a3cq<*@<Zt]2OolmNC85nNu>gc.;1)l^s%i)+kf\9SCT?lu[9aErK4*Is/?g%]ea;I.gUC+.nWZ%*Fp,?%u)&j&H'pS\U&3cj6rhbmP@FDM7[+,Ys(XM^GEE9F01u5dBOe3RQPAt\AWo%pcTfKK:A$Qn!nqJ&mc%L%m!tX\7r\(<N<IOP0Oq;2`KS4+NJ6hIM`NU%rO#Y7.3jNQRE(_ep@IluMo4s-no5SUqB^JB^DgB?^S6]Vg-n&0L@+HO1Kf%)SipAW%pB2Q[q8Jq0p14[0QGrS/T?CT[L-'#4QL0L)]#2DnUT:^aDqQuQV49]Nr-.leHU`$n=_(L0f58$/%q`:ep[bXKAdtH_&N=MJ'8#q&%`7njmlu[2s6S'22,c,%NOZ45#3$5L68*Pf`,*l!AhY/S6Yiau3mC.T,fBa`5,UZghdCEdpp?C<Xb8`Aq4L*I$_L&1e%kGQ6N]A@m%Ae#[mk9"dMkOfH&mqYTn`oe8.d6KTrMj,T["iTdO#7A@8bi7IAHRoHmlWa>K4)@.#$-`]OO@hJXNZ7#e6bFjZoTT$sl"MoZBP=d)%H)L#da>&I_mRG:,^BF@sdNbLL@(D1Ys+m%FlK3dggF5@L-%:S,?gG?$)tkLcH[5/K*[>e2pr,+^j2MD@kY_BrA9u*d6%bF&9YX4p%6U86K?k7F4@0W6X`(&Wl@=S$\D_YeC?l[NrYd`9ap+43Fm#:%KUV\@0G:8RJdN!`K;c:<`*lo!uR+iU1F'f/_@S`BcdZLqGn8E#?%2""DKYSL@D3l2R5P4U6CGE0N9NS!K$np@4^.n5K-jiPQ#qi9D!5n$Y;a!LmParZe"ED7dsFlf3=9:uU4jnj?X"tY@^R($VeUNr4g%;;0Dn@&-C6H<T9A=5)VtP:oNe'L6D>h_EZpV&%u+J/#Rh6g+^F3XDmPf(a<QP@*nW$la54A<Mcs?#ibrET#@Mid>OFOL2$[-Lf^8%Gaa<CK,f.b@+e"T6>f^O0IKWp)!S+\I]XIcGQs$Igi_B3.OEKR99<$C55TVeA#p$i,.D>nO]VXZ44DkVk,K<8N>c<AS^P1dT1hgb%J@(Sl$MNq.I\1OR82ra<`#\(Sar2sT`19T?&m]f2ge(%]\9?/DGs4uA<BUBAmcbiu+qBu&EDK*m@rZtc\Fc@YSQ:*qf$V\->e)tT%o7JacNVU0phs2i)ZYgW$G3PPsj$oBl$/&Qt*PJA1`-H:F*-"bMI`\/<4#c+9eS]MAj#t*"n*/7^)jE3]$P/raL2V]-KU,I1B?_[B%*coGg8qqV%O4f\-,2J529;1Y>TR`QcDp7*)kU9fc8X2MaN?ITI4$6kKO0+-_$/M-8bjM!K#jh-Mgb0gYF]p,2ELqoDV`h\>0F$>Z%8(to6pPu:SKc7q[b-p>j*8re`h'd^M*;sOE<]4&QYD3>`#PDnePT]Og\!KpYT"fqbp,F&h^?AJ?OBY2F*P!f+LG3tWE'`r2hdKC)%$=D\Jl]&Z"N")K$GF3gUj%Y$.G#Cd*`CGSk_!FLuQo+AM#2+8sV!+b<Vu9#HaP?49l<Z:g*f0mn\/ta3Y=%fW*C$IBh0I]TX7Aig%Vqn'lA>0J><",qV6SZsfR_ffi5j)eYAJYQV?ZpLn99"CGk@GG`^$I)g.@$Q4`rPNC?,ePu-qmNH8P:3'Za=oJVZAca^Ti2Ri0GQO%;*RJOacPqGpH2K19>;E3U/*Qn:pH6Dh:U$%DU)jdfujkhh92V9G5l<lm9Va:>Kq`b>(U1^5uR[s_=M8pTF(W+C<4@s^-U6(!q"[F%_#=f@nGr=ReE<faQNNrBY*F5IE$Q[9pi]aVWbYm'[`Z<Jp3MPAIQdo(aQErDlporbLJ``Nhh1g>&/Oau(dIbkGmcfjoR6UG5qdmf%[b`3,>Tg==bl1l@%E9LFT>(OS@uMFEc5=CB#%OiT_9EtWoGQhHCl%XKh!?bI`mto)rk-/A^&UrtGkg;#kK1hZmI8b)o#oi*o3+>1%^u#Q2(U[Zfobds/d*aB^Rp97#+71rL90(-Wa+I60/m%Za$pX0]16-#=b4VN;0muH%)*r8cKm8JHkCahrrGWl]&43k$k$i2X0LfFY%1Er;u#1-L"LMP"YN?'44)RB*$QmUEUgC`.6)o(u=0!6sM*lbb+m%639<BQ7Q4hQu7ICYd/Rgo;@4[I!IBn.D+P`]j7>#7<VCfQeb%6@,+6+oEH\qR"l^Ia$U^:jd.LBNq/S=SH_X8!50]1n'0\?-f0LL[M=:(te4P$_(pSX9t2lfj&ZlL?,7@6cU#Y6$l^T3MN($UJN_u%\A&;'BW]6sG]P@"C#:;B=g$FfOlG/]s7htW#k%Vi^?O*)iLCtujT4%tf_A4RmR(]3],Y@NV?5ti.IOk9Jf1I%[$Ep8o09nT:bfqe%=]Wa/[79N)>lC(aFXi\-Q3O>pD$s>HbsY!PfI9kggtnX]2kKKGrM'/;Y!T(ocnM6=")UEUS+C#=q`k![MT3q+rnY?hj$3O8s%RA0%mA%LdJK-qr"C&lfkBskW,9q+o8LkpB#tI27\X);8)boO1OZ'ZoqQ5fC019.]&1cb2fS0C3Pqm7n+==*r2IopOfJgkQ)0n;]/KbqY%N[7',:%ILd$JAl8hfLd]!o+=kJ[!eo5FbH%_]ges-iD(>1QG5(QUAftWiRNa3n8_0nOr_f'G_5GK<5bcWm%m[k=,#]V.9oWC2S7?%Dcd4RG+^VQDme$i+d9pm00WJ5T='f?]u:opBWb$4?KhrQCj_1OU,OYX,YC="hmnPrTu]q)!e^^N(F,:tbdL4DHSIYZd_W^Q)X`QA%U:$=2,j3Ja[,QJ`C@OM2M49JT)"5UsfK8\F1MJS<2i6I@%ckVpJ$Tm=efaoGXRQ::j.MQUYlP`PZhCDJE<u44..W)P#l)K[Ame@6%(i0`2.^^u0FX0F_JWQ7WKE+oVJrlA<llaE%n3=JI%6f"UX51)M"lrS,U\GkZ*tTSj/!N3TMSh.fR6-Kli'L"H[,Em$/.Cjd0Ld@S%f0KA7,akeId)leCTp?W/g(s3aOk#e/$Od=>#>2Eep&S;:9L`ro0*Xa]XKi[M1B`D8+3<`^pig+2)rmk8;e62eD!9Vt'p8+?LRpdL%c,'d;-sm/!+9)Is.L42$.8lM=6!cFMH5F3G85e6$^:UrCeB&hu0nWFsM;V9!$.^O9!U2c5pF%&20aU1$\;.=F>RA/(36\P$*rtM$%#))1*96h-SVee675R=g^aR>aSn>X^gmC0C[1dp5B=f1atTdL&AJp0%"aabdhYp5n=]a6RuN,BIPVG9f3n)^R*j^]sh-YK>uL4gMu%@UtBf7<=$h!s,!7U^4tS;mM57R%""ToGNaDbT]/Lf.EdP2mO[#*tPG,meVLm1&4(JOk+`(^FPF/c9f;-2o?Y*:2V0c#ln54la,kH%TeNP_!*L%fET*s1B,Eelm_EI0$Hk-#+\u-^NqD"47slbJ;ODubQ+j:g6p1U6DQAF7+(Bt0gN*e77<X5Lj^G9iS7Iq8GT;f^B+erl%%BWF3p3Y@Y19'j`Cm8@6.$RtWBAs2O'S7U?nOhPT,@q-7?5&]C.826&;6^\R+?TWtWV#kW7Vu<REp2t9&8ihJ9S7!Y6FZcKn]E]Y%ia*Nl_<%($1:)269S?E,$8_Mh79/79d4+]46YK>s8dSEu(967[Gg#PcJFAT8PW,+XR585S4DS6V.+sJ9[*Fk]B2_oTA(kL3<T.SH%eXIarS.J(T?b0I!15OniJK17N4]&[6)SFX3k5`m]%-ns(WHJa_*R.^)NA\4I,IB6Ldu,)sn"t+o*?h@`IN)0*,%gt_Grra0;\LM.%'"FHo1Lpu@jH8A\Mh6N?ZS&E^<]C)SC.o:I--m_h_0VIkB.F7o+dWk:_i^-Pnkd<Z!2-MPWOGu[]OWem8ja,gi,I7g/(oel!g,=X%VZS,I0j%PT=ZPI#D2p>'_A([%EbfXle&AWR42ddNjL&Var+ra#!99eAf/RuU):3=H[,AFYoJG2<GieMuA6-m.m.JtIA,nP4`#NDh%YNHZDQP*b<R0Z2O;.T6$_E$>d)IK'q);+g0JGJiJ:sG`fOc@(r0(aI(b_)-Zon)J9J6]C],8C$@@rc"sm)hf)89!fkeK?<9Drd+7%j=@5)W]&F6Yj6g;o0FLQi*^tJ;/e[:XO.l:b@_tlN7SmJFrp^2G=fDe)Bla'VAdV9@$Nk8e%-SZPE^^Ck\):l!]SlM_KBIpDu`k>%(gVoqHGOX>l$;%s<sM(TO[ii%E>Sn[IPJ6^$)5K[G]bpU&jL1&gBWmR/I2*YPRLsZM"/<<;9fIR#me&X,(F6kT+LDY/.4>Spdn1L%^&>AkW"(fF64_;]IX6SsLb(Y.E11O+X8/pL"+Xj--*;2K?)`+"d*[7dT?Q$.E!&c^A+7_&7;cos448+?noP#,/`q!e'qV*3(n\(#%!)(1*N5$t-2e4cq4S3\N([Yjh-qQfsnN$d1mI#(iT@<2q==k<e:Q`1#\a@q'ZB(Q1+b3__T4*p4ZGHUO:r"$cKRUQZEu;c,Q$4mS%`^^)ZNV&FGMD%rc9`0;SDkT:K--Rq=e<F@A10$(k0DZED&o+X;)NbjI4V150YX/r3$51mGYpV)@l-+f.cBIU;L^\UO*uC9H#j0eb%a+F3cc-1ug.mg%!cBG6_FN?>V!Y@m'Jl`p(:fs`D^]7bO-qo=`6pCEL8"P0'R85.PoR#`S+h3[;J;C(33\2BS9Wp]$IB[6-qV1HE%]g$bRnE)j:'SuOK?a;g`YR"K^+s8H[>\W&X>rh;V<.7VqSoRjHCsX?3'N`;+<W]r"i`b=j`@"crUd/I4(C,4Wl\4S$?N9$G#.=VL%W>>UM)'!0:Sn54N[AP^Z\e8\.aYU1a0M$0T7DZs&*'K:&1Ztj!X>MFBREr!f=A`5a#onft>Tiq(*F5Z:0Eg8ZKnL1:oaX<!;El;!%P,.W4-]'G/7VNX#->WC,%VRGsoY(R>K,B;t4N:MHIK?](YVNm^fC<6S&:DMG<M;#aY71\i2AM%21EhN-dV[`q%$9Oh-C^,6K5D)(%e/M997%."@X!76,IMS*%%!r$gM0t$BW'9ho,VVh73$d#g&I\jC,1dkB1FlKG%1)9$Ck^2"X&[U."aA&tH2ctGILf-n'!>*P6(tj:%N)RbKs$e^-ak-QCV0@fb-OBR,it$4XV)VHDb4SSX%/rSR0-E]XT"eQu5G<o9;h'dUBT0pUn01fWQ_.CVC&psI4`hW>o3tC@)rpET%!;VBPkBhmY[S,:E=k'Zij6reS;"?oDK1-?dfu20Y;B.%<,cUj\(pJGPVOB1c5;5?+phU*9\X:JQFEf2C.h^002\,F,(VJd["K'd3%ZQ3":;!ZY>l2MB77G>':<EAM*6AI2_LQN<B`LCrIb<Kq=&j)%/@C1(i-Ie^rYG":')LB^`dfL(AE8i5o.5b(+\9Sb*iU!:tM!B?9%.$?#s;Nc?HCFG!093E!pn7eL@WJ0O>.E#1jP\C'l5]4#@G9bc[;SJF.9?0Jro^<<dCSM:iSPrGc[WuYhQB9dUfE6Gk%!n.CGg<Ik%Sr5M5J/KJL)P,E7$o7DHCg%ACH\R:g(<Mh0%+N3>;5MDn>u.k^R4M]e$NfQ*[p:1JdDB]>@lC/.8XK#1npM"FKAWH:X@LTEb.#3N%!<tK-1:4ej(`=`Ba&P<VU"I2frZC6cX!WHpn*<O]ImJ/UDormL^_7(lQ.hF/!NO/eO9>dUVah#&H*8QC1eUDc_GeoGc($+Z_iF%`%4[2[CLt"k\6BgC6Z-@UJ^`a-?WESpX-c;fR#8,A5b(;maU``&@hr5[)^"&hO_CbUc:N<_'c]<ScdkbDf=]YmHbL!RD/]$J@'cU_V%]'DU`aAmRc^r3&up+17fDDgR/"qMf5-38k*h$X$&mgiZEGU`U9%)*HfS9Z,A,D=RVf-:3i]DX4FR?dlAW"DT5ENq=0i"^F=G7YOM%MAqFa9VBMCnO^M2D('j&St"iDO6j95Q,*HF*FQePmN%1#q'&g0EQm&-+d,L1pHhDii`!;G.5?,*LVG%!=_Sbh`K=e[=(@Vp#:NoR%Za)uOBuhndnuY&\$tDoHUHXTHkaJXtI9<&g_,KLsScY]h4i0cc!15#m?J77VAfV!s:r>GXkN"gf,6Mu_?sX.u"?5[T7A`N,G3?(:%%[1T9Ip0&;77sVq=0!s*K*`7i7_,+LmFu4PK?]-TJLCg*iE\("8\u4f+2G>4(]qMYX]i?U9U'1F)5rHm"hXk#5Fr][2'B>n6OF-1%&?D7oBhP+.QtDGT@lRFn\!_G5Z-%TH1UGfJOrh!CU46!"+jgARUmm(GOI0pq3g"0g+&&fWT[*MUr'?Uae\LR1jf&$lKO@KuN6sN+%$A>3qGLAOXG0^\62d#g)X-PT,2*@-`D,Ld,&BZN<D%^.C=K47uCRS59@i82KV";Dl:N#9P"=oR/Od[%rLZ@Q*WDZbs79YkHiodQg%#!k5gAI:]R"o>Ua\)<>VToZKiV@K9Ll8Js4eYK]iDlddToG:`Z[$NA\2M#o%4iKg9$Sd9(<CK8t:Ask:5dtK'4kg7j:mY!;!Min5%fd])qMI&eNK@H]-e.g4I1Srb.!9CSYUrXt)$h]\K4+O-9_cfr#CNXr*4a=^VE!2X$1mSjND->7u5AUc7`SUQJ_fras.1.JpJ1(-#%kJJiEXCo[J/-9H!OSYklq16aV^p>LV)@:MZlihSS6Q/'*HgKqjW.P#4qDetA"9j3!'TLXMaN2EOPRqg!kS5c,b`m-.9@&q@g&J0*%EtGWZ48Mi%3`G;YV1/B$N>c1$n?%7bS4LA9>4DLUWEo)M.nhL7.q9V%F/SY6,YI0cPGh.o08\^NO8R2(%T4`5AU$)m*r8<!VH2JB%+LTq88;;$-5U`6+0deC_j@IP".M?<9#!U9D;Sb/P/npHhjMh+c,)lXF&n<WO?8:utW3;cd_T^iN)p.aKd]$;N=a8gas"/:a;PlYD%POrkZ=cl)fY7'idY*T8hcV9;2N-k:8YuDkl_6B!D%*6!eZLi?;5:8uYAepf=omD2g.^J;5$!D'<PhD">&&nW\ai`n)<:RB1>N`_#%EF?MS;mL^@5cAnC!,.ZDLTa[d!*a4fY0YaG+SI)FZK!4oM/kK`,+eK&/mqXm!+E-1rZ3U9M;]rNaf7F:IeR.8r<,b^U63J1YUkol%q5jh,B/Gu/^4Q^KrKb6lf%!a`;.']=J>?uehnf/*@k8;sjQ[`I65Cqn!6e>QT<\*t@u8kdRVk8,b(s$P]oM<gR^9)//ShE<>=OU>%bV;ulAsuf3A3ku-Wm2nsDIK\R)J(,BLELY7Q4"N`W5<g=:[V.M\_SHmK*<9rSJu_YOcG-=A7-FP(pV406"%VBq(`';.mZOO]HK4,%:p\#G^PF`tOfdmj+CHX'RUllBQ=!\"q[u!/B2fmLk%!hMFM#f#=ATh#J^&9@9>Y'O3iFOsbMEePdnWpI('kY(2kM4l*sCKSZfJKF%3)Js!U'NIlO_-Uj5$@hY`5*_G[99Q+T!jh4$QfAB]$8!rbO\UW9_)3)9&oHf#I=U.VNmj5qp,du[oRc!=E<D*negJ)]M3j]BV9W/%>Z;t('UWfU.V11^V]f'9]7pLf,L,8/@:>NS=314W;K02h?_&M"?T#Ftq7K%Gl"$'LE5c0#?e-VQ.J#Nd$qiqf)=E:_8c>Nk38aFE%DqZb@]e8mdA#'2TRkJ%!nrb.l>5UM/k^k'RIH]7U.0#2BH'`%CL`S@qbY'f*1gkg>Q%[P$eHUIRlrFa9?G_\eJFT`UqSaIlAo_f=%<4Q1&k-#;'gTa+H$6WC^A"`r?^NnKo"tTf?+k2"LKGcOW0e`Upbf/qS'0Il<3V>_\ISn)jqDB'a;Au0Dfq!Z7b`*hMlffe/Q@[%1%%"N9gJ2HP,2h1t,lP+Cu<0emh15QHOQZ:'?5T3:U;uP"n/&#M-"U_4tKhl?Q)Rbk>M#QgD29Cc#>X9[LM`M;XB`g.4Q`P[jnYop9%#WNpUrA@`6f'M<SOY1La>\L^^(utmS0&^[lGrr(s(J?;8QPU/eMBB.&Y]5<<pE1ZVEgE"929cU@K6U<l*K%4o"YP[Q\\WW-67,/P%qAaM]kY&=I[i?[>*]bC3"H4nbCQ%.P29[LD(64\TXY?!5X<9j4\i-Ek.KmICphTo.b!lZijkaU^[IEVHbEn[4XSUUKQ:6c5.gldq%c!lX_c&c15:L64h;q1i"?d]N&iiGh1kas3t@LE"Ipa(j8;0\qRZW_gBZL%^XfB?';%09J8`,[`5.1V+_W-d79FRhO]66r$KQAYh)%WohD+2)!3[aQ,,$Vh?+l^H[P%i.09Gl@J_smBfH-?BJmgQK!lSprQmMa1r=HBRU11c;RH#_aC2dk9&0+IrQKlW5]j=n3Et]5?+4^%5$>`J1&+NB+==KRFr"gme1RBBp7H>l^KJm1lBPnf:4U^?S`23]C">nCD'nS:V)mhG2m?]g;#U#mM]P<7GcbuA_\F"k*`-WW[lH)2%2#nd,a9;>1[>6ESra5Xk\E#aRKF(O97kWR[h2Z&^o?#iN<Esma?nqZkUm0'oZ\VI["k*sh1$?/bRaNEG&5,Ic$uso]M\^T[O@-n7%;bW6AID*?NpPN1s575:3DA/*S8Z_$K'><_tn.<G,?)D7Cau-8,Ot9('%VM'7X!gBk9VE!M&V(Sgag*DsOghXBmu)V[#jaQ=Z],;W%!U0q,No*.q+Ii%APt[se\PY9.+uL0/V^jF;WTQ2^C37@.Xr0pq=#_/T&=`#_po[08_!eR3[*0?,Zu2[!^"SDA%*?HBj?dTn+5EW'%^b@'<ZMb0C9Ln^(9c\)@\<o_Ves"t'%qQu`WtBiLl84=)A=tn5YdaZf=4p%bO=`iYZ_h1]`3L8PQjnDO!km$P'>M0($0JU0=g]Co%aPa<4h_c5f>D]J^nh"6qP^R[/;9dBeF9R<'roaAcK\%ku-Jkk$XQZfqUjl<bOsL8q"#R6rLh<er^^Vio`W_<.`4#FmlG?iP\V'B:%J8ce&ds&sqM^6b32iB:EYgM8RGk*Wj&j\,c(rB@nD?8Ofg_V4H/P3B*Q9g!@jOZc:bYk4a>?pa,s$]W$$#$1"7t5+%S2[F(JJ_Nc%SO6?m%2^U?r=Gi]T[b)NH5F9"01i-.-80iUKj@t=*XN+E"=sOFD]9UWi<t6213,Z1ZKLI&%DX^L9tg3*^<*p9aN"b;HV$)aY"MpV%q!PnqHpWP>iNC;0YcF<WW02%Ic&[l-qj7`$`V#V=n1UmFrK+8+cmNR6Rb/G*h-aVg?TRbs+&oIp@jo"$DdCTN7W>b,8OHL'+[IK&%\1r9s0Z>C5$;UPu_Q6B6qha,r1#GV*TmTZK#DoC;@\,0!4oNX:apc*2pLF1LR%/*d!:@;TJ$\LJ3L6jsKO<%g9`DrF<]@]b74V%^%hRhP>i:DsVB^[!)Oek#6buSjgA,I[*5Z'$sRUA9%:a28Ee&fH6F/[m`#/;e$:ad-#hm.kpgT^nO0HSpt%<oUTa.5g[KJk$IK!&7`%0!:gPKD8C%['2CI)n=E/]DX6q$9*n8M+`AfQF2HYq*Bs+&i"&2J4KnP[fkJ)^Y)5:=GZd3(kqZ_NiC.89BJC-h+n`H"XVOe#_02I%#.=!FE7pEH*F(Qd?Vu)r.N,1tBCSa#e\m6u/I*XY3@F^*cmX@\\ENqeb&2_:1UdNX;>sj:!6'D.q2JD5l7IRQg_&^fbnh^YAEls.%,"nu["Fc2IhR#K%3am.%r8Mq0.mCOe^:j'XSc<:Rq9eRq6m!W'QY.9JT/E9Y+Qa>EF?s;:Qhd,'UmOa6SusYqfmr5h[=-glN$Sd2%pB[Oh0p]O"8C:?ZhIOk9n&rJu]6V=hb@!GthK$Bm<pt"c80^fAoaV@4bs<kubSe<'DeUs(buV,c+jn5-@'mT9)\qGt]W.DLT0r+6%6g#3b^h5heln\qD'%?"_mOu"XXUYVNUK_/[C<i!/-]>Qnq=9sN"gF\&-!/j:9W.4/;B:X,p]T9PIW22fb^n1MfH`4%iZ1;c#OEN/%Kff[)K9k."MX4rEU%WF;.s`;C&^kTVoc\#BB\?pmf'NSe3Ga$@M0A^_<(1ZnGYp-V_@hm%"h8TCjQD=>19!ZA3tZekD..0f-ihp*%bnNu\;T4B'4DeV25,K3932]3Z!P-n09lk/_kWfaS1+CEEgqeoT]1P"4KoHW`)EcAJ(#.P+==r2LfJSotgmaUS\JA38#^`=Uk!N%(%aumG[*%k.J=);';j8?lJn'!q;oU\5&VXOQeU6#kG5R6IILF9+54f4M3?A'_f90lOo8)R3\qV/PbZG^j3lIehK^C9^J[a.KFIbAZg%k5JOddMBo1\V?<1+hgW5ZP09"GDI>@0+*p4JYch\>uV)?Lift\s3g1u&c?`^0jq>Kk&,=:'XMkSG>%>GG>?1kd(5U92To]d7dIJ?%>4&^UR?;9ODL;YoTPM(g.tn%R%)RNb<ir4@M"@_$HuM>`7&]E9Y8:X;]aKLumi2*",9nT#[#dUQBBEg7^AVdld]U@mJ$[[ECEKl?%AfS9L@AQT&P8dLN;@YCVE/gnAOM]k#o\7X#4$?i1ej^d]gFJ:f*.2t`Hl-"j[MDF!G3M;sbg9*bHR'C]Re7OT9!6d?_C!0SBLLB9%L'uHac)!R@1[_ofa$qaUqC<H/H'tPQC6s\GRUir(PU9fAf/A.CRgjC4Rk6%ZJQCkp"&)!`I.j^$a\;e9Z-I-_.cY"QYJOp=L2(86%StMPMMldE"Ug).:fWp<HKY"?MF4mM6.f.-1(@RRt1\9&VgKh<A3?DbMSP]>QmrJhb)2T$l1ll`@[k`=l11ec_L"@5'A)ZO2:5>f;%@YdLIjEG``)1HMO:+"C$?+EK7'-+M&Xs)[kN."Fajps65/=179%;,hZCH5rKK2lfoHgY/XO4Pd<Qsi4j*S*E)$oZujns`T+d<<!N%J2iP3B6XI8'WkA2[\VFCY<*12O6im19EWFE,,)Q;_,URb-IMhU="mBL)fC4hdLDQ`8TlU6epDkik?q5V#_.q;1?reMgK3h=gTH<j%T]BQX,^Q.;^=qAHPiRb<_qU0M:^MoVdp$d,n\2LQor<>InK5"Unmf^OOL.4C2At4d#Q3:6%T)JO0l=[6L:b3\o(h?Q#8>s,e,rXQ%q+FO6B&cmWRuB,LHk-u+D1Oup):D>g':UuOjtViJbK9_%<gh84GWnJ)6XOjuALQDK6jil%JJ8l;"D2(^6UiTu<2[:d0L>o`%N7u^%;p;1bgb*e[>>"uB=kj-ce^b"#/c]BX@\sRW<KgJkjjhT?,ZRHRHLk\^4Eni.Xt'Tgc/o_[d[lm#)LB!47sY%BS&BEf!!ONR\XLuf%<LY_@5@L]]Ug&Kn9fAW><Z/g1U9bUMEgZ[]6Z?0b4X#GO]<fVlk'jTn9bprbH95SpMugnTUiP3O#@op\q*RVC2cMBqF`2s`Y&IPE%LOt;[WlC+%a5c)T[gG.6/A?lL'qpbKhZQ'kKDmCrb)J.\@B2C3Z)I=k+O_Wo=a5[%Fq4+j!EY"d$"Vj";P?r9,Jk*X`,@m9=WJ8F%7k5[;:EBqIS`TqaW?pdU7A>^5,Zc["2NU+W1oE/rZ1#k!OR^WE0W1E4ku+k_l8jXD@QC^d5a%`8L]g><j*Y5W+mORl$r9[=^HV_K%G+6P/V1\X3N;mi4[e=h1Y#mLK!hB8E[<>iaD'3pj&d&Ae1)4'FG;mJ):OZB6757Z[Lu-bV-A:M5*mW2dna2NuW2gn"<:-4=HQ']5%s$"YF'(4j:6oNBC?c89&Oq#=BIds;d@PJbZ3\M:q[e(Nc:]K@.$r^f?&""7mK%8(X<>Y$+Xgreg>b-jrTbVXlrL8e4/9]5"Ep=^\%n4_1!YiHH*81Gi+le,W],orC`lg9H?f&De($J#1??$`W)[ii\^V#<$"r6>',f]&3L_OWr`_$]`,7tM>dHXreFg*Ju]=\Y0:89=\l%9/`Wd:$H@$9pEV[m#0Kr=AZ;'k7obkD<XUaoarkcQR@rpQl_FVnT/a#@qm"Fr'?pkfn,bO+_*OWT!5?TeGr#-o@Y<en/]DY[4YEo%-EETS7iOUU7eI#WILuQqD5S5eA>&"tb`"4T/#67Z;\4u@GFaj<iJdg_(Xnuj]SV0?>H+2q)nm93^Z1&P*QX\?*^C-t?lP[@/<lk=%J?<]?<#M9A$+``?'r[:!J1."Lq5WDq"Pon7>@G45%&/U@kchP;U:Z6cQOX-d+R>,X?FKF4N%^0#9_F'T3*F*=eP1ms&kn9m!Tj\(%r6?Tkj$c[qU#8OHK%Fp.q!2P_Tm$X$7AOB$j>t'/8ut*YESgn%8lEN*Bj((nPZj"^.]iB&aWjUM/aBq3DZ[":CQcqk%n)EuODkc!%M;LtuWe0hfU:4@u[g:H;'Xjti.g?<@jZP[RmtXe;D$YGlle&$ZC0VBm_IT.VZo,`O?q?PO3A38&Ys%1][!.@&cW][Od>b>4\S9_-%f56nB]%9pLb[-m0jm_9Q^+e+\5m=C[_kq2AM2=r3JI%GL&Bb`K'Tdt9i'![o_,C"E[nOaCJQ-7<!5@/`<^:M2&sEru\_(sURbTLD%J*P=*iLVp;D0UpqEHNTV_8<$dNpS[Hg(r2m*>rb^!O#\\FeG`9ks-GZ>>eNT9W6+Y]okuX6#-VO=42;5@238;,mWP-0B(>6LKktC%mIVi'+e3SGMut2$1'E=XqiJs'3m2@@n;P;,M%Tf+@$h8Qjt_]LcJhKfo-Uk5*Z.2C*a;?G7JLP_/>O22Y"\15=c54FU5K7U.X7eA%N?g\=/ZOU%0_!n0M9=b.#42s5GpP]u>RR!&6N+'1*K^lK;gt*A8J;j82V/:7]<?X5S&WYn_.r;(lidX#,SW-2^"]8:Bf0(0#Q=?Q%^NcVO>3p]006J6T.M+$0(]_OnB_X2'+kMmK'mkZYe:rN\6S`eaN!h4RF%pBR\E80Yo/jH)o<Cq?DGl?-&fMF=+M_6ML-VIX-OVsO%dD?^HQ8f[.lu_PT;lccRI>Njjs5:Z2U8r!D:TT=MV537D^3J@*%F>f<"?(.XT3^<V5ia<tP:d(/aX]ZQNk5b(%Nmj4(ZW;]0RMMs%[Erbh%&/6h^4,bb9O$5TCBTsT07HnoD+AH&]5EJo_0V03['jB7a2OU%H(BpGIeGo(EOj8Qj,9("Y1k!3SVDGulQGI@E)&[d:5&eo%j>`'Fit^r7H+,&Z6t[:R>(Qj:D?dhUbN'(?L?\A]YjE7gYk9[MnMKL0+U0M.-\RWmOP[b]XtEd4I-9hrZ'MmidWE1AATdHl>hRt5%Q@4<dHnV0<'2+@[A-pBD'TT+^Vr16G"aY9h?\'c=<A";/UI"Uds)`<\^EfG7A`?H0NPCA=TCt1Znus5Kji0od*m:m5ddj3Me<K//%g+DG))HVg%\,"V%>uAdKPT2FBD3Dmm!?V5F,_&FL8XApOBq9d:qOjk)HRH)T\uD"-D;oW$XE4HiRGjos(f%/Q!)2\\9cO9Nm'U)l%XmQDuV>C9*NjtuEKR-9qa5eD.AbD_1AaKLBmu.CO?2)\?_ou)1-PngNo/k90rdHZ"?QC>cAA3oBr3_&'=CM`=i@)IdbnNdkiBZ]i%l*=50<cLhEB966"T-'=%?pS7g"ZZEjl3"a@=#5SHrFFI``H`Wn];jC<6e@"l][El?A`H*f0\H"nr[Kodg?i8B5!"@bhk4!276it!%ZZP%XaDc`M<.su,k6Fr[P(hAi\I,C'&IMtf"LOfn&3%oHgJ_L;9;"dW*S-^jp-Cc;3\e,IFS"_5qrR"1d;dBLe>&32f9@_'OF#V?%29b7n1IgA=1CIO[Sbkt\Yju@WSO'mePP/RVd]r&`@/m#s=H6W&jQ1\lG7#V8^#n.e1(VhR(*A/!cSrc%TUA*^R1G8"CX=I99HQS8%oY_BEYB^In0fR*N!k[P5K,tn?s78s7p_E/6i%#GOD1qQ[qOe/*gG7+hp#cRV3EeVg6?=Gra_frk)pZbgh=3uX/1AbR<_Vd3\p7I7%9$8CQPHL;\\,l];q?pQSA>D`&4ga:c)BT:Hn!3QqiO)-V0LX@L3!.g*2G%L=ok#?S`nl0Y)'"EjRSm!C!JgZSKSC%6qort2ct<g:%*`LMu*UGHb1p4c82S,1N#?Mo+N7fbu!!EdFGlM2&oAG7GR(2EXEo"VIIge0*dmN*+N)%.@arTT/'kdA+$$./2#T>f4._30H#;E!/%_4`.os#t)Vh^c44-=*Ph6f6K^i!,q!!+'bd0`&n'H3fs\#QX[WH![*"Ch*bIAqiJ0?>/?94D"PsOgtSNEah?'8-@*5ZmcP(L]Vps%ncEJ!r?8Mm;85qFOQY_B(7)"jH_.j`XED$TqH'kFVK$jKninMM,CtR?r0#M;jTUEC[7c4qVc'6?P,2i(L8BQtCJ'uG`($-:):'9W%Yc7)S.mpoMp(MORdrGn@Q-Ynj)Uq^qF1@]W<@f?XNNjJ+p&Fr_5#V`T!:!oM98na\1T)]Yo'[cJpL7t=0FScNAHkfK"NnC%&7IBK%?<*Utdp>h\'`]ZMZ"o@(W89hkiR!VrQl*Di&?In-HeCQb0)?VbGE@S;(g1dM!L*GTG<;)^q7+/5XrZLK/QrS.]*#@C-[S0'hP!2H%V&:[2[CF5[c/`@IEe,[V/nC"\(?ZiJ+0*!si*Mc3VguB7AEVo(d$Pnq^N;C?ht.7A@[GiThl%!Ec86Q/au4UpLT/L[W9nu&.2^o#%=<uORLZiq//CqELWSmOX6XI(oESri""$/$nIt'^"Ai[+5&-^+9T$>S$ScaJ9aY65(-Er#5ToAY3<cI9kW[74FN!Cid,=@!WVh4LG%NCLH)cI'32LPG'K\5=kndfW/mU6()"`16'-L/;Bjqsj'H#Re-Dk,HO\55$!d7;ti&!%9gUIpc<aD*s&p^Ho\,X+hqY_E*Z-ZZ9R3%0'8qCohM:k4D;eI4(aT'hq1B@?!(f&J7n"%celK':UJ1/(9lR/kolE2Is$@T_ID2c:M!oOWWfjt3r0:`Stn^XU*Z%V6W2N]*d[=(%mV]:p_pTh-.H*";bJ0G=Ptch^?%O9p#Pm/<T@+nI=3fu@?,Uq%Me>:=emBLq7!I8FK!]M-S#aR!C1=]@72+rM_XiA66+R&i7\i.t%A73$Z-C2J$CSO)`4%huMZ\ici#\LU=A>W8sqp:q#g][%=YPhpU[sn^r/B[[<Ncm"/o^HlgVD9-Yq#aOB$!@X,*[V%HA*[JD_Q$Kl%0O5juP(++Nks2XBUmg$q0$u?O@d_ZJ1A;8>=otoF2W#'2Nd>>CqCJ*BQ9bW=BI.8"C)6UL2n28jW+s//QaER83j_QS%eCDZ+BS)5%0]lhY(e782,;Vi8+L)&S7\;"28RH#<L`qKO"c#[;Ub(%750K7k#<#u&lgT(dQ=klu'0uDu0G-rfJ\LA-Z=E>7=Y*VT,[%o=mVdg!%o5t0$/V6"s?0*V*OdRQq@PkV:Bab6l=r)0Nc/]64/9>Ng##OW4h%l5BTf[f_;fg1lLpt7SS!j7Lh$kX!4.\:Z]1n!qLk!"4QEdOd%BNdZuA(^9O9L-gh)"Yu&BtB*G$=F"K\1XtaPc[Ju@6/q^OP>@^-p)kJ]>_g5f9#>bJul#tCOe'B*.qs#@4]5<6FGm^8PZ9NqT/6F%@%[Z"VH2!=+cUP:$WCI<a+WY%3MO)_Rb.=6<XUqo@@Rp^iAuO#H]s;Q8]MSY^t2^$[$a^S+)fH9Rrkp79!dn^_r(SS6i'r;f`A?o%Q<d(SEG2pdmcd:Aaj25p^f6><!BR\89geI+4JV<gV`<\s;5r3ADPoYTp1)>/o/]DukU'J(RURA3>?caS6:A2X+S+hGRp#)4N'1!]%+X7KkQ]VO[r&c\E#\@p65_JA=b?[\6$+p9;@4O?%iq8K1Z:`?O,G,,\5605+@W8l-ZVC1a?2PQ_Xgk3kX8ok2;__=G6=.lrQPHtq%1\Akd+ece&K"3?CCe!g;04NA[UXBlf6@,V-Hp@rW"pV7Bl->D"(]%;0N_J1-QBmX`bFKbbgfBUNM"3nfR>0LqL/mdoFP2EGe\DPF%/%Z+YfRYFS2Gu%R.iDVf7TQ5l-7,=?#6e$KE4^l5$7]\nD]0!J56BCN]9aCrD+Q](*fciCb>]]/#M/OCUFhd1.RObJJgSZ=%egk3%ACR3%*%[/>k/f3P[95S/&[5*"d[Q"8?a,[03i:4]7W8<#e$5<AGo.S.;qZQHlXsDX-UR05g9Bh$\K0*,d#[!TUh$bF-UR,^P:8lh%$BZku\J`WUIS".J<!'<Yf?S&#!m5pUPZ[lW$c8Da8<on]%C8!tZl5GqT`Ddr.UaKnfkgU+9`hf[/O1!X"pA'4?ci-04@:nU>o&fF%M(pc+b>`ie&BbJFZ\T`%$kTu4i_F8'2)8spR-uA-WUPQg;;j&nH(>i/@6#7k7>!lqe-uQa4Peu'M)!7-iL'GHra(S%bNf?Y>@Z8$%"+MK+_h.RY,NBEOUa2-S(V*-[VG_8Q%)LaqT.F[2)XW(.1F^ck!-&\.kA32-$>7,a;T]]h4G[sRK>UM<l:WbXcp>83IF%I-L>BJo%_htl,[VD*j_\W%%/pPgVb\Dqc3(s8q<ZY\aq#'DX,)E(:Z!JoF&Y,pGB\$W^!mn89].M5E2Q"]77*/fU1h<mB^P5kkL-MTs79Mqu%OEJ*:;!lM\-Q&^KB$^m,1mqg:,q`V.k3MY5Y0PDKAP;X>1^.hKC2P4jZ5!:K3t'DdX!%@[#*^bb_l4Ih@'*dVE2A:66cD&K0/9p5%+1<*D;I)'lh<I4m[@!AZl!=iAj)3FTb%\WD8gcZ&aoNWm(T@Y<5g<-]8m4,#RC,FZ\PHq@l0\+kd^Y;9>A@K@l];)5j*t08\PCZs%)7A-Y0!2Mp4TI]1rn[VRn,N1Os""'HS''=\+6u/h0E(G@I,(c8KEjc-_pfTL62gXF3@u]b*W!%7)atX,M<`.%.#O7;#9bt)$sMNd%>::pdf_R9N7Dp,N)TVs@e+rJRj?l'f,0*Mt>cKJ2^,R.Ei@Tf#\.e%R=Z)P6jVb`4<%E^t8I]N=as;aK\r#5A94+ke^.[X@YTTc9%Z[8F"0\ggV;kQtC2E`qsZoS@arrS[b"7$22'7_5eFFMVE_AfFWX\UG4.bu6gqfsls4`++7o&0EsdJP7o9a@?f$eg]%_"BTsFi$Cn%#7=b'?2nJ4;X/;ZK'R@-->kELN$o0428Q[aD48_"RXc\E^s/!j@Z[:dY'S.^dBjnXM10r`(5Hcj5kLK5_q45*r*[c^mDY&87?;pf%Pc&Pp+&F]=+m[/@+f$M0ZQh\AHhq&BdUtJ_p#oJqL*SGq*EqW#NRYI'rte3A.C[k32.N\e4,Z^[>4)o!]s(YTP#`Apm$ViJ3h>g8%;P_SklF(9XgTAcBMk5C$oCL]/M/LV_Sn+APQUV%s\A2A[G*s(F(mFW0m&-#l_1*B0kDdNXA>ggBjI0a47SMqfBai?(dT^"('=2@f%,IHC9C1T^PK0)Z8V9?l0fi3kuPG?MKD(.W8<+rbP/XPTR`B0qPC=C;&K@2-F\$s:b=V#[Xp0Q=c)des.)\GsXK"gh1c&HRhLPI[F%+c!_Q-&kYF_?(O,ggdBhL4I`O\P4f,=QeueG"#\a:TaM&SpWgZ_k;'H5!6k+\0XVRKU)0P=XXEQAZJ_0o=N"."*.LW@2bg2@%iTt%(7LV<Dr-&2T\@k`*K!4S!8^)@'sg?iG518j![A/AERH*[pqS8@&o?G9MIROO.q%#)c2qM$::Zrq_]4,on0I";S"ZQ;el>1IW286m%LS;HM(O)&8B^ZgAC4]IQ@Oeh2*#!]96nQ\`Z%sZl_c:&jqaSuBrHjWE&p*rYa'g^d^+>Pn%t;&qg\kJe=Z(4/K?)RG6XHZ#MR]MK%8MDX3NUZ<-4_9\1'S5cB;8U9ZcT<594;9<*dR%%F71Op(jinD\(g\1K^`&AIKm%fgE$X,k=YQ:n)i=Q*&OS#8`[hdUR9#Ju!s4cf%@$f`:?j8`2ZkOW323k5&?lmfaQIs=qS13ND9Fl/Gc+tsu94HI(p/I:[#L8Z[EHqgbM-og\Xq8aR-22uj-W^S0f&Oun4A!<Eb^$On%\duO*a8JHN(niDX&i4VEh9Yq'Af8>NK4o@3U!j@`gUiRdHTK6UWPL;]%FfjD"1qnqnXH.$&eAR@ZIRI`RXo.'n`^"KH`6kX+Ji[r%CF50*k>&I7O=[j>ol2YkWal\62PpFc501L_E<[24*-#hKM\9O/<`YM)o?4h'_1t$dL;SUPl.+'IW5E3L^JB:@#ei[/gNgh?LmtYS%K;(X9(up3llBghG0K^L4Wh74?S75)Ym[&X99e.S[[rM\93hdcG5iB#$Rd8C1ToM#R8SpXU2MS?3!;A9Y<C*p4?cGA;*!MA7AN]b5%+jo,'7NsTA?G^e*eg5P-G`rqYs2KH`Xm&_E]B*hl(oG/kp`j63iQfAdl&!n-gR&rG"8`\7^tnNtZRr$8W7OBVe=QbEj;&;P^l')#%<nZ+4FE?Jn^jX^ghm#?3+*8mm0>>KP%<K73LJ8fQ+)u#P@GtEpNq_0DbKEoi(9^=g%imqSDH..hlra0;s7RK,\5'om6Q('bYJb(h%mdV=[hu7lL?^T6Rb_66b<d5hdMV(n4/468lH34@&7rd<2L`>%RS3+!6271NM1rUi*ob7u7]s!KIh'VH5:PXMrmqkJ<U`<BJ[7@rX%qED[mfE,E^jY?97AWuP\(9,<@45H6O*0+G)=C8cq%&;9kT&]GWO>(UjE#nKNff^ADF4U0V-m-uRAHUg1]hIk[_2b2aQ'2*mEFs3h%qnXlp2Rh+L@oQ;[P*r.Sm[u(^::e\#4M/A,PJ.T&**OM/@nMJ$CY]7Kfdd#rK8";2lBTBM'as14hsU/b`V/=0(gT2:@@N]GpRL^m%C-bV>b^L44b$WT'_m")`q.epsTi1?\s"pG-o?Eks;jri_Lgc-K^CVF((n.Z5NlChj\*pQADhYARh`9?J0rN'9f\noqrIl+TjInY:%Qk>Ki?27'C)[dADfV(QBe0pF\.uO<i$1N\]E"1._HoD4'*WgF/'&^dHYi(.-s26iu>j/fAgAW-T`!/Hh[@H-Z?:uQZS+S;Kdg9/D%C^,Xp.nra#!.D*_!Uf%["Sf8K@Co^.9f^9J)[l40^e>5(6B+$)M+G++P9[gbl-0n=&[8LZ/W<ObLdpjqH:/DhniAc4%'jF14g\86%N`;&>F-%W^Cb,ht9K,kl^V\8[T5WUq>?D2Iq[O"kg3UEP_H=P@<S0eG;t_*Z=rZ5=W/MFCYcj[__J87XH^lJE7RXo*BnZV:2g)F_%'-'$9]1'-YlPTQEaR<j%4)1l[ZHT,Ie\]W^5Eb?50Y!^XLE\YN5`"!+s/]qB!j]4;16FqRFL53jgKH0;[+?:9!k<X;U5]D_ZN*[U%XWWVYrFiSs'!tgC1T_F=dNS2%TJB$&n;,SKaE_7()Yk?hC:1RAWO/VSK&_BqF0-2kL<rf6[9@Z)i-.\lot"GT7h:bB4>(M3QrHP!%LGS="Uha_,lhD:K<\NtjY,a[i>NlC$apI;Q3;BflGh@pPcZW#0hKh*6"4KDc91\rh<DESLl6U',aB*h"B"m,hYKtd%lifHXVjB8'%B:7]joQW@]X0BkJG`3X/>bN+k="(0Ih"uMg)+"BHic+&=%1JT!d&8E1gV-!5'!BT6Kjdi"F8*.GfQP7s0_Oa9CgWOEdac'!4cOK"%:jP6V)sg:R5;TY3"\RF='VUeootE`<lCT$fF[s;dTo'O?>p&HA^e?fqB0NKof))HC<?G("a:te9-9eQ;AQj3C?pN$**R'^6ZSL4(%7lr+`:l'ir4/eAE\K("08mIU.["Dd>><DU@BBSoEUR4n=aAeoY2tm['[kG=lrE*1*>U_--3B60Vh5s<?9fD*@5dmD'@p:raVrMKs%VBmn"]a`+M/t'S2[W8V=)Uto0ACMtOeQk0POKBKbQn&F+:<OZ#*mVDC*9Z;QWcQmH`L+cCe]O,/9`-S=k8*3])7jjM?7$pD=8O^(%%DP!I5rj/8'O+Q`<-@#i$Ds%1XaPX<m-"XRGq#T]BP3&=ALKLF++J1W]Te&-W7)CJ<ju#hG2V/s<Xs!u-jKiT^$*\i3B/B-+]%?O%g^o$)G:RdXB9-a3l0?J4\jnjW6LE*G'%(qn_-=G+=:hV;jqGJ"\0<+lGD'abp-#Z&!=R[!.0,..0:gk0*9o6H]&Js`KkkqgM&Dga%Qa%8AXq,Q+l\u),Q(FBpO7X2L2o,7_*OZ.9YdX#)n?&h5HgH^QAZl/n7g98a-%7#pe'E);B>`_Iq7#gsa)r$/hQQR(SJV+dnJudZ%l*('))*)Ip9!Wu8:(LoGqE9kmY;Ao*&sS"s;D:eWYXZO0dec&Geli7$1j\$+i?/&75rIjn3fVF`]q:Y%\Rpq7@ot`Lc?`tI-a>@#%G-;&jP!+o%)e8uD3J.MJ22[bfl1B(Z1N1=B8oOHGR*Spt_kMNXVj3>@o^joRVfn/g"+BnG*Q(ZTZTWECYom.0Fp(IJl](+[KA'1l%4Bs^/nD9+q'W<:nbPOhrN^V!0@prWU>!;(.=?Kr=S/$IkNYmVA(9R5tR$4lHd>O-\BAMMK=J&W2(=qdHd;"!b/m.Pl%t`odNgqoJ%<t7%L*5OC<-<TQtC551cBr^l@PUhlJYk/VKH2RW,.h?YYmpQ#B+,U.\E[=]]a^%GZ35c3_?g2SW&7s+1\M?iibE]80hJsp*3$ts5%]3n2hX'C9b8Y;j-O3!.>N&M,r,q6+,f]]aqc;'c;C^J:Y/QC_F45;/^icF3%$UQ.kP,J*o\552D'b]7fjXdiOqq?8PLm/BdM%[YB%X9uUO73o.>&+;h9%EgkO%-(A5P:&)k>0V%1bZ9pKGnPc^&opPU*\.$SaHJQh#=jt7&8p8=-ui[RW/a,gYTlumT9^PocKg%[TSn_c%r4Njk9FS`eT:\$tM:&,pJ8B4G@mQUnR#.$&O?CCT;U+gN;@j,_\Ui2)NZ_(l$bqSYj9q)7j[n!K]Hd<.:QXu4Ar.H7!ePpu#("=9%=St*B[##aV3^=r8l+I<b_Mr3`]H5eF)eg&J1@;3*-;a-XhNOi<%bekQ0fUiEpIl'=[#$`648!8#Dn_]mo,G[r69NCY->29L3j&+Z%RPHT?>FDFQ'(qqlgt5XS@TKS<I>A'C>eN@dM)T4971?"Y=gh]g'/pPgM#fDD,'kH:4(fSZqCEm+3!,!Vc%'6i1`KLCE]%"hnL,&R%+19=c9LPT']iKGWU"h!043GLnh>0Uj0^,`)ipd?cR!Akm9Y_]@N<QQLG`Wh9>h"5C<mq:aP"\-L;fKP=)3'dt=&_;g1<6KX5s9?h%m;B>PD*Ge>ZZBRIL;e\g\Aoulp,\<*Qu;6r.DV=r-MR]Gj(Pks0IFVM*QkCk1:BUI@i`?&"A@hAZ'0'#_&E\U_#Z?i@-%;a3k%gd%=>dYd*r86(7Kt33<l96(VdR_[1)IiJ$:\S>h\*,2j&"Z^^8cab]rpud$:M0'VO@kIcEY9^QJg%Jl9efI45$@VoS[:O(ekoP%4)Ml%4Uj&:HaqnT(cJj5g,^^e%_"fG=(F*Nm&hR@]gY\n1k#<gYs$chlrN:nS_kIKn@Ms+2XifK%_q<8TT-Muei_?K*I;Kgr8=qs9mKnP%^N1[k]7W,YCL2X&;c:*#FFi4nZRV]I;0V0bm&gkrR#Kg<Gk'2+m7+C-WLMY9'["K-B(rT6hae4(*a0bOF++]OnrZ\q-I)%q^+ii?%Z(Kf1"IXUiL\VC!X#2U7#"]$[d["<>_hhphQ]QY_kKHgNiTH.d`YJbkYp*he]?1JS=gf7)Gf1T9@]ius8C8?)I2n2[/;bpnWSHXm%+D.Z&cYZ'.7:pYoXi@JJ/?X0u+NB!Qj#g;^JB)\[6@KJCYd_Bp\L%h^O'dCj*)W2#"$2G,W@KPiIh96o`$,_8gYkI[+,6uFgR.X*%P(_$_FDKY[RbmDBfDCi0kgYs4mC=Ld-T&G@P)`qr.BhIB$,bHS3XquG5Cd"Ulf!bT%43BV<^X-tTMqW1N>OO&^7k$@<`YS17(9&;%r'd]GB"fN-F(MX0e+QZ#:n`3K.(E(!(g@S&>'augGrF?NJ2Q`s;Y@93G8i%N?VOQP&SJ$!p^Cj=9blkVQ`Z?/jaF*IO[*kqga6PQ%<:UHd*7=RJDL]bKCfn>]c'DiCeBJ,nQ"c3FH4UK*2eTZg/&VJ5h@JeLbhQsi&,*$+L`9_P5:RDIi9XkB/j2IB.0VlBgYS@:IRG`D%]j\&8HiA!EaG]kJ(dZcTi\7''[g7.Fjl<]NjE?h2Y\"!pq&."u&5?@P4u81q00+dD77$!UPNN0DAVEsYp`YrW/8T6=5].)i%iC8F%GNTTsnri7@5bBMck/\A1;Ms%$X(d8'0,('p[Q8d44FFk',N8PCPb/[7O8^nBVJWHS&p*EoTq['Wm3CI2or\XC&$8Z?,O0a\ZLs%T%1O\TWBtr-kmfg\t*n=tI7d`FQbg2")MUWGV4=BQYEUm;'gU]lJN8s,=1&c@Z(0aM21@OHM@GZ`UD<pV(F3(T2Rucu7SQ7Z<e'[p3%4gh`+=U[4^V()^[AMX'SO%k(%&a44?iU'Q@nM6A"fOV*V,nV'O<WrM=4Ebh.1\lZkh$>%O&YjF;F3=0!/kuh4)9u!X2/qRccAU!?%cG=FjUXQJjJDp:L!_]$W[+bl4AHIfV^NUq.N;[S&=s^3qif[h;[_0/U/X<%X42ARqI&B)Z/30_C/,66O-K;u_?@RXmfoCNqg#[2@%iMD#o0+1UlZmrEFn[#KnpYOfA_]GhMnFa4S*UGnZ:64kJ@t/gl0?sh6fGGA!lX9U`<:RmTdDA_8eME7CNFXh@b(j(\>DbR<<IbQT%Y1GE'P7+KG.?F1dMg^o@cBG:a`H)C4IuM[YPFa"LB>^Llq,r&a"_>BX.\tEo6=As%KC'Hk#0I@9LXmR_CWR&T,/[cI=N.%k`B?.s%3tb?)_>KfG@JYD-`tWu`Kdl#<6_]tdFj=)Oc,QA\Fa1@JoB*'sd*pEgF&aP<TCok-JEXW:k^)&;Ca;hp:C+h=E.>dW+dB:LEDFI3%6(!r%g_oSE6("jh4Weii,!G+:psEt1R/-nsb30$J/Yb]Z.7JM9of":j+4uX)Ke+"$bsr:n[#Gi_.sT;?;14%+lE<`6^oWTW<NuLp%JfjAGNi@M<_3A9bV`1c.KcN'n^3tcRZ[Q$2GM)n<YK(u@N90qC*QHTj=f"8=h](>:U`n517s/?P8]7Oh].n#2e9j499H-k#%7J1g%%V'f*K/9CE!l%OU2uCfb("AUE05)gi2EN^a/[[+UTj"!o280cdc'K>)T0>-i)r#`H@q*uTc#FYR7.O:JNW/B.@L[@%M43mm"MPR(%j%JT-B?3).UY(#Y1uHR$22##TB&e7F,?LJG_j=QtH61@uJF'Zf?c!`F]>KtAG749RPcdK2/N#`GY"*;Q6P9`gMR0/!`/h5.[e/#$%P:J5*n9rsS-=Y5C$bZPMqZo6\#4FO"[bhJ.2T]1(VVcQ^dfHnsaWX_F2<7b.G<-'Yo\5bHr[=9TnnI!p7"nQlb?6V91cM;j756@,%LCVd![_h9:rZH+JK1ddETGnLIVXuR42Rm4^fI.P#WQ+lTP=V$c'M]+`;r(iYE5D[<#OKJ7&2*];H#QQ,+BegUl*S%Jmo/<^OKEO1%R&QUc]ioGT3T9^3eENp%YVD@fK$"D+Z+fQN^dV]"/lt&M,cI47Ah#1PfkAZ,HF]QY%mMJ.a?-bDc;dU#'TfG;HDU2Jcdt748`],I%OMija2O1GQYl\q:,6/p=B`T]uNNDZD'NDVTCj#dB;Pb5f#+?KR%qNWl)JUsMO+B^9gP0?o'Wd%jcY>9/k&.Or?*lu&F7\R8CR4c9%,5U:kA2:(`Q>/V9O+?0tlXo7'V6`*sYo,MHg"E98XgS))"Jfds_8g/+#Pm@?RmhG.b&15$7`17:U.Wml*R#K[=uArG@:Dg04I1rk%*(R6]At_5e:b@MeJ\O-]cdqB*()\FZ])h+cJFHR9qpSm!NW"72b29^I^WeqC-]j6%^5\7HP%7Al8IAY!Wbu#98:)a#.&F&T)Wdp$%eC-b..V-<gok"V:Q5Cnra.Z6*7EcHYRHqfsfF3Gd:jc+)[R7'CX4DHprMs)%'bGF,?;!MOSIC."D@#Er[+A,B=ir:nTg!n<%]/i=%m$cKT8VOnMX_i_T8]LE5ApJ8u^Q7bJ1rMNHB!6;KgU<d2C1K+D%6N\D'!&Tf8F#uO]$]TET48L^Mh85@2uCn0jm1/l4UJ6sJ:`(<%Ek-ZOm#oNad',lg>kaTRYX%LQCRrR%l%ja\L\WH0AhNLB@s)]/b2O5.`HZ/_aOg:VEaA*NFWKQT#q7"o-j6W/ATT3%e102Gj7g"Q%g9/F*6.rZ6S/79hlJdL2k(;qLr9F0<r;^7GX:p*dB`<:m3-,C-pka*WZ1aseTC*1V5U/)@ibgU..[$p+%:"?hDN+>BAJ6i$g`SE=%Zu'?AQ20+r#?NGEcok^%*DTO,MsMLP5`S%B4:uWqq"creUao\9*CXqe%'1A^VdZ/!e60hgNnC@YX!pmce(Y5K0P*t?hJ8pK@8o("%2Ou-j/\KS.?>!aF*ZJ[-*oG'b^?h:[-i:;N)k.U/nrmAPD&C9e,?L/;esB]N5W6"`_$H4-n8=M]*oYN97'%0NkJtS[V@Z:P6eE4Y%\C.n5>OuYYi7?0Y2ArIB>?tjTJZ-TS!BWm]jeh=H2jF<$rudM_PYUB,\kYRd;V0c3MQ#E"70C!;Y2@K(V;&0)Oet`lo2]GDm'Xbq%AMOb:[CLm!>KlJj?LSXb@*/1(.M"IiT*n&a<Z(UrR^o.^:9R*/hW1WXf?iM*Y+@FcnP(FR>pDuCXi!TIZT[<5fPfAM4+\&Lh\r2u%!_F'^M*-'DE;^/O<WVO7Y4aVN3!kX3mH%Y]8%uK7ZMWuh&0mB<[ksBO+C!XUq>"W\_khn-7+/Z=lNc+ImX%.c+33G;8Zb1jbrPNJ%JRpdt&K@&%CLag_r"b?HKg:N'-grruo6q08)q&gk>4$<lCEb[Q'iWD'%[KgalqQ4RO_PDPKD*`0[XApLjbbGl]e3\p>XSiF9Ai7l%qcC_;XF#`/&(QlJC@dB,YWDn77$Cm]kD^U[8?:qp*Q3C:hegU2IeRrOT`*XMen71DctJKp4*m<c5@Jk.$K@ADoA3T8r.OO8qSbUL%H[ZLD!KDT5nAT:PCDZAu%MIo@QsQCELu-USS\<7&^jJhLOcB6[oJ4%Vc*'oAQc11,KA+n;e-sZ:5<^m%g:h&-$4C3FYXS>P-kYkg%hdQNOO#R#k>fEWCaX#>J7K^-G@oPZ.ApP8+j61ZT'd-8a\QUA.apOr/@<fnpRH_0R=q!+4>b9;Z"$so97d%X>M_NH^B>Ppm96knh%<F.KZm-A3"6D3a?T$$+aOaerNg:q"n*?MHDI\5TRG?FP4qY@7m;CC*.AeSOdKiFY$&3&t=_GDZLXp5n)HF4G?4K8FeR*i*uJCuGg%YaU6A5$G$)^R!@$It,Hm&c)67PV-G6J"^q=Wd:=.(=[<e-\mg!ZtpS@VPqE[4_$`pQPfj*c?EQ&p/>_@Z/cKl+Gb^RM-d2nfl?#0%R([+P]'c!BJ'53OeMbZ\LTCae$^cWM"CPM43n4qXJ5kOK"o3.*qacV+otU5fiC1o:NH1-&*45(5Wqp.O@7+u?89GBc_%9$']pIL%%"d&u`5&:4']9l`HBUBcs/%%>/*0/X1IS,u[6<Scm"p)'RCJ[Rl.!!lLK,.0I0)HP,W69'JAMo'+NkrTEUP!CV*&,";]VBnim9^71%i#Yg1[E%YT^!+c?_#^a'C.\l+pVH4e_Y<^Y58R2I*m(qs7mjPK'^j*E72J<LG>AGM'/sab?G!+`_hE6ipY[+CC#pR(4h]).Gn5oF%lThG1>@V17EpE_0>0OmCV[qE(,t0j(Rr=@gJlVt+gnV7O2I04XS\EneZC_]7=r`2m=[VLc=M,X31qo`7^L7NXZ4#]#a`?/1]SVOW%>n#9IDen2h71YedUW$m\AlnVN#tU8Ci9Ol_EE"1Ll$"\MhNo7>oa%GFJih-KJ=3\`LolNuF9W_DEuf`5L$(_6>Y[/b>!LY6Da=RD%OKEC2R-E?1+r+>/@H-IOd-Fh+BR^bel)i7H:#Gq24[5eWY$AmBJ@Kj=308I:a(m&14)SQDd8mM`7:rklU#cbN,t<9[l_3niTP=uC%<\(*Y]4]s3lNVrYrBS>;.'.QoGL4Xna$aV"9ONFd[H^5dqfGOsDslTYq/J)J&a7mbYV*71pP^p9%JI"XZJH&,(p\#5Bm$CsjT\g'%R]<"B$5C_:%XmpMb6(bGoRf`c'aN$T#%aW^0SChEV0uBHUg\W5$d2\U0a)%`)ul0eT%D_-4dR]!&M+))g\UjT`Fll:%:HKQFGo<o%,#qA&3AuHpG)t9Q=/FAU-[6ZJ0'@f3DmsH':&lj4;"qCZ7+Jq#S>aP-L:P8Z2W8^RmVifVYF;")+PTXF;=R0>DArp@[OhY"e'',.%LC'eu]mDk!kl:)@"ZPC7:kK&>5d1nAaNOeN7dS"<"")6e*DR'0Ke"6K24KKX#r(_(_8+)d0N!TQfg=rt=E8(Ga0+[DiBT]IgJ77L%<Stk+KmAF'_0.STlqg1ilK(jh^&CS8mt]3VgZmmj<i@;u,/Gn-2@JPd6@0Tf-8^+R!5h0;n1EL'^5L@(5caJHRtOUFCtoO^6X#U7%JrM8XW70Ec%\5mOaf8Tsc5\ofG4,Oq'SPY)(@9BcZJi1+_C')GHJSnSR3Rj@%d&u[^B^(?h))K^UFF4Z:`9K8CZO.5[`N>X]2:=p%Q3X8Bh7hX.G)rt/2W8(%RffM#m+"$eK75XO.Di.jiPq7sT[T&:0[kSK-EA-\'BpRQ9a!n+`]*6S^lGdRDk"eBo1ka=<3LJPZp:)#%UKbTg=c:fs4KXLC$gniGoK1,frnuM_Si=Z.kni5eqa(SG^;7V^0:S0/m5lkJC[:L3$Y0"H=%B!SSRl@R&m`:HU'!_#4hQ<NGBuf%%'2$/t=W<1j_BldDCl'cP-IL(X4jQ6>c:ISHJR5Hnph@,@DA(dkoX7.H6?O@@TYNf>r%5e_p0bpnJcf$jo(J^V[VH`MTn>pQ&eKsd%?t+!a.1[Z1L"re0Vf5:S%Kn6L5UPU;opWDHarp\6,u`1Xi?Cq'kJ0kDeL5M=M2B041.8bS"JHF`-T2TtTs&'Q1q^!\pM*QEK.Z\'%<X@W/r"70@_dTa`"bK;9O\b-[?@0b+2lehiXoUq-$:h#EjbUVL%WYm*)iLU'FJ^bZ="M#`!bSXN$.XQ]Ru;NR2oT8<NPmit?)`](%f>>Vc?@WXA:V['eYq>Irrk8QRL;)?2OEu@=%oL_#,ZVe.Q.m*bm,Cs1<sLKbh`<:j"a,EZ&7`sD8nO#P]C`"3%C6?FAD75G[["rB%#o$'F_OhN^*jZuEekMcEc/;`K\Z^f)(,_19-IXMu$QLXI)GGbklrHO.mh>\P/Sk*<D5bOd6f[i]#U;P#P#]`^(;^.W'4D$g7`Z=4%%'F^D?Wcl/-0/m3*(+m2eUS!]6I%I]*g.Lk^>&TW)E6+$Qhu',D_K]`.EoU5/OH0_:G#!<[r"t"XSj*jHjVVH/d2&+%sqS+/RGW/%7P7B=4ku,)%?L)]k?CJT!W$1^N1aA]q<=^me:ZR_[,fkBWi`oCX*9MXDjE5_2f-%X145Ml0nQ:l>S-0I=^!%3:i.5(Hp:;\$cGW*%l-Tut++*?j,?q,`0I)J(e^f\NT*u(V1UPNs9ORVg1=9A<idqM<IPPmP2JBZtG/9a,$IUW$UISTt;h=Vo%Q/7N$f?7l:g=/+[g)Ks%(.dbmHmHQ)N@rNs6>nMurVC]<p-$N:!$NCOB)^guO-A/4(gau_rIs^LD=M#saq&p7"cmfr[Dti$_l>%>i>7OO07dD(".Nl>''$f;%7_]39njqD-k5u=3o5Pfo^G\`?W9Pf4]$:K;+=$^K=!<?%^n5HXZKEZMBcLa$"=W(nqY<NO(S2H6)!G:>P3HPTo)5R.?\""^&H*X=%JurngIpA!Y]H,UB[O&FG<T%Yl=f5iNG).@6kTB[r3.oY;$Q<"qDfm4MHj\L:/]jjI`dKtR9%Of2G`Cbbfog#nV]@,C,I,Ga5\6:"%$K1<1""N)8JYbIMr7,M=!"ockZtorTaa>B&Xneks-244q9B\Y375&M]VEcdlL$9Nuh5>O#Jbd?cT1JUG>AT'PF<4neGp&m]cZ_l'%S/9a+<@m)h0.L@UeSnho1:3!Z%[OogT:YY;&;QdX'W)CUMUoXi3D_[g%\E9Dg9jDZIU;NEjg*rnIU5j*PcGJD$VIfbq%`dP8Z8W6%kdGnG!d)^\!-MT\r#8Sao-G)<c1*+!.5X-1kI<e.V?>=./lX@Gr&cU!c8:I(4tfSmhbuWj\6V8+<9F6+Gs\qbq<F#QrJX.b,s^Y'%"ON2;G@17*a+^p/'b#61$hhb=DE'=D`IH3Y?sqYaI*=c.%Qt<G!V_-GEO6]:N$O6'kGiT2Ykp4;jD\%U>h@CNi=2@Lnp2S@H-+,Y%h=Qpca6*_Sp"T]5;ibAK8gIB3*@FTaJj;XTO6kC@X^1To:VLrVg1liXR_bR[EQO2TcT4eXP3i:@:f_^B0V.Sb11-N4@Wd=LUs'#=%c/a('8BdjM,AK;+'=@.j(Gq8">6Kf_noZpMbBb#`E'H7!GGEZAKOo:LOR'+P#IcKGk>k8YVF6F#S&ai^2tS$B3jS<fg[<FMa.1hP%5BK4HA)##XH.%8P7s"ae-(6o=H.]KDOgS[;DI=\7Ss!8nQ]&>B]3b0tr:2jrcIMlfM0(JPiG9(i!-S0WcY.pj7/j4B0OF(jd=h@V%Pa!+\!0;I`_-;J:fA=Aa`"9!GN*l6F@4otH?h<iOf$82He+3cSqabWVpdbY6I&+=O4=,P;j@^3W?m1;QcY5^8k+PI#H4C$l*m8=k%TJspMRo0XeBbSB)KD;"qb4Elo/V(mnl[[.DMN,0QBP)$[f>(5?UQn&qno]NA`oYSV2au8Te)o^&aI_iMId(5[?-+Fm^'!Ee!2!WU%]RD*8eYWJ5a(7cF.k%XseQoa>o%p#9o!sF%KEf9Q_7cBks3@b\G%B<PrHu(KnLgcA6dqfMj++tW&]%2U8=WSuK;*.&f!Pr,.B-u^%!.RBjY'LOe<OG4q/S1I7<]:'-'lg;p:`Z.0ol^WVM8lfA"R$[`%N$`'8JRYsIgH;\31mqfO(BQ;p07%VH1u[E/Js67Z@d.DiR[B>%mcL11:f;I0OIJ-=(lmhUr%7^'UmY&HeZ.&60?o`9`Jb$\blq-$KOA1S5tKR?fT)C4g7F`F9Y2>+#E&__[&^c6)u+f>c+Gpk%/39p%r_L@;PJ*8r@>X-Oal+Lka>ukjjshNP`@_77+&7!p&jB=_&U2u7d*Q#=(Da?SkARFQJnF^NM3`fuik7Et2%9*4'_HA#,dbb]=980W%GltM1Z%b25Pp*,=pC7?3::@KT:9F`<GV=9G-1OH<qeubdSN-EYWeofJQErZhO#+$l0YFH]:1f->`S3J')!)\lpjNSpY5docNEcHh%OdNXb27RS-$TnCA+9%c<C0o<L[-C\f@.tD/UQ5eU.h[&E7t.`#N(V2TZ688!nU"WHo@us[KM7K']#PG"d,08.<kT-2NBWl*P0DPI%&e)BPZ>As,Y5j8&E:>7fGAl[(grgbA=!(ST?@DaLYLe&K;b6%u$4aU3['=$""1HAo\WJO4(A94/2Xc#oLE^hpVbDpZM4A^t@sZk*%gEEop"m?g"%N)AeoN0fKp&tl5^'L140;7t)-94Zd3F>OKkAAPuQ@(pNH(h!MmL.ArpMKCS^)ZkB"cUM"AWt"(Kkdhugr3M$!bO%d%7#H>#)jqF63>^f,bfW=:2S1Q)`P,.n[+tj/BRU!jZ8==F_=44+1MJKnZ:^p\*pn=Zjt#p^c[D,Nh*[/D\US?Rm@1()JD1*h;ml`?%joN%9cc1?-@$t?Ii1.Vg4H4/jQRt;"3sZfS\-PL,3#s3^Hb+5['RWR7niT$YH>.Si;d@NVipCCMpk&e?3.scJmVtO568dXq%`Nm+%qh-;\-akc^Vd6VA$N[86ghQ_?EWQ$S/X-WN^M84k$gKo6F8=<\4J4@&!Vuc_G"rh-2`*kU3V3dVI(M"6pt(FbR,?a$\%CIJ&-+_2%4?Rb2H(8inO=RWon]ckN\lUh%Z1Z\\T[WGfHS^m<r1Ufh[b1S+lBf[<#<r-qeJ?k/%8KLh[hFUke9U.GZi/A+0BN@R0><)p_)eLK%Mf3+[MiRu+I6LC9$:eCZPQCQ9?1Ghe?)R+L#n7@J?bQdm^O]I)@Pm9/e6V8dS?S<d*MHc^IsPBZj)-GQ9qC=kQV\t&E`ZNCd=tV+%,p\m$1d+ULI/;]9T[D_Jq"X=WYQ+-Bq9T*&J,N/Ms5cKDJ,f!;rLa,cj*t7Zs1J@.R",%GJ,dQ=r'*FFm3JH/5DsccosX441?DKE%RbA8M3"RSQ:V<!UH_fS!]n=nW;Ie(WGQ.k^k/`;83G=/jHYAQ7?.7iO=3-.8UDoj^7\);ZqI]U!Dl@D),Z[U>_)oBIa`IDE,'t=)%qLIuK--]5T%]`50]ti"se+R/FHN!C$27l&Di6N/.&m(o^hE!^=1k81+0OsXt$!A"B;!0%lks_p!J9Usa1B@=Hcj/.\%,fQ;_86<m%Kb_f?q\cXcs"a'M'`F3<*in/'=IT4Y0FF%$@j?5_Z7\711p7B!@",9b/M`,Os,JL^5@O$?[a>h6;@/g&!8gISk1uof:gl/8WXoP.%E^SCQ-!&Bpb<NT29:2C;1KV*:QV#+ZZRtruh3IHCD>r#MS?nDd&R0&#ko$.'h4%6,ciNN@,UTIUf1P_gW*8`WAg\iH(OO_GK!9io%44K["i[g#kphMGNIAd;"'jG?i[>2HHK+>r*P<4gH4IX-\s.t;%@#4!q+09V4O>)sFG3gS2fN)-^0TE.5+Z4+$jHYhsU>iCoHGf6^%Lu&9r;DRL;C"EH=pe[BP*J-ZK\e!_5@?g->K_85;mR)%L#5#a<\6Icidi9>3V\@OH2`NluF>ZWgd<mk]q[p*X7e_c]G4i/^0>`AL%^'?P30]PFF`7Ja.+L4>N[[umlnJ18d@"(8@I!3+LPQYG(fjSKrA(X*N^.8.p^s7J<$AlUp)1GZ[aYss#bA,'&>0Ymt_cuNcFflKL%EnD;I#?%*'[WX?7CX>_\)#:$R,SB+#*E$,123tcH-7I6Zg@`bG!j\6K_48,GPU+pV7._KV;K,Nd39u6/Xbmj?G6Wi!<4VhBiRV5Z%^N1/lE.O5p=<(dup"a5"Y?U[Zd-g1gZipJDjB:_1P46I0+q$&E!/*qM./dAO_'aLhf#JGUo\[S$H37*U0mH5W^(!#mJ77cpADiU%%bIOMNBN+tN!.h4O]fDrMZrI@sqj9_+4o5mr_lL!g3d)::h<HO6=_I!jbn>bD2e3\)?AF2p+Ic^MCC8?Y+=j$[S,k/do\m.NF:_+J%%!SN"aql"b&UAO0EmF^$-5e+pm:GLa^'4R"5AiPUI;mTb"Bjcud*3#tY[q16b>r-!"<$:h9_n<l`g^aC5E!SgZQrVR"U6U9</hA!%kJ06817l6bBpg@S_65+gTA9jhgP@]Pkof^IKnHMnqc\@`Zb"nfWk$i+KTM7r4m$s(O0N5if;p4-\.*KN9O4;"#_6?:FH2cQcYfD6%c!iIK]'[igBd,S2AdCBB*+N@q8BOk$^bBYA<HP5p[l"Kb*TjEUiCQBD6'B=$MZN&dD9]i=S)*!.>]>rgX\]1BkW;Z!6=rjWd/E,t%^i#.s-a>^?<sGP8Jqa*1HN4bjL+msI)o)aK6u.i1f6p4Q??1+E87e"2Nrud^)<tjf(A6!S\A'6fbse;a$>efSd,f.t<udgHn.!?J%#fJ>7,Nl6h,lWeX_S]-$.Cr^6&Qhi#2T.9q*Y$gH_J<[Fo),h8W_p,rB6La6=tq9fAOd\1!q;I@Fm,KnRrj?S#CfB.J*uMac`X8_%MJ?/dR_Z!r$"?]4NdXElee:iB@m>c$WNl%f?:aj3;l"*=#KlTNJ<sf]i]67ie#hNC)[Z92_>H4[E(IR#[#$6tOIZ9iR/.5.`bcAq%gGGoR`[5LT5MtgG\-e</\BXnje+10VQ5XYpNJ1SZJ,9_6f?X11Fs&&?NP?+%p\jbhbeF&GVS>*c!KC2(Y[7up<WJHooYGt>p2+@q%fIV+34NQ+Z9K^qW95Fd4%#hIJ;a<6,*t2m-XSD&%g!0=U8%q14W&@T.,PRd9kI7'SZg-&YM&V,h72"YIIRLKe=r9d'CDKC0P%P0)%n/*(q3'A9-bkkdJa8bdB,^Y".OS'ZYPP(N'p$sjo9UUg_`Th\q<>^ZNMa.O2a+BsLit!K-&Ra,VVM"hpe(p3\_R<<R8b&UlZr-/f%GZGidD(S]%R]^_!@sVnKJY!HZF/R%d*L7\IhJS&<<:c95KH*3!8JHc)E%HqUos\\)n$-qcBk,S0^;KZFg2'V^B_ZQbRX.^Bb4ENU%1@*00GcP7m;@p+Z6E^Dd!>c<2:HmZPa'f",&OUj?fI>HE7Vr&K@#*M':Z"EUIL*FC*05:N1nj6>51b'iJL1lh1]ci(LNdfo#]TP3%+GgF=gDpS*eSHV`CJGKI3@(l70J&#W[FP"RfRB,qj_qlNcMk/smHEF^Y21L^$G+@BXd^KjF(C%O+QHeALGllnRjJVcB]<Sb_H'Mh%0te,>k._D5=;mU_NrYS-QTMLbcP_kq\t$OeBR>4O57V_"[:<lUibU.2k"!a$LC-JiP*pir.g6'(B@MIH@k1)^2Fb?C!mk2F5F>4_%"?5]QhdU52caRgH,\F]2/pseX5k.K!`>dlsiqqScD55/S_qe0M"j@ZL)%eeRYg,@5?iH`\ch(q.b4CPlM(<>eJ`QN(T>(lPhi@WK%4;I(J"\>Bm4i>I<7U7E3fDAL%N[`Htg\@t`^+#"Nl^KX^`n<i22[.Ft9pmWR=#b6)%$c&BUN:E"Dh<6%)nmOLTa#&NYm5>a(EM1[%0o7m=K)*oo@nek\WtiQ8NnP4CREgmiQ$T;`7+A2K7MjiGV[gYZgBsk1SU+W1L&U%TGVrqXOV>2e0@>b"HH*F>QMN8=X^)":)?.X;%Lqf"GE@OKqe#su)'rK(_'%GN'@1AQl*c5#;@;DA?-."KC`[P;"]i;/3Wq$\e[`*:R/<;;5!jYg$YD[YNEPWsYnj@^Q8:I,%daQ%X%9c5Xs.1=UH8*Oa0k#S&3*;G\Ej\@>0,iDa85k\3'YV7\?n'"Sll!Rr[Oa2"3V5Jk2CCur6;EQ\g$bIns>f(7fT1\[[eV=u^;R$aN%Z<,b`b(/iZno[16?JUqHs(DWJABM`?J8VO!X8NC\Z<8=H-jNDe<[7J@DsUYO2*6i`':a8+Ik99/+oB^>jHhY/;W*5$LknS-=i804%L)E(Y*NZn:]rG+=p=Z&\Z>>NPo[g].e^[[MFbs/#ODMAA!+Oh*;Tn!Tk^U^]6-CB7V;r\`_=O0J5&HTO+Bj<4/;$-E0FZh#C:sL-%XgW9&"bDfWBGWdnF/L&#ich+,knqN?W+4;QnQ+t^>,f@)JdHEY=i+hg6r-_>ea7r]PgJe.ZQRh7QNRk.(-E,.b\hSi+P\Ug"r$!^%_1[qoQJNX[6Sh1T]7Edm0R1s"ee<m@PER`M+Ju&Z;<h`83^GP2![/"m2CB+Q<QamF(sZ#]V`7ipDP3C%:RK)0`,=.(3TPo\r3#_L%6O*i_5,D:Eq3[AW(^=PF;P(e\S>8Xg$PR!8_1:;rQloQ:Z,9aY`(p*\/gpXH,"up\C&&`-$t:IE-3W7]_)mXk\eWfte7p%5(^.6[%8JAE=b/oq6"O:VQ#O(X9:tM8ge"bI5,r="X6<qhIb`%2<8]f^t-$e^E4h^+=G<Il%/EpReE_J%nK5rdo,tAdVJP"@Xf`b/#gKHCA%f,uT=I_5YdcUb;Z5UIl_'&lm-.!2$!aue;%+pOj%b7.9T\&$h*9\7L?0sr\ChKLna!KC[7o6&kkSNU>2Nhu'eJ,9Mpf1l0(b^p.B%%6T+<&9G29]tZD!mPO1ZZ%UMl#=L(oR)/52<\YrFK'+P`d1NJfWPWuh,\Yjc1Zh,%c><E*@2=f!Gq0uIpN2msR0Bi4>!4sngb:PI%6&Xb8TuesI`!q>HWY"PB2mP1uhN9%.if;E\k8bG^qT"2hI72X5-=X[DVKR(nLYnY'kQiquCTC6qA/n]BSI)(@.4$IQP5JmugA-2(%(`b_i-tKY]@GMe;3Wf\^e$4#+:bAnfa($ZkY$(bLAGmG]ih_l:4j"M?7`cut_R$5nZnlZ26Kscf)=\3&\8t!Ac6dTZ`+@6kDT)&r%n6+Z5,s\.[@?`e\%#f?hA>TMo9Tn<XUs=Pl>Y.0mX]W*O`Qj/3c6Z-fcN8$5WMW"u'46rlh+@)e#aUdtHkSUsDCrh;JnN:Q,gZ@H%:%Z@`Ug?Y+4Y\<^)F[FE^7G++`.`+GaV0<Ujmbh8XR*,^SdBBk/7Fc*d1_Qp,u5XU"X/37MFl*G&3Z/#MoTG=*-F.h'0R#gU1_>6%65!/Fo6W:-VrN`Z[id)'Ei;C,Brre0@X_L@\6e;k<^tJX.<e6PS4u"=qjiY:jj6m\W=eH0]B!*+J"i1hU1_>Jp;AWI9RIn3<a2J(%#pAG;7*fmUM%X`JOs3Wm9SeOs!P.E^+GuaMDgDEMTHe`#55FX\AU9i*26BRGPT[9,,WYJp"!YM&T&naE<l)A.&Nad0gTchLijXuQ%#L!F0]Hf!o\5XeK>q,kg\J\oD74_I!imq/1eLutaXAnP191$k#1*H1f/D*W&f/4^P5'N;Dj;)tb8Pm,[nmS"\jaD.r(_h@(C@d*S%V$s/\bH#GeEH)8m-^2OTRCWmJ>Ug+$%nb8L0EnQm*op7%mb->;D6HA%RnmT^bbm3=o;P,B>0Y)`]f8U/HJo;jc70bjeu:Nn9$BuP%l\%nW0Q)WW<$j/Pd8r/\m(UWG#edJIG8RglU02d_6'gtZWp3(!M>#L*Zjos?ZIsM!$R$7sJbq>,^PMB#frhPt"4OR-B&>3h/g,`'%:4u7ke+,;O<5lX5P>?s`edU=g%_$?mWA[T!k@EIF)"$(SG:fBI1^(?cegosc2:dYn2Qa3pZKYO!EK)M'e(`63'!0On*_2/%N6lkW%\md0O$teF`V3EMM@Gic$r0ABnqE6+H3g+n1!.X/)mJBXaM6+R'][J8WK^_jC6YsbtEr1al'XG,ph'i'!MBJ/o$`>06;lHW?22_kn%Lg(ad[ZXV$J[DCC#(G`;k9Z'hKgr).]ZoYEW\@k@olCkA1M9Y&LX/Y:)hq5*X1OXnL-$M=&#;sa-k^^g,92$]$9Ds$,VqBVX<iu;%_9gY.fDOG1MiaA`[WMbW%f3fs+s(3*,b9d[*Iq+G/B9r2']fTK>hLoZk92/FOta41PW@`]3bKihe(dHjoS$#qOjG>\l8J>cWVdFf%[ZJ:t=^gN:@l5;uEQC:J2ld<uCQ=MfOq8W0VPk]kG]%TM1L0&[Ce:JH5c3Zp7ULmA3>7VbRT;&A;j5(W[2uq')#>M[HRm/Z)CM6q%#QUhpjN$6HK-M!16JYe$.]Lc$UWQr;SOe&:1CM]b<Q2gu:_,'?(6*9SeWMs#`7<SW9]M2*9Nq)7L$9`"jGeQBhU-1`-6Z@$K\31!%]F?ZV^I%CNj(MJE(l2B+0RbJ=Po<f]-L]$<4E&9=oLD^<jSh#Lp+[b,&ehNVDH"09%P!FOrG)34[Rj#offj2&e<"O>'fPr<[=)'m%Cg4>r<b/'fZgBOl0mC[^p5,C5m^$+s^/qJG:Q4S;\]r5O-H:gMG3R'a>eaA3B8,f4`'kWsW@73mZMbF]3%e)E`Z9CXD.'$nZM?;<%\82hu.iCJj3Pl.GlgnTb`/%a-Z)TBfrf!h1q=D>:l+A[PY!oT^q5?jEgTK\b^r#XT^O:cHjWf3pk0J^kZl$Q,Lq3?QhHu]`<`pX<%6d/4@V8EX80%%d9W8Q$c?6GB:LiO<+Dj0:*]I3'"*Yk"tmpe%;;gtnQl@L?:/L=qZ-GFin/\+ST3R)W[&AOP]McTOWP;L`Z>h#iq%b?P)]"/;GkV=\A/2&Lir=HI%I88Hc\MLpN$3`QCt[-sBSOS+r<\1(/b<js.5jfGl8V2nYEX+-P-.4Zj`fHFm.kRWZRUn7b:S1R1t%!9*BOd(Jhs.m^KP/t$M'!N@8K+j`iD,:=S_W:/K[N*6h=haVJd$RH6Y8n3F>*Z^@,d1u2Cqh6!KCR^^s8Mn?:g031.9om$5bV)QK%'TmA+:nqSAZ;^#/3YlHe0Wi8,H8K6:@kg-X,.m04_S\&2/ZBIqf>fDiln'h?g%C#c*Z^@,dC"0r[*o[4WCr6T_0T+A4'Hd/\`Sc+%jsChO6B;>hc#>g,@DQ#n8V:C,Qha7!%AJ6^>*'Ce$Z\VcJo6,Bi6Dd/a62!)>clSG@hh2M4^4!]&k!\+>*(8!V-1Zegq:L*=HFJB%h9Tn'`jiF`N`hHR-=K3Sce/'XFL#opEg:%tR4QEEoR*-J(o+E]/IIRp\2.?NnQ@<,jVHp1\2?-PZlfJ@""]q&^6Q"@Jh/G'Xqp)U%=,NFuaE?48b^u>r[id&W(?C?@6:\I,j*OZ202]1iadt**(obg#/BD[D7dk':G#$;6%"s;PfdouYc3]mn0GJnl7f*tA9;rVnQMT-`%S1qDp"$9,\+JWj,VFKljo1Eb86'a7UA3k+S#</sm3?`!#%`g6C$).S@9;r/HCoP6BXB[<t6(,a(:j$d$(1\OkR5$86G9VOU&9cff%\;LusQP"aHnlsa0e*o25?Gi3M/G_[kdE2f*fklrb]8ZltgShse]cTgLa6.R5rA&,7O+#PJ5&@ijmZY!CW$)CE\QX,1&9Z_7hAKF#%7l'#NP#p?BRCa5DZg4P1kB4Nn#<a`SV[YBTB/7R\5%T\V)3I!if24eV*OV`@8bokUMHI+M)MWrWV([S4.P.f8f+I/B4>lOO_/qd:%5"\pf*:YnGqrkc>YK60Ch7jN2"/;$mp`*T3S?@r0#ntY7='-0Y)\nj4G6DJHhg8Ya^(%kq#;k$&9d+@HQ[;M?h,`Idfop63Z#MFK%<_k5r(9R@7'=MBj/o.qmO(lk@&@N6ABtHr^lRa*K>1pDj6"d6>/LG+IcJ@n/9%sYlBfe#4[aC3MXHV#"XqQC!=uh29ZrNgEe&?/4%S(uN4m8g<!TS_DgZo4P5gK4ITcGf2J<kT]_`^4(kJT:pA<(u*;OLkb_09BWr_d[\%?HFfN;pFXm74V>8Xf;j<GpT9O`o2-%SbsO8%=k)'i,fNgF8"VANHMhZ$le5e;(CbjGX+F;H_BiS4OTJM/X+]%EWEn+robA=GY75O#Ib@NWSU!G^B'Eu!DRK![RB6StR0udf'XFd,%7QU^!O`aJ2/Xj!Gkd(*=OI*>5kV@*Zek/=m^,[UN%n*J%@`AleSho`=X?%oh_Pe'M5D[ZQgZ0kIH8JE*2WPpkrGj^)p!A%@J>,!7%/fq9k?cJ$pp/f6>Pj[SM,1q<>!It0kng`lV&5r2U#F$:LNJ;IuC<f8np]a)X_N6Y`q`&cDpEu+TkcG;+-8]+i%L&^UCSNgT3<utT%8AJ9J#[B@]J3*t@_:(^iQM_1I<8!.V:6X$BK'sjZ@#Wm`#*.E&6B\hBq-B&s%^BFc]Eh1);+FOXJ6i:lN#R#(H-X]\$MHb>*=MR>%=Q^Nk(#kJh=i@$p`>j.V93iIL:UQI@8g!?he8RM_Z6Q_LIchOXntPE(9'h1R__S_hR[;D5I'.JQd:ucRa;DB7&i8*,PS3\e'SL3-%)tW&/)LmmR"$n/;0O%Mo5!2s2=*tj)+^u1?"\lnX&lt9:3YJXJ+K^Z;<O3's!;jc.D5l&n`l.(R)C=ujmiRM(Y']uXC`0=q\Cs.S%VTJ:Af+mULk,l'77#XkS*sT:LD7BHtEqSn<o)YnW7^D:X]RB)B&P#<p%iK.TJs]Uq4,4@[`mF%*f^M;-7SY0dai25#_]@H(!,rr[%2:aM;Ec%C'b[R$oi,1M+OOj9Z\G"=mNWdM*ih-D<K8FT:h@CV[NB?/?jE#`>"<Bp8SaF/Gn$k%>+7.OCcMA/7CLpP5WJZ+2!ir3'%$lTU,kV[hd#RahFmrd,QVM[N[OV.b2#d<R?]c];,@L]KrIPPQ3,AU0_M(f[/Xh]2SF=OCQ&-p%FW=5OHUqfYO8f`_g:qIlKmto!4%+gqkm@$2C9d"bq+93&i'l-g4,DZ/+d\bb8N$"X\MEUB\;M>?LsYM11%G>A6t6mM9IF#%U,+WT1O9KkWq:%B]h:!cf]<QD+L,DJ%g%CYsYU@SGRRi+2'K<!DsEhlS\iooaXJm81B!BC<.6O%?&KXUYUqClmNWdZr_&InEhj/#YgA2B.LE%*<QZ6_9hjd"a&cg.D]&clTeb%^VFZ_.:td,_ATL4V%`t?7u<&.l&_PsbPf;!=1T#VC=TkGOO&XUark,TjO[9i<-:kV"PV*o_VOLGohuEL=MEoUTM<?b)3nAu]i?:G%C3]A$7,#;%$4Kgo5!LD'5mO1-H.+S-*"q^ia4N2/F9;,)kK/[]Ge1`Q!(8Vu)I:+-5jPV@&'FlD!Hl&:2dlt4Z(7V`Om[P9cCO5/%1*PuW^2r*==eClD4#OL!"@&;V$Q0$J^hCe&*(0EGR2L7`Ll)h+%X*etNEu]h5O40CfEcbT:5WhKJh]8/:_C!46g;Z>UDa`L`A%U\%HVpsXnI3*P#RKo&c1RX.@L._F?FLOO7H9#l4@^N)&$D.*ipjEUW8:(@i8_D:Z,4cH!R+Ap(Tg)a'VB_sCguHR9;e:W2tZKcO4/M2%a;aa,1TG>"^3^j;>7jWcMu:#?Z/d(ZFZbQSSOlp'Rh<fC>S>`9%jh]^1-jr4Mhnc>J>-`3B\-9GZG)H>,+a&-6d^.>@k`M6S;:P?%AsRFQM]c!dbu_urG<ueqj0oQM1$+6\H!C_oiu0;H.abs9VGW)`L?Qp@?7[_oeD"q5FkMqRk98sZl:&]1)mX^*R?L91QAn1T:u;o6%SR"2jH]#NSrV-AV-nNc2'3=5%%Z.;)8c6M'PrqD2`"Y'A1g6Tq'_QF8@g=8<R2@g`MD6:3VFB1oYb:+TI\a[JOCS&_*TC!V,$^;`%9?*^`]gP]W*TK;6hcaP0e268P"/]'+FhV??T>MoH*ar>WgWP4pUcFa<iNXEd90<nX[7Es.4tNd=W"-(04Zr$E4q^,5OsdjZ:h,t`%$rRNMn+m.%C#Q3%]T!L8q/@FNa_oMu:^Ibe5:mA*(^AkL16L4feEoQuninH?ae7`,=MkD,4K#Wrpf3Y5#&G]_?'o0>:/crQDOI'+%7YJY]@G"iDOVShCW@+ujOgjmC`eJ;UpS+j6D/@61!o\[#8V<$u]h$TJ(DHFqUmtj#Ac81TI>..2+Ld"te)^[9pHO#nN2&7Q,8T/J%Co7G5LJeae=teXR3/>!1]h0fM+nO4"$XFd_&pEOD462jbeAMZu@u)7+RKLVd]su@\Gcts"ZXJkOmDT*T$9o_6ocB)f9V.1r)1lG,%iHQjpZ?:8YQW\qFliX$Ul\l:*U(9\7?kRM$l9UkrJK1OV@JGdVZ;rZO2*)ps:QD5b#=bC6HEq<G^)*,YN65ADCojPhr2qZ!A,+8]%AGDOr13oaYHj/<.2!)"FrZDigC^?nX17Bt%*K7T4fq#Dk#<+sTZ0:g#)_-<M#c:*H@i"HE(_@#P.4cb&J5cU&AQ'"0%,L+@#chiZ%q-ubMeHB[Ta6:mCQNY9QN*eccpsZ`0VDneO;PrOu@5JuuUcu79,oQMD`M8ElR;"`"GRE$K/T4W?.$DT&KXg[t@H:8fV,np=aNOkk%'rEgj`6AN#E_)s$OW;/nP/S&UB'+`5Mq\d1;t`jt<lU5T!<F#>X_:!#18X!1f`m2@_Y7k3QoY/1@p>Rr1c%Zm$#sN;@5K*7:*/19%U+?(PKVBCsAApCZd1$?`$'Ge\I1ZRuQo6G+,ST/AKS7a'0Hc<e>;*ElLDdD^'KImP))-0@i['HGBhV^D9UT<cZl]9^S\<3W-G22_%rL.CaR,[1ENYgEL7gu%%+:n`_q%]MU[iinS+]?>&!K_r^1a&Escoi9YJ/q/"VYKu6WD/c-"ebr?YV71FN!9D9.)Y0E'[0YVq0aI6%BQZ#ud4>Pg1c-p<#^9amhT>ABPeaZ8ZC$P++@Z/c04O3/%gH9(1;W_J\QP"+&(lR";@;I8e(F+O0]0$,>,Vjc7WT<uI4+S:8tfKW%n@P6"X1=K.LKsmYr'H.Dqbs+-'1T/',(1nkK!fgrV5.1I^)'MRJOh>R+mA7!EI"To4n7sWCcmHn3*(^k`qlD/]j7=$%V$7b@]bRs%G2&b0f[i)"h;Rg=$0+)d&.b!>L+jeG=eI#XoRmWiJWah,,#D1i7RI$H/MMNbS"b:H8Tg9dSJTOjeh&'l[?2!ThV%>G1WaCS@kr+X%nsrJZU61Uf.g?bBD1_0Np$IB*ScMN4Bq)M!W2*<RM?d:c,gYRWUuB.Qg'Yc3d?;YV!qDVc_"c?4NYnI&HkhZY(+j7U(WM.lgCGuW%L8XR<%Faof8\VQ+;=k_Y8S^o7>c<]p%B9?@e?;s[]TA/s6X)g'+.I%g4N9j)$e^fAW,87oK\t1fJW4s_9@AhOe0H*hD?G]03h6:h%n]j$]l6h_YHM&3(P"LQ/N+bd-=,EE9ajB"=[:cobLVL,h4N(F1,R(r9nWds7$OLhtJrW$tmq`Y4+;QW0X^HA&n46R2'B&=qJ_<+(%3q@Me,pMk9B:;R?2.XV3GY,@7:_u=&a^SGdUg;W$g@+g`L'_Y^&W[k2O-eohgO683;&Mco=Y=m-3B`NX.+kfC"T5`iYe(oihtFrS%C0Y)j+9goHTFk!ue(Ydc[`)(RaLo<_Oa="[Bjm$dR5<nO,(l,KjU2Kf+WW,T:PI!:8EOS?CD<9BnrP11bgNRtFFGolYK_Tc0IG,"%B*!,m9R:"Vh"U$W^lQCsVt"%F5d*t#(/3lXG)_bB!BL2s-3L";/2JgI9Pa4*FPU/>=b)gWgBRHY-"s*XZp7`NcjSPO!`M!%6S:c>%OA`H%fj7>2jRUj]C?$&_WL8sn*:bnUb`\*!f;\(09op-(QqrH1C-gC!lCtY9EurAu?/pC&0J/AVi)6#hTSq8#C4q3Ge,h@jOg;9A%Q(Il;W-*?5bZE%+:.^lM$;m`s?qAfcUf]5'mnl;m9Elpi\8!5EeBT7u9sb[,UYJ2EIW--1(C#NMA^9FK=p["diT1,a)[.@B+$$,p%8V.GY\"oW7./b0keRX[:G'^)`##B,*LB1@1r!Oo:098C@OT.:p*Dd-dF7Ab^/SObd#-V?@+b=:1fTA+A9X'u;=+Kd5^R@e2=$%7u%p(5G8]'Wt@.Sr!/L)/cE"t@%JRfmFIac1.'-2-+3558OQQY+]U/Y]Sn\@[iS*fMAS2S)`*+W#eI3%Uk\P)t(HK<E:"5h[,sk-C(B%7\0RSSU]J6TfaG6M"V:7+OgY5-)(fG,a'<de4CY'<k*hYpu:+4UonA95A,gOUf`inQ\uJiJrt/pO?[C#d!*_p_0NMci@Y#Vc=4mh%377soR,l=a6Jq1.e\6obA.=+S2Z(5C:L-;5Y`#^<%4p;GN33V%OQrK(B>;e1CoQgg=&L#thW:_BkA$JUQm#N;'50GcJkAFMO_0]C%g4NRf[e^F4FggljQt#huWa9aVK;YDhA@QBQ!tt@#I+fSLj\S33NOX-[9;-tnol*4i7X/km/`THqGkHPTa2eTtmRk-H"*,,2J^b8J%dO]L]kmhKRQ>rbI[FPb-M0@,fW(oGA#\tu'VGfo\5]2d$MA]*(dFUD2ie,4"9r#ebdF+)[3O;*^=EO!D5&N-4?U)C_G>:@5j*CnC%("hss@W$pMcssWk:`>LZ(niZ0cnkrkYk2U!Q+-IHOYp9O5XA$:6+;"Qp>[ViK&YE0cr:3Kan25r,snU03Nf7Q*CVX;'j[4ek.nc&%;]0%JTebEdn!=Q^U;8UY0`^5W1Q>i#C.*@;g[Mo+fRqNfA;o[G&S#?6M<PET$ILkbVDeM'-l^bWn,Z!EK\dh%fU/MWoS+BPn&buV%W]0:Kg05Dio#q5jhN1"O)c2gL,9QR)ii<KFM8LnjFResd+g[a(%U&mVer/qrO>02$3rngg$tVn3RZrOS]=.c4#(t^61VCS(#9Y;*%:`U/cWWPM@E"q1uMh#f<5X&pQ_fQ,$?HqX-*CX%pDI%Ir5c-UGQun)dRdM;PAh?L#cHD0N-=cI0`i7c+2hgN,JBGihn,7l;nVU,:%+K$SCQ9,VtVGmpFWV1;!_;LoCOkEJo!Y_Vm%m:'_6^cO`&',%uSj<%,&s/ehmM*((N1RW[d4&hf-+7c^RA-sqQJLFI++O"&j4^Y0%KBO/;TcVDE@(JAF*s::>J`.T661p7A#Qfm!Z4ZN'lDJ&l8Y"H[fi85f<>ZWC(T@OkP>hb8n.;V%)8[JHH+._HPkPa>">:f:fY]"7%%4hJ:h)K'lh\BtI2A&$F4t%a0mNTG_<s8g4qPr(PY]cu2bT[T\1BAL?_oj\B]?IPcU"mJs84XJ)KchFe+T_^]m2DS&^if[VUXl+%%.hr,$[`HUU]9S"f2BhYbKhM436^)<&rW;)=nFk6fjZQ!MYF-Hi5%`"bN`iju+\Bn#Dd0YtQT0^A)fIY\fK0H\Nhd,,bf,QuX9gJt%"Y9rRm!/mGfMP&>=bR,f!m!rWZMFgF%@^7Y2I=]lKT._RGU-u*@8ojS/o?P]X6idf,)WHsKM*7^B>0X(4/bS*>::/L0&$A3g6a9D%ap_iD2A;C\r=UJ#$eVOeKM*9Rime.nd`/N=KsVFgOu<A`B`h*hF^Cl"\T,EQkJEg.AL"9^[<=0>^m\R]P04Z7F1*6/+;MBIlDG>I%F:WN/":a]&4CDe[?gaj2kWDW);[Nh;A.:mmciC@UnHdr9F?U0j>D`D(heNu5BS$FXAecR>B]*T2Zb3oCOWbMt*6a"(J1bNN.E3i/%fL\(p&=J/1"Xb(k:AB+3#QfS.11*?R*h8&<-011d\7J`=e;un`NP^*9(PqRr3<S%Ie4J7s_s16j&9fYL(bIKk(.`nI?DBT>%dL4,%B5&9Qqj'D_XrmYmh#0lW-@<k-b[au[K8HdrBjlrj5LhHaP!hRoD48;4I]A<;:8\/U`Y*F2Z(c*eq_`rmGIg%1(ORpg,6k)MVKJ/n%"F<glVh1H(OQ;G"!q)@8>^>Ucgrl,uR]`Q6O50JOJW&&l-'@IW4W!._+@.IFSKN,@9q_<Sb,Xc)2c2Bu:3`G7IB;KB8L+a!0:qWW%Z9d9fi&/KKUlArGU0D46ksN$)BS'lASh=O_@L`Vs:KWAk+0;g]SG]h^e!_G(PY<2?8Q0!4XR(l(P+'CURb?o"YLet[$e^(j1j-&t%o68Qo8Yq@Dic:KBj6eNTO'sYLC^*rIp"Ju^*4d\PK6/P:]fE.bO!]l(@uFqR/ar$ae+^%:U%oDY6T'GWk-LiPkEOd$k'aV3Nb0+-%iUB_[;"sV1DDP?@nP`^iiSK6_C'NKE<IV#^pB!7E?3>E$n3"W.bl"%F'`P*=9L<^BpE>oP<YM"iC=-h&QR+>ViqW=:n8;BmWgk#l%E1!#^5a-7dQa<0J*p!Lb1XPCi+m0mXj=XcA!pL3*TUVU9F;&>^0$8;XRUY*p&DG%L09RsQC$t8TB9Fm?@9u61XZicsFmme?lOFLO%lLc($mNG0<Nh0e;"&BRnLVE2T*a12QXW4,h=),4YhH49Z]`f+E?33jPPnKgN29o4Q4cl:>CL;ar.kA,8%;Q2J+=_jjklTgER\ZFG%OE;.LOtLLr*aU"!kYER]Rj;8N:obhqh_5;Do4o17_]+g'jlu)9?.&mE133b&lGo7Pn1$Y.r-FjodVa)46deCX*mHR5`/+JX]Sks:%0eZT64EA^u`WFiC74cA_);[36*8:pcXc'e-aMcm7PIR)I'6c_BH<Po7j7-otH8GpPNcoAO.SO]Ri\'qNmMC*!#A8X4s6lOCq;Nco%J+pi6^4-+"fAD&Km^p4rs)^Ok>Q6n3k>+<hrr'V&J`?LW:N-)[`[!EUB'X\-)Ful[OI)k@s66lQ^\L*?[8'Ib>aMcc-]\-)S`!Wk%LOLA8USNSfn>:E.VLM#N00as_jRZa/07N`A+(!h&jid,L][?cZq3PH:rJ_qXS`i;mq?R&f3333^Wr[$e?iK*M;ec0BJ+ig2c/\9k%jS-E<q;&6'nbgjKD>V:eqm5H]5QB9JIBctZ^\[<mDf&b6oB5GshuEJYR/HR=Ip.@$c-uBfs8;W?`o4!7Ip)gC&*jc+[@eV6bO_p0%s6\^Qk<InF^O<-Em^4e4dDr.D#<$:K[Ue;h!`<@"BbFhQp5Ypjrpf7!172@%o`j!uV#mVN='Pp[#PWA41eE@O0,\"ehRWA)T`=p)%G\f''!*mS+!Z"0SJu&M'Bj?&l?@FM7+UCeQJHM>M:?3W.6cT5>r:gJf#**[,Ti#[7?g%"lbWikEVChQeLc<\><%L:LS:VF8=Flgh%^5_;7400#_8cso_4o@Ar2[@,6<-<.n?`0ho4X'S&[-*(fmAN["/H,mO#&@jA@3W@=//922m8tlF:rs<hPW,X[kt=$WjS^!(=.UD6%&ES[aKT@1E4:T*-QibF(H>(Z_GCpX39/V`j3V*.UY?Ao6+I':!$Ei]d/P?I6(ubsYZ^jHWMINEQcX*/bXj--S85W$R-sJn@f(cbp%%`R!a'LgO!IBt&1s3>m?O8*Yl/H+U-H2d?5XB!7E/B(ODVg`^n'kP<^!f(u(1=D#:+HJefn]SV\Q`'<$./oZ>i"<a%jIb=Xp#Wr9%p[7>XMd(Z'rO`+*o(h*#hgG==]-"cbe,#QsYJ0o)q]EQNm`Xe^s7=teJZPJGo1qRGj_t.tl$i^RIFgp~>%AI9_PrivateDataEnd